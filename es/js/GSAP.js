(function (global, factory) {
  "use strict";

  if (typeof module === "object" && typeof module.exports === "object") {
    module.exports = global.document
      ? factory(global, true)
      : function (w) {
          if (!w.document) {
            throw new Error("jQuery requires a window with a document");
          }
          return factory(w);
        };
  } else {
    factory(global);
  }
})(typeof window !== "undefined" ? window : this, function (window, noGlobal) {
  "use strict";

  var arr = [];

  var document = window.document;

  var getProto = Object.getPrototypeOf;

  var slice = arr.slice;

  var concat = arr.concat;

  var push = arr.push;

  var indexOf = arr.indexOf;

  var class2type = {};

  var toString = class2type.toString;

  var hasOwn = class2type.hasOwnProperty;

  var fnToString = hasOwn.toString;

  var ObjectFunctionString = fnToString.call(Object);

  var support = {};

  function DOMEval(code, doc) {
    doc = doc || document;

    var script = doc.createElement("script");

    script.text = code;

    doc.head.appendChild(script).parentNode.removeChild(script);
  }

  var version = "3.1.1",
    jQuery = function (selector, context) {
      // The jQuery object is actually just the init constructor 'enhanced'

      // Need init if jQuery is called (just allow error to be thrown if not included)

      return new jQuery.fn.init(selector, context);
    },
    // Support: Android <=4.0 only

    // Make sure we trim BOM and NBSP

    rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
    // Matches dashed string for camelizing

    rmsPrefix = /^-ms-/,
    rdashAlpha = /-([a-z])/g,
    // Used by jQuery.camelCase as callback to replace()

    fcamelCase = function (all, letter) {
      return letter.toUpperCase();
    };

  jQuery.fn = jQuery.prototype = {
    // The current version of jQuery being used

    jquery: version,

    constructor: jQuery,

    // The default length of a jQuery object is 0

    length: 0,

    toArray: function () {
      return slice.call(this);
    },

    // Get the Nth element in the matched element set OR

    // Get the whole matched element set as a clean array

    get: function (num) {
      // Return all the elements in a clean array

      if (num == null) {
        return slice.call(this);
      }

      // Return just the one element from the set

      return num < 0 ? this[num + this.length] : this[num];
    },

    // Take an array of elements and push it onto the stack

    // (returning the new matched element set)

    pushStack: function (elems) {
      // Build a new jQuery matched element set

      var ret = jQuery.merge(this.constructor(), elems);

      // Add the old object onto the stack (as a reference)

      ret.prevObject = this;

      // Return the newly-formed element set

      return ret;
    },

    // Execute a callback for every element in the matched set.

    each: function (callback) {
      return jQuery.each(this, callback);
    },
  };

  jQuery.extend = jQuery.fn.extend = function () {
    var options,
      name,
      src,
      copy,
      copyIsArray,
      clone,
      target = arguments[0] || {},
      i = 1,
      length = arguments.length,
      deep = false;

    // Handle a deep copy situation

    if (typeof target === "boolean") {
      deep = target;

      // Skip the boolean and the target

      target = arguments[i] || {};

      i++;
    }

    // Handle case when target is a string or something (possible in deep copy)

    if (typeof target !== "object" && !jQuery.isFunction(target)) {
      target = {};
    }

    // Extend jQuery itself if only one argument is passed

    if (i === length) {
      target = this;

      i--;
    }

    for (; i < length; i++) {
      // Only deal with non-null/undefined values

      if ((options = arguments[i]) != null) {
        // Extend the base object

        for (name in options) {
          src = target[name];

          copy = options[name];

          // Prevent never-ending loop

          if (target === copy) {
            continue;
          }

          // Recurse if we're merging plain objects or arrays

          if (
            deep &&
            copy &&
            (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))
          ) {
            if (copyIsArray) {
              copyIsArray = false;

              clone = src && jQuery.isArray(src) ? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }

            // Never move original objects, clone them

            target[name] = jQuery.extend(deep, clone, copy);

            // Don't bring in undefined values
          } else if (copy !== undefined) {
            target[name] = copy;
          }
        }
      }
    }

    // Return the modified object

    return target;
  };

  jQuery.extend({
    // Unique for each copy of jQuery on the page

    expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),

    // Assume jQuery is ready without the ready module

    isReady: true,

    error: function (msg) {
      throw new Error(msg);
    },

    noop: function () {},

    isFunction: function (obj) {
      return jQuery.type(obj) === "function";
    },

    isArray: Array.isArray,

    isWindow: function (obj) {
      return obj != null && obj === obj.window;
    },

    isNumeric: function (obj) {
      // As of jQuery 3.0, isNumeric is limited to

      // strings and numbers (primitives or objects)

      // that can be coerced to finite numbers (gh-2662)

      var type = jQuery.type(obj);

      return (
        (type === "number" || type === "string") &&
        // parseFloat NaNs numeric-cast false positives ("")

        // ...but misinterprets leading-number strings, particularly hex literals ("0x...")

        // subtraction forces infinities to NaN

        !isNaN(obj - parseFloat(obj))
      );
    },

    isPlainObject: function (obj) {
      var proto, Ctor;

      // Detect obvious negatives

      // Use toString instead of jQuery.type to catch host objects

      if (!obj || toString.call(obj) !== "[object Object]") {
        return false;
      }

      proto = getProto(obj);

      // Objects with no prototype (e.g., `Object.create( null )`) are plain

      if (!proto) {
        return true;
      }

      // Objects with prototype are plain iff they were constructed by a global Object function

      Ctor = hasOwn.call(proto, "constructor") && proto.constructor;

      return (
        typeof Ctor === "function" &&
        fnToString.call(Ctor) === ObjectFunctionString
      );
    },

    isEmptyObject: function (obj) {
      /* eslint-disable no-unused-vars */

      // See https://github.com/eslint/eslint/issues/6125

      var name;

      for (name in obj) {
        return false;
      }

      return true;
    },

    type: function (obj) {
      if (obj == null) {
        return obj + "";
      }

      // Support: Android <=2.3 only (functionish RegExp)

      return typeof obj === "object" || typeof obj === "function"
        ? class2type[toString.call(obj)] || "object"
        : typeof obj;
    },

    // Evaluates a script in a global context

    globalEval: function (code) {
      DOMEval(code);
    },
    camelCase: function (string) {
      return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    },
    nodeName: function (elem, name) {
      return (
        elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
      );
    },
    each: function (obj, callback) {
      var length,
        i = 0;
      if (isArrayLike(obj)) {
        length = obj.length;

        for (; i < length; i++) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      } else {
        for (i in obj) {
          if (callback.call(obj[i], i, obj[i]) === false) {
            break;
          }
        }
      }

      return obj;
    },

    // Support: Android <=4.0 only

    trim: function (text) {
      return text == null ? "" : (text + "").replace(rtrim, "");
    },

    // results is for internal usage only

    makeArray: function (arr, results) {
      var ret = results || [];

      if (arr != null) {
        if (isArrayLike(Object(arr))) {
          jQuery.merge(
            ret,

            typeof arr === "string" ? [arr] : arr
          );
        } else {
          push.call(ret, arr);
        }
      }

      return ret;
    },

    inArray: function (elem, arr, i) {
      return arr == null ? -1 : indexOf.call(arr, elem, i);
    },

    // Support: Android <=4.0 only, PhantomJS 1 only

    // push.apply(_, arraylike) throws on ancient WebKit

    merge: function (first, second) {
      var len = +second.length,
        j = 0,
        i = first.length;

      for (; j < len; j++) {
        first[i++] = second[j];
      }

      first.length = i;

      return first;
    },

    grep: function (elems, callback, invert) {
      var callbackInverse,
        matches = [],
        i = 0,
        length = elems.length,
        callbackExpect = !invert;
      for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);

        if (callbackInverse !== callbackExpect) {
          matches.push(elems[i]);
        }
      }

      return matches;
    },

    // arg is for internal usage only

    map: function () {
      var length,
        value,
        i = 0,
        ret = [];

      // Go through the array, translating each of the items to their new values

      if (isArrayLike(elems)) {
        length = elems.length;

        for (; i < length; i++) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        }

        // Go through every key on the object,
      } else {
        for (i in elems) {
          value = callback(elems[i], i, arg);

          if (value != null) {
            ret.push(value);
          }
        }
      }

      // Flatten any nested arrays

      return concat.apply([], ret);
    },

    // A global GUID counter for objects

    guid: 1,

    // Bind a function to a context, optionally partially applying any

    // arguments.

    proxy: function (fn, context) {
      var tmp, args, proxy;

      if (typeof context === "string") {
        tmp = fn[context];

        context = fn;

        fn = tmp;
      }

      // Quick check to determine if target is callable, in the spec

      // this throws a TypeError, but we will just return undefined.

      if (!jQuery.isFunction(fn)) {
        return undefined;
      }

      // Simulated bind

      args = slice.call(arguments, 2);

      proxy = function () {
        return fn.apply(context || this, args.concat(slice.call(arguments)));
      };

      // Set the guid of unique handler to the same of original handler, so it can be removed

      proxy.guid = fn.guid = fn.guid || jQuery.guid++;

      return proxy;
    },

    now: Date.now,
    support: support,
  });
  function isArrayLike(obj) {
    var length = !!obj && "length" in obj && obj.length,
      type = jQuery.type(obj);

    if (type === "function" || jQuery.isWindow(obj)) {
      return false;
    }

    return (
      type === "array" ||
      length === 0 ||
      (typeof length === "number" && length > 0 && length - 1 in obj)
    );
  }

  var Sizzle = (function (window) {
    var i,
      support,
      Expr,
      getText,
      isXML,
      tokenize,
      compile,
      select,
      outermostContext,
      sortInput,
      hasDuplicate,
      // Local document vars

      setDocument,
      document,
      docElem,
      documentIsHTML,
      rbuggyQSA,
      rbuggyMatches,
      matches,
      contains,
      // Instance-specific data

      expando = "sizzle" + 1 * new Date(),
      preferredDoc = window.document,
      dirruns = 0,
      done = 0,
      classCache = createCache(),
      tokenCache = createCache(),
      compilerCache = createCache(),
      sortOrder = function (a, b) {
        if (a === b) {
          hasDuplicate = true;
        }

        return 0;
      },
      // Instance methods

      hasOwn = {}.hasOwnProperty,
      arr = [],
      pop = arr.pop,
      push_native = arr.push,
      push = arr.push,
      slice = arr.slice,
      // Use a stripped-down indexOf as it's faster than native

      // https://jsperf.com/thor-indexof-vs-for/5

      indexOf = function (list, elem) {
        var i = 0,
          len = list.length;

        for (; i < len; i++) {
          if (list[i] === elem) {
            return i;
          }
        }

        return -1;
      },
      booleans =
        "checked|selected|autofocus|autoplay|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped",
      // Regular expressions

      // http://www.w3.org/TR/css3-selectors/#whitespace

      whitespace = "[\\x20\\t\\r\\n\\f]",
      // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier

      identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
      // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors

      attributes =
        "\\[" +
        whitespace +
        "*(" +
        identifier +
        ")(?:" +
        whitespace +
        // Operator (capture 2)

        "*([*^$|!~]?=)" +
        whitespace +
        // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"

        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
        identifier +
        "))|)" +
        whitespace +
        "*\\]",
      pseudos =
        ":(" +
        identifier +
        ")(?:\\((" +
        // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:

        // 1. quoted (capture 3; capture 4 or capture 5)

        "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
        // 2. simple (capture 6)

        "((?:\\\\.|[^\\\\()[\\]]|" +
        attributes +
        ")*)|" +
        // 3. anything else (capture 2)

        ".*" +
        ")\\)|)",
      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter

      rwhitespace = new RegExp(whitespace + "+", "g"),
      rtrim = new RegExp(
        "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
        "g"
      ),
      rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
      rcombinators = new RegExp(
        "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"
      ),
      rattributeQuotes = new RegExp(
        "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]",
        "g"
      ),
      rpseudo = new RegExp(pseudos),
      ridentifier = new RegExp("^" + identifier + "$"),
      matchExpr = {
        ID: new RegExp("^#(" + identifier + ")"),

        CLASS: new RegExp("^\\.(" + identifier + ")"),

        TAG: new RegExp("^(" + identifier + "|[*])"),

        ATTR: new RegExp("^" + attributes),

        PSEUDO: new RegExp("^" + pseudos),

        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
            whitespace +
            "*(even|odd|(([+-]|)(\\d*)n|)" +
            whitespace +
            "*(?:([+-]|)" +
            whitespace +
            "*(\\d+)|))" +
            whitespace +
            "*\\)|)",
          "i"
        ),

        bool: new RegExp("^(?:" + booleans + ")$", "i"),

        // For use in libraries implementing .is()

        // We use this for POS matching in `select`

        needsContext: new RegExp(
          "^" +
            whitespace +
            "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
            whitespace +
            "*((?:-\\d)?\\d*)" +
            whitespace +
            "*\\)|)(?=[^-]|$)",
          "i"
        ),
      },
      rinputs = /^(?:input|select|textarea|button)$/i,
      rheader = /^h\d$/i,
      rnative = /^[^{]+\{\s*\[native \w/,
      // Easily-parseable/retrievable ID or TAG or CLASS selectors

      rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      rsibling = /[+~]/,
      // CSS escapes

      // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters

      runescape = new RegExp(
        "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)",
        "ig"
      ),
      funescape = function (_, escaped, escapedWhitespace) {
        var high = "0x" + escaped - 0x10000;

        // NaN means non-codepoint

        // Support: Firefox<24

        // Workaround erroneous numeric interpretation of +"0x"

        return high !== high || escapedWhitespace
          ? escaped
          : high < 0
          ? // BMP codepoint

            String.fromCharCode(high + 0x10000)
          : // Supplemental Plane codepoint (surrogate pair)

            String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);
      },
      // CSS string/identifier serialization

      // https://drafts.csswg.org/cssom/#common-serializing-idioms

      rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
      fcssescape = function (ch, asCodePoint) {
        if (asCodePoint) {
          // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER

          if (ch === "\0") {
            return "\uFFFD";
          }

          // Control characters and (dependent upon position) numbers get escaped as code points

          return (
            ch.slice(0, -1) +
            "\\" +
            ch.charCodeAt(ch.length - 1).toString(16) +
            " "
          );
        }

        // Other potentially-special ASCII characters get backslash-escaped

        return "\\" + ch;
      },
      // Used for iframes

      // See setDocument()

      // Removing the function wrapper causes a "Permission Denied"

      // error in IE

      unloadHandler = function () {
        setDocument();
      },
      disabledAncestor = addCombinator(
        function (elem) {
          return elem.disabled === true && ("form" in elem || "label" in elem);
        },

        { dir: "parentNode", next: "legend" }
      );

    // Optimize for push.apply( _, NodeList )

    try {
      push.apply(
        (arr = slice.call(preferredDoc.childNodes)),
        preferredDoc.childNodes
      );

      // Support: Android<4.0

      // Detect silently failing push.apply

      arr[preferredDoc.childNodes.length].nodeType;
    } catch (e) {
      push = {
        apply: arr.length
          ? // Leverage slice if possible

            function (target, els) {
              push_native.apply(target, slice.call(els));
            }
          : // Support: IE<9

            // Otherwise append directly

            function (target, els) {
              var j = target.length,
                i = 0;

              // Can't trust NodeList.length

              while ((target[j++] = els[i++])) {}

              target.length = j - 1;
            },
      };
    }

    function Sizzle(selector, context, results, seed) {
      var m,
        i,
        elem,
        nid,
        match,
        groups,
        newSelector,
        newContext = context && context.ownerDocument,
        // nodeType defaults to 9, since context defaults to document

        nodeType = context ? context.nodeType : 9;

      results = results || [];

      // Return early from calls with invalid selector or context

      if (
        typeof selector !== "string" ||
        !selector ||
        (nodeType !== 1 && nodeType !== 9 && nodeType !== 11)
      ) {
        return results;
      }

      // Try to shortcut find operations (as opposed to filters) in HTML documents

      if (!seed) {
        if (
          (context ? context.ownerDocument || context : preferredDoc) !==
          document
        ) {
          setDocument(context);
        }

        context = context || document;

        if (documentIsHTML) {
          // If the selector is sufficiently simple, try using a "get*By*" DOM method

          // (excepting DocumentFragment context, where the methods don't exist)

          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
            // ID selector

            if ((m = match[1])) {
              // Document context

              if (nodeType === 9) {
                if ((elem = context.getElementById(m))) {
                  // Support: IE, Opera, Webkit

                  // TODO: identify versions

                  // getElementById can match elements by name instead of ID

                  if (elem.id === m) {
                    results.push(elem);

                    return results;
                  }
                } else {
                  return results;
                }

                // Element context
              } else {
                // Support: IE, Opera, Webkit

                // TODO: identify versions

                // getElementById can match elements by name instead of ID

                if (
                  newContext &&
                  (elem = newContext.getElementById(m)) &&
                  contains(context, elem) &&
                  elem.id === m
                ) {
                  results.push(elem);

                  return results;
                }
              }

              // Type selector
            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));

              return results;

              // Class selector
            } else if (
              (m = match[3]) &&
              support.getElementsByClassName &&
              context.getElementsByClassName
            ) {
              push.apply(results, context.getElementsByClassName(m));

              return results;
            }
          }

          // Take advantage of querySelectorAll

          if (
            support.qsa &&
            !compilerCache[selector + " "] &&
            (!rbuggyQSA || !rbuggyQSA.test(selector))
          ) {
            if (nodeType !== 1) {
              newContext = context;

              newSelector = selector;

              // qSA looks outside Element context, which is not what we want

              // Thanks to Andrew Dupont for this workaround technique

              // Support: IE <=8

              // Exclude object elements
            } else if (context.nodeName.toLowerCase() !== "object") {
              // Capture the context ID, setting it first if necessary

              if ((nid = context.getAttribute("id"))) {
                nid = nid.replace(rcssescape, fcssescape);
              } else {
                context.setAttribute("id", (nid = expando));
              }

              // Prefix every selector in the list

              groups = tokenize(selector);

              i = groups.length;

              while (i--) {
                groups[i] = "#" + nid + " " + toSelector(groups[i]);
              }

              newSelector = groups.join(",");

              // Expand context for sibling selectors

              newContext =
                (rsibling.test(selector) && testContext(context.parentNode)) ||
                context;
            }

            if (newSelector) {
              try {
                push.apply(
                  results,

                  newContext.querySelectorAll(newSelector)
                );

                return results;
              } catch (qsaError) {
              } finally {
                if (nid === expando) {
                  context.removeAttribute("id");
                }
              }
            }
          }
        }
      }

      // All others

      return select(selector.replace(rtrim, "$1"), context, results, seed);
    }

    /**
    
     * Create key-value caches of limited size
    
     * @returns {function(string, object)} Returns the Object data after storing it on itself with
    
     *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
    
     *	deleting the oldest entry
    
     */

    function createCache() {
      var keys = [];

      function cache(key, value) {
        // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)

        if (keys.push(key + " ") > Expr.cacheLength) {
          // Only keep the most recent entries

          delete cache[keys.shift()];
        }

        return (cache[key + " "] = value);
      }

      return cache;
    }

    /**
    
     * Mark a function for special use by Sizzle
    
     * @param {Function} fn The function to mark
    
     */

    function markFunction(fn) {
      fn[expando] = true;

      return fn;
    }

    /**
    
     * Support testing using an element
    
     * @param {Function} fn Passed the created element and returns a boolean result
    
     */

    function assert(fn) {
      var el = document.createElement("fieldset");

      try {
        return !!fn(el);
      } catch (e) {
        return false;
      } finally {
        // Remove from its parent by default

        if (el.parentNode) {
          el.parentNode.removeChild(el);
        }

        // release memory in IE

        el = null;
      }
    }

    /**
    
     * Adds the same handler for all of the specified attrs
    
     * @param {String} attrs Pipe-separated list of attributes
    
     * @param {Function} handler The method that will be applied
    
     */

    function addHandle(attrs, handler) {
      var arr = attrs.split("|"),
        i = arr.length;

      while (i--) {
        Expr.attrHandle[arr[i]] = handler;
      }
    }

    /**
    
     * Checks document order of two siblings
    
     * @param {Element} a
    
     * @param {Element} b
    
     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
    
     */

    function siblingCheck(a, b) {
      var cur = b && a,
        diff =
          cur &&
          a.nodeType === 1 &&
          b.nodeType === 1 &&
          a.sourceIndex - b.sourceIndex;

      // Use IE sourceIndex if available on both nodes

      if (diff) {
        return diff;
      }

      // Check if b follows a

      if (cur) {
        while ((cur = cur.nextSibling)) {
          if (cur === b) {
            return -1;
          }
        }
      }

      return a ? 1 : -1;
    }

    /**
    
     * Returns a function to use in pseudos for input types
    
     * @param {String} type
    
     */

    function createInputPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();

        return name === "input" && elem.type === type;
      };
    }

    /**
    
     * Returns a function to use in pseudos for buttons
    
     * @param {String} type
    
     */

    function createButtonPseudo(type) {
      return function (elem) {
        var name = elem.nodeName.toLowerCase();

        return (name === "input" || name === "button") && elem.type === type;
      };
    }

    /**
    
     * Returns a function to use in pseudos for :enabled/:disabled
    
     * @param {Boolean} disabled true for :disabled; false for :enabled
    
     */

    function createDisabledPseudo(disabled) {
      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable

      return function (elem) {
        // Only certain elements can match :enabled or :disabled

        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled

        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled

        if ("form" in elem) {
          // Check for inherited disabledness on relevant non-disabled elements:

          // * listed form-associated elements in a disabled fieldset

          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed

          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled

          // * option elements in a disabled optgroup

          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled

          // All such elements have a "form" property.

          if (elem.parentNode && elem.disabled === false) {
            // Option elements defer to a parent optgroup if present

            if ("label" in elem) {
              if ("label" in elem.parentNode) {
                return elem.parentNode.disabled === disabled;
              } else {
                return elem.disabled === disabled;
              }
            }

            // Support: IE 6 - 11

            // Use the isDisabled shortcut property to check for disabled fieldset ancestors

            return (
              elem.isDisabled === disabled ||
              // Where there is no isDisabled, check manually

              /* jshint -W018 */

              (elem.isDisabled !== !disabled &&
                disabledAncestor(elem) === disabled)
            );
          }

          return elem.disabled === disabled;

          // Try to winnow out elements that can't be disabled before trusting the disabled property.

          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't

          // even exist on them, let alone have a boolean value.
        } else if ("label" in elem) {
          return elem.disabled === disabled;
        }

        // Remaining elements are neither :enabled nor :disabled

        return false;
      };
    }

    /**
    
     * Returns a function to use in pseudos for positionals
    
     * @param {Function} fn
    
     */

    function createPositionalPseudo(fn) {
      return markFunction(function (argument) {
        argument = +argument;

        return markFunction(function (seed, matches) {
          var j,
            matchIndexes = fn([], seed.length, argument),
            i = matchIndexes.length;

          // Match elements found at the specified indexes

          while (i--) {
            if (seed[(j = matchIndexes[i])]) {
              seed[j] = !(matches[j] = seed[j]);
            }
          }
        });
      });
    }

    /**
    
     * Checks a node for validity as a Sizzle context
    
     * @param {Element|Object=} context
    
     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
    
     */

    function testContext(context) {
      return (
        context &&
        typeof context.getElementsByTagName !== "undefined" &&
        context
      );
    }

    // Expose support vars for convenience

    support = Sizzle.support = {};

    /**
    
     * Detects XML nodes
    
     * @param {Element|Object} elem An element or a document
    
     * @returns {Boolean} True iff elem is a non-HTML XML node
    
     */

    isXML = Sizzle.isXML = function (elem) {
      // documentElement is verified for cases where it doesn't yet exist

      // (such as loading iframes in IE - #4833)

      var documentElement =
        elem && (elem.ownerDocument || elem).documentElement;

      return documentElement ? documentElement.nodeName !== "HTML" : false;
    };

    /**
    
     * Sets document-related variables once based on the current document
    
     * @param {Element|Object} [doc] An element or document object to use to set the document
    
     * @returns {Object} Returns the current document
    
     */

    setDocument = Sizzle.setDocument = function (node) {
      var hasCompare,
        subWindow,
        doc = node ? node.ownerDocument || node : preferredDoc;

      // Return early if doc is invalid or already selected

      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
        return document;
      }

      // Update global variables

      document = doc;

      docElem = document.documentElement;

      documentIsHTML = !isXML(document);

      // Support: IE 9-11, Edge

      // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)

      if (
        preferredDoc !== document &&
        (subWindow = document.defaultView) &&
        subWindow.top !== subWindow
      ) {
        // Support: IE 11, Edge

        if (subWindow.addEventListener) {
          subWindow.addEventListener("unload", unloadHandler, false);

          // Support: IE 9 - 10 only
        } else if (subWindow.attachEvent) {
          subWindow.attachEvent("onunload", unloadHandler);
        }
      }

      /* Attributes
    
        ---------------------------------------------------------------------- */

      // Support: IE<8

      // Verify that getAttribute really returns attributes and not properties

      // (excepting IE8 booleans)

      support.attributes = assert(function (el) {
        el.className = "i";

        return !el.getAttribute("className");
      });

      /* getElement(s)By*
    
        ---------------------------------------------------------------------- */

      // Check if getElementsByTagName("*") returns only elements

      support.getElementsByTagName = assert(function (el) {
        el.appendChild(document.createComment(""));

        return !el.getElementsByTagName("*").length;
      });

      // Support: IE<9

      support.getElementsByClassName = rnative.test(
        document.getElementsByClassName
      );

      // Support: IE<10

      // Check if getElementById returns elements by name

      // The broken getElementById methods don't pick up programmatically-set names,

      // so use a roundabout getElementsByName test

      support.getById = assert(function (el) {
        docElem.appendChild(el).id = expando;

        return (
          !document.getElementsByName ||
          !document.getElementsByName(expando).length
        );
      });

      // ID filter and find

      if (support.getById) {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);

          return function (elem) {
            return elem.getAttribute("id") === attrId;
          };
        };

        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var elem = context.getElementById(id);

            return elem ? [elem] : [];
          }
        };
      } else {
        Expr.filter["ID"] = function (id) {
          var attrId = id.replace(runescape, funescape);

          return function (elem) {
            var node =
              typeof elem.getAttributeNode !== "undefined" &&
              elem.getAttributeNode("id");

            return node && node.value === attrId;
          };
        };

        // Support: IE 6 - 7 only

        // getElementById is not reliable as a find shortcut

        Expr.find["ID"] = function (id, context) {
          if (typeof context.getElementById !== "undefined" && documentIsHTML) {
            var node,
              i,
              elems,
              elem = context.getElementById(id);

            if (elem) {
              // Verify the id attribute

              node = elem.getAttributeNode("id");

              if (node && node.value === id) {
                return [elem];
              }

              // Fall back on getElementsByName

              elems = context.getElementsByName(id);

              i = 0;

              while ((elem = elems[i++])) {
                node = elem.getAttributeNode("id");

                if (node && node.value === id) {
                  return [elem];
                }
              }
            }

            return [];
          }
        };
      }

      // Tag

      Expr.find["TAG"] = support.getElementsByTagName
        ? function (tag, context) {
            if (typeof context.getElementsByTagName !== "undefined") {
              return context.getElementsByTagName(tag);

              // DocumentFragment nodes don't have gEBTN
            } else if (support.qsa) {
              return context.querySelectorAll(tag);
            }
          }
        : function (tag, context) {
            var elem,
              tmp = [],
              i = 0,
              // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too

              results = context.getElementsByTagName(tag);

            // Filter out possible comments

            if (tag === "*") {
              while ((elem = results[i++])) {
                if (elem.nodeType === 1) {
                  tmp.push(elem);
                }
              }

              return tmp;
            }

            return results;
          };

      // Class

      Expr.find["CLASS"] =
        support.getElementsByClassName &&
        function (className, context) {
          if (
            typeof context.getElementsByClassName !== "undefined" &&
            documentIsHTML
          ) {
            return context.getElementsByClassName(className);
          }
        };

      /* QSA/matchesSelector
    
        ---------------------------------------------------------------------- */

      // QSA and matchesSelector support

      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)

      rbuggyMatches = [];

      // qSa(:focus) reports false when true (Chrome 21)

      // We allow this because of a bug in IE8/9 that throws an error

      // whenever `document.activeElement` is accessed on an iframe

      // So, we allow :focus to pass through QSA all the time to avoid the IE error

      // See https://bugs.jquery.com/ticket/13378

      rbuggyQSA = [];

      if ((support.qsa = rnative.test(document.querySelectorAll))) {
        // Build QSA regex

        // Regex strategy adopted from Diego Perini

        assert(function (el) {
          // Select is set to empty string on purpose

          // This is to test IE's treatment of not explicitly

          // setting a boolean content attribute,

          // since its presence should be enough

          // https://bugs.jquery.com/ticket/12359

          docElem.appendChild(el).innerHTML =
            "<a id='" +
            expando +
            "'></a>" +
            "<select id='" +
            expando +
            "-\r\\' msallowcapture=''>" +
            "<option selected=''></option></select>";

          // Support: IE8, Opera 11-12.16

          // Nothing should be selected when empty strings follow ^= or $= or *=

          // The test attribute must be unknown in Opera but "safe" for WinRT

          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

          if (el.querySelectorAll("[msallowcapture^='']").length) {
            rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
          }

          // Support: IE8

          // Boolean attributes and "value" are not treated correctly

          if (!el.querySelectorAll("[selected]").length) {
            rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
          }

          // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+

          if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
            rbuggyQSA.push("~=");
          }

          // Webkit/Opera - :checked should return selected option elements

          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked

          // IE8 throws error here and will not see later tests

          if (!el.querySelectorAll(":checked").length) {
            rbuggyQSA.push(":checked");
          }

          // Support: Safari 8+, iOS 8+

          // https://bugs.webkit.org/show_bug.cgi?id=136851

          // In-page `selector#id sibling-combinator selector` fails

          if (!el.querySelectorAll("a#" + expando + "+*").length) {
            rbuggyQSA.push(".#.+[+~]");
          }
        });

        assert(function (el) {
          el.innerHTML =
            "<a href='' disabled='disabled'></a>" +
            "<select disabled='disabled'><option/></select>";

          // Support: Windows 8 Native Apps

          // The type and name attributes are restricted during .innerHTML assignment

          var input = document.createElement("input");

          input.setAttribute("type", "hidden");

          el.appendChild(input).setAttribute("name", "D");

          // Support: IE8

          // Enforce case-sensitivity of name attribute

          if (el.querySelectorAll("[name=d]").length) {
            rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
          }

          // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)

          // IE8 throws error here and will not see later tests

          if (el.querySelectorAll(":enabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          }

          // Support: IE9-11+

          // IE's :disabled selector does not pick up the children of disabled fieldsets

          docElem.appendChild(el).disabled = true;

          if (el.querySelectorAll(":disabled").length !== 2) {
            rbuggyQSA.push(":enabled", ":disabled");
          }

          // Opera 10-11 does not throw on post-comma invalid pseudos

          el.querySelectorAll("*,:x");

          rbuggyQSA.push(",.*:");
        });
      }

      if (
        (support.matchesSelector = rnative.test(
          (matches =
            docElem.matches ||
            docElem.webkitMatchesSelector ||
            docElem.mozMatchesSelector ||
            docElem.oMatchesSelector ||
            docElem.msMatchesSelector)
        ))
      ) {
        assert(function (el) {
          // Check to see if it's possible to do matchesSelector

          // on a disconnected node (IE 9)

          support.disconnectedMatch = matches.call(el, "*");

          // This should fail with an exception

          // Gecko does not error, returns false instead

          matches.call(el, "[s!='']:x");

          rbuggyMatches.push("!=", pseudos);
        });
      }

      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));

      rbuggyMatches =
        rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));

      /* Contains
    
        ---------------------------------------------------------------------- */

      hasCompare = rnative.test(docElem.compareDocumentPosition);

      // Element contains another

      // Purposefully self-exclusive

      // As in, an element does not contain itself

      contains =
        hasCompare || rnative.test(docElem.contains)
          ? function (a, b) {
              var adown = a.nodeType === 9 ? a.documentElement : a,
                bup = b && b.parentNode;

              return (
                a === bup ||
                !!(
                  bup &&
                  bup.nodeType === 1 &&
                  (adown.contains
                    ? adown.contains(bup)
                    : a.compareDocumentPosition &&
                      a.compareDocumentPosition(bup) & 16)
                )
              );
            }
          : function (a, b) {
              if (b) {
                while ((b = b.parentNode)) {
                  if (b === a) {
                    return true;
                  }
                }
              }

              return false;
            };

      /* Sorting
    
        ---------------------------------------------------------------------- */

      // Document order sorting

      sortOrder = hasCompare
        ? function (a, b) {
            // Flag for duplicate removal

            if (a === b) {
              hasDuplicate = true;

              return 0;
            }

            // Sort on method existence if only one input has compareDocumentPosition

            var compare =
              !a.compareDocumentPosition - !b.compareDocumentPosition;

            if (compare) {
              return compare;
            }

            // Calculate position if both inputs belong to the same document

            compare =
              (a.ownerDocument || a) === (b.ownerDocument || b)
                ? a.compareDocumentPosition(b)
                : // Otherwise we know they are disconnected

                  1;

            // Disconnected nodes

            if (
              compare & 1 ||
              (!support.sortDetached &&
                b.compareDocumentPosition(a) === compare)
            ) {
              // Choose the first element that is related to our preferred document

              if (
                a === document ||
                (a.ownerDocument === preferredDoc && contains(preferredDoc, a))
              ) {
                return -1;
              }

              if (
                b === document ||
                (b.ownerDocument === preferredDoc && contains(preferredDoc, b))
              ) {
                return 1;
              }

              // Maintain original order

              return sortInput
                ? indexOf(sortInput, a) - indexOf(sortInput, b)
                : 0;
            }

            return compare & 4 ? -1 : 1;
          }
        : function (a, b) {
            // Exit early if the nodes are identical

            if (a === b) {
              hasDuplicate = true;

              return 0;
            }

            var cur,
              i = 0,
              aup = a.parentNode,
              bup = b.parentNode,
              ap = [a],
              bp = [b];

            // Parentless nodes are either documents or disconnected

            if (!aup || !bup) {
              return a === document
                ? -1
                : b === document
                ? 1
                : aup
                ? -1
                : bup
                ? 1
                : sortInput
                ? indexOf(sortInput, a) - indexOf(sortInput, b)
                : 0;

              // If the nodes are siblings, we can do a quick check
            } else if (aup === bup) {
              return siblingCheck(a, b);
            }

            // Otherwise we need full lists of their ancestors for comparison

            cur = a;

            while ((cur = cur.parentNode)) {
              ap.unshift(cur);
            }

            cur = b;

            while ((cur = cur.parentNode)) {
              bp.unshift(cur);
            }

            // Walk down the tree looking for a discrepancy

            while (ap[i] === bp[i]) {
              i++;
            }

            return i
              ? // Do a sibling check if the nodes have a common ancestor

                siblingCheck(ap[i], bp[i])
              : // Otherwise nodes in our document sort first

              ap[i] === preferredDoc
              ? -1
              : bp[i] === preferredDoc
              ? 1
              : 0;
          };

      return document;
    };

    Sizzle.matches = function (expr, elements) {
      return Sizzle(expr, null, null, elements);
    };

    Sizzle.matchesSelector = function (elem, expr) {
      // Set document vars if needed

      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }

      // Make sure that attribute selectors are quoted

      expr = expr.replace(rattributeQuotes, "='$1']");

      if (
        support.matchesSelector &&
        documentIsHTML &&
        !compilerCache[expr + " "] &&
        (!rbuggyMatches || !rbuggyMatches.test(expr)) &&
        (!rbuggyQSA || !rbuggyQSA.test(expr))
      ) {
        try {
          var ret = matches.call(elem, expr);

          // IE 9's matchesSelector returns false on disconnected nodes

          if (
            ret ||
            support.disconnectedMatch ||
            // As well, disconnected nodes are said to be in a document

            // fragment in IE 9

            (elem.document && elem.document.nodeType !== 11)
          ) {
            return ret;
          }
        } catch (e) {}
      }

      return Sizzle(expr, document, null, [elem]).length > 0;
    };

    Sizzle.contains = function (context, elem) {
      // Set document vars if needed

      if ((context.ownerDocument || context) !== document) {
        setDocument(context);
      }

      return contains(context, elem);
    };

    Sizzle.attr = function (elem, name) {
      // Set document vars if needed

      if ((elem.ownerDocument || elem) !== document) {
        setDocument(elem);
      }

      var fn = Expr.attrHandle[name.toLowerCase()],
        // Don't get fooled by Object.prototype properties (jQuery #13807)

        val =
          fn && hasOwn.call(Expr.attrHandle, name.toLowerCase())
            ? fn(elem, name, !documentIsHTML)
            : undefined;

      return val !== undefined
        ? val
        : support.attributes || !documentIsHTML
        ? elem.getAttribute(name)
        : (val = elem.getAttributeNode(name)) && val.specified
        ? val.value
        : null;
    };

    Sizzle.escape = function (sel) {
      return (sel + "").replace(rcssescape, fcssescape);
    };

    Sizzle.error = function (msg) {
      throw new Error("Syntax error, unrecognized expression: " + msg);
    };

    /**
    
     * Document sorting and removing duplicates
    
     * @param {ArrayLike} results
    
     */

    Sizzle.uniqueSort = function (results) {
      var elem,
        duplicates = [],
        j = 0,
        i = 0;

      // Unless we *know* we can detect duplicates, assume their presence

      hasDuplicate = !support.detectDuplicates;

      sortInput = !support.sortStable && results.slice(0);

      results.sort(sortOrder);

      if (hasDuplicate) {
        while ((elem = results[i++])) {
          if (elem === results[i]) {
            j = duplicates.push(i);
          }
        }

        while (j--) {
          results.splice(duplicates[j], 1);
        }
      }

      // Clear input after sorting to release objects

      // See https://github.com/jquery/sizzle/pull/225

      sortInput = null;

      return results;
    };

    /**
    
     * Utility function for retrieving the text value of an array of DOM nodes
    
     * @param {Array|Element} elem
    
     */

    getText = Sizzle.getText = function (elem) {
      var node,
        ret = "",
        i = 0,
        nodeType = elem.nodeType;

      if (!nodeType) {
        // If no nodeType, this is expected to be an array

        while ((node = elem[i++])) {
          // Do not traverse comment nodes

          ret += getText(node);
        }
      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
        // Use textContent for elements

        // innerText usage removed for consistency of new lines (jQuery #11153)

        if (typeof elem.textContent === "string") {
          return elem.textContent;
        } else {
          // Traverse its children

          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            ret += getText(elem);
          }
        }
      } else if (nodeType === 3 || nodeType === 4) {
        return elem.nodeValue;
      }

      // Do not include comment or processing instruction nodes

      return ret;
    };

    Expr = Sizzle.selectors = {
      // Can be adjusted by the user

      cacheLength: 50,

      createPseudo: markFunction,

      match: matchExpr,

      attrHandle: {},

      find: {},

      relative: {
        ">": { dir: "parentNode", first: true },

        " ": { dir: "parentNode" },

        "+": { dir: "previousSibling", first: true },

        "~": { dir: "previousSibling" },
      },

      preFilter: {
        ATTR: function (match) {
          match[1] = match[1].replace(runescape, funescape);

          // Move the given value to match[3] whether quoted or unquoted

          match[3] = (match[3] || match[4] || match[5] || "").replace(
            runescape,
            funescape
          );

          if (match[2] === "~=") {
            match[3] = " " + match[3] + " ";
          }

          return match.slice(0, 4);
        },

        CHILD: function (match) {
          /* matches from matchExpr["CHILD"]
    
                    1 type (only|nth|...)
    
                    2 what (child|of-type)
    
                    3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
    
                    4 xn-component of xn+y argument ([+-]?\d*n|)
    
                    5 sign of xn-component
    
                    6 x of xn-component
    
                    7 sign of y-component
    
                    8 y of y-component
    
                */

          match[1] = match[1].toLowerCase();

          if (match[1].slice(0, 3) === "nth") {
            // nth-* requires argument

            if (!match[3]) {
              Sizzle.error(match[0]);
            }

            // numeric x and y parameters for Expr.filter.CHILD

            // remember that false/true cast respectively to 0/1

            match[4] = +(match[4]
              ? match[5] + (match[6] || 1)
              : 2 * (match[3] === "even" || match[3] === "odd"));

            match[5] = +(match[7] + match[8] || match[3] === "odd");

            // other types prohibit arguments
          } else if (match[3]) {
            Sizzle.error(match[0]);
          }

          return match;
        },

        PSEUDO: function (match) {
          var excess,
            unquoted = !match[6] && match[2];

          if (matchExpr["CHILD"].test(match[0])) {
            return null;
          }

          // Accept quoted arguments as-is

          if (match[3]) {
            match[2] = match[4] || match[5] || "";

            // Strip excess characters from unquoted arguments
          } else if (
            unquoted &&
            rpseudo.test(unquoted) &&
            // Get excess from tokenize (recursively)

            (excess = tokenize(unquoted, true)) &&
            // advance to the next closing parenthesis

            (excess =
              unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)
          ) {
            // excess is a negative index

            match[0] = match[0].slice(0, excess);

            match[2] = unquoted.slice(0, excess);
          }

          // Return only captures needed by the pseudo filter method (type and argument)

          return match.slice(0, 3);
        },
      },

      filter: {
        TAG: function (nodeNameSelector) {
          var nodeName = nodeNameSelector
            .replace(runescape, funescape)
            .toLowerCase();

          return nodeNameSelector === "*"
            ? function () {
                return true;
              }
            : function (elem) {
                return (
                  elem.nodeName && elem.nodeName.toLowerCase() === nodeName
                );
              };
        },

        CLASS: function (className) {
          var pattern = classCache[className + " "];

          return (
            pattern ||
            ((pattern = new RegExp(
              "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)"
            )) &&
              classCache(className, function (elem) {
                return pattern.test(
                  (typeof elem.className === "string" && elem.className) ||
                    (typeof elem.getAttribute !== "undefined" &&
                      elem.getAttribute("class")) ||
                    ""
                );
              }))
          );
        },

        ATTR: function (name, operator, check) {
          return function (elem) {
            var result = Sizzle.attr(elem, name);

            if (result == null) {
              return operator === "!=";
            }

            if (!operator) {
              return true;
            }

            result += "";

            return operator === "="
              ? result === check
              : operator === "!="
              ? result !== check
              : operator === "^="
              ? check && result.indexOf(check) === 0
              : operator === "*="
              ? check && result.indexOf(check) > -1
              : operator === "$="
              ? check && result.slice(-check.length) === check
              : operator === "~="
              ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) >
                -1
              : operator === "|="
              ? result === check ||
                result.slice(0, check.length + 1) === check + "-"
              : false;
          };
        },

        CHILD: function (type, what, argument, first, last) {
          var simple = type.slice(0, 3) !== "nth",
            forward = type.slice(-4) !== "last",
            ofType = what === "of-type";

          return first === 1 && last === 0
            ? // Shortcut for :nth-*(n)

              function (elem) {
                return !!elem.parentNode;
              }
            : function (elem, context, xml) {
                var cache,
                  uniqueCache,
                  outerCache,
                  node,
                  nodeIndex,
                  start,
                  dir = simple !== forward ? "nextSibling" : "previousSibling",
                  parent = elem.parentNode,
                  name = ofType && elem.nodeName.toLowerCase(),
                  useCache = !xml && !ofType,
                  diff = false;

                if (parent) {
                  // :(first|last|only)-(child|of-type)

                  if (simple) {
                    while (dir) {
                      node = elem;

                      while ((node = node[dir])) {
                        if (
                          ofType
                            ? node.nodeName.toLowerCase() === name
                            : node.nodeType === 1
                        ) {
                          return false;
                        }
                      }

                      // Reverse direction for :only-* (if we haven't yet done so)

                      start = dir = type === "only" && !start && "nextSibling";
                    }

                    return true;
                  }

                  start = [forward ? parent.firstChild : parent.lastChild];

                  // non-xml :nth-child(...) stores cache data on `parent`

                  if (forward && useCache) {
                    // Seek `elem` from a previously-cached index

                    // ...in a gzip-friendly way

                    node = parent;

                    outerCache = node[expando] || (node[expando] = {});

                    // Support: IE <9 only

                    // Defend against cloned attroperties (jQuery gh-1709)

                    uniqueCache =
                      outerCache[node.uniqueID] ||
                      (outerCache[node.uniqueID] = {});

                    cache = uniqueCache[type] || [];

                    nodeIndex = cache[0] === dirruns && cache[1];

                    diff = nodeIndex && cache[2];

                    node = nodeIndex && parent.childNodes[nodeIndex];

                    while (
                      (node =
                        (++nodeIndex && node && node[dir]) ||
                        // Fallback to seeking `elem` from the start

                        (diff = nodeIndex = 0) ||
                        start.pop())
                    ) {
                      // When found, cache indexes on `parent` and break

                      if (node.nodeType === 1 && ++diff && node === elem) {
                        uniqueCache[type] = [dirruns, nodeIndex, diff];

                        break;
                      }
                    }
                  } else {
                    // Use previously-cached element index if available

                    if (useCache) {
                      // ...in a gzip-friendly way

                      node = elem;

                      outerCache = node[expando] || (node[expando] = {});

                      // Support: IE <9 only

                      // Defend against cloned attroperties (jQuery gh-1709)

                      uniqueCache =
                        outerCache[node.uniqueID] ||
                        (outerCache[node.uniqueID] = {});

                      cache = uniqueCache[type] || [];

                      nodeIndex = cache[0] === dirruns && cache[1];

                      diff = nodeIndex;
                    }

                    // xml :nth-child(...)

                    // or :nth-last-child(...) or :nth(-last)?-of-type(...)

                    if (diff === false) {
                      // Use the same loop as above to seek `elem` from the start

                      while (
                        (node =
                          (++nodeIndex && node && node[dir]) ||
                          (diff = nodeIndex = 0) ||
                          start.pop())
                      ) {
                        if (
                          (ofType
                            ? node.nodeName.toLowerCase() === name
                            : node.nodeType === 1) &&
                          ++diff
                        ) {
                          // Cache the index of each encountered element

                          if (useCache) {
                            outerCache = node[expando] || (node[expando] = {});

                            // Support: IE <9 only

                            // Defend against cloned attroperties (jQuery gh-1709)

                            uniqueCache =
                              outerCache[node.uniqueID] ||
                              (outerCache[node.uniqueID] = {});

                            uniqueCache[type] = [dirruns, diff];
                          }

                          if (node === elem) {
                            break;
                          }
                        }
                      }
                    }
                  }

                  // Incorporate the offset, then check against cycle size

                  diff -= last;

                  return (
                    diff === first || (diff % first === 0 && diff / first >= 0)
                  );
                }
              };
        },

        PSEUDO: function (pseudo, argument) {
          // pseudo-class names are case-insensitive

          // http://www.w3.org/TR/selectors/#pseudo-classes

          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters

          // Remember that setFilters inherits from pseudos

          var args,
            fn =
              Expr.pseudos[pseudo] ||
              Expr.setFilters[pseudo.toLowerCase()] ||
              Sizzle.error("unsupported pseudo: " + pseudo);

          // The user may use createPseudo to indicate that

          // arguments are needed to create the filter function

          // just as Sizzle does

          if (fn[expando]) {
            return fn(argument);
          }

          // But maintain support for old signatures

          if (fn.length > 1) {
            args = [pseudo, pseudo, "", argument];

            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())
              ? markFunction(function (seed, matches) {
                  var idx,
                    matched = fn(seed, argument),
                    i = matched.length;

                  while (i--) {
                    idx = indexOf(seed, matched[i]);

                    seed[idx] = !(matches[idx] = matched[i]);
                  }
                })
              : function (elem) {
                  return fn(elem, 0, args);
                };
          }

          return fn;
        },
      },

      pseudos: {
        // Potentially complex pseudos

        not: markFunction(function (selector) {
          // Trim the selector passed to compile

          // to avoid treating leading and trailing

          // spaces as combinators

          var input = [],
            results = [],
            matcher = compile(selector.replace(rtrim, "$1"));

          return matcher[expando]
            ? markFunction(function (seed, matches, context, xml) {
                var elem,
                  unmatched = matcher(seed, null, xml, []),
                  i = seed.length;

                // Match elements unmatched by `matcher`

                while (i--) {
                  if ((elem = unmatched[i])) {
                    seed[i] = !(matches[i] = elem);
                  }
                }
              })
            : function (elem, context, xml) {
                input[0] = elem;

                matcher(input, null, xml, results);

                // Don't keep the element (issue #299)

                input[0] = null;

                return !results.pop();
              };
        }),

        has: markFunction(function (selector) {
          return function (elem) {
            return Sizzle(selector, elem).length > 0;
          };
        }),

        contains: markFunction(function (text) {
          text = text.replace(runescape, funescape);

          return function (elem) {
            return (
              (elem.textContent || elem.innerText || getText(elem)).indexOf(
                text
              ) > -1
            );
          };
        }),

        // "Whether an element is represented by a :lang() selector

        // is based solely on the element's language value

        // being equal to the identifier C,

        // or beginning with the identifier C immediately followed by "-".

        // The matching of C against the element's language value is performed case-insensitively.

        // The identifier C does not have to be a valid language name."

        // http://www.w3.org/TR/selectors/#lang-pseudo

        lang: markFunction(function (lang) {
          // lang value must be a valid identifier

          if (!ridentifier.test(lang || "")) {
            Sizzle.error("unsupported lang: " + lang);
          }

          lang = lang.replace(runescape, funescape).toLowerCase();

          return function (elem) {
            var elemLang;

            do {
              if (
                (elemLang = documentIsHTML
                  ? elem.lang
                  : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))
              ) {
                elemLang = elemLang.toLowerCase();

                return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
              }
            } while ((elem = elem.parentNode) && elem.nodeType === 1);

            return false;
          };
        }),

        // Miscellaneous

        target: function (elem) {
          var hash = window.location && window.location.hash;

          return hash && hash.slice(1) === elem.id;
        },

        root: function (elem) {
          return elem === docElem;
        },

        focus: function (elem) {
          return (
            elem === document.activeElement &&
            (!document.hasFocus || document.hasFocus()) &&
            !!(elem.type || elem.href || ~elem.tabIndex)
          );
        },

        // Boolean properties

        enabled: createDisabledPseudo(false),

        disabled: createDisabledPseudo(true),

        checked: function (elem) {
          // In CSS3, :checked should return both checked and selected elements

          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked

          var nodeName = elem.nodeName.toLowerCase();

          return (
            (nodeName === "input" && !!elem.checked) ||
            (nodeName === "option" && !!elem.selected)
          );
        },

        selected: function (elem) {
          // Accessing this property makes selected-by-default

          // options in Safari work properly

          if (elem.parentNode) {
            elem.parentNode.selectedIndex;
          }

          return elem.selected === true;
        },

        // Contents

        empty: function (elem) {
          // http://www.w3.org/TR/selectors/#empty-pseudo

          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),

          //   but not by others (comment: 8; processing instruction: 7; etc.)

          // nodeType < 6 works because attributes (2) do not appear as children

          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
            if (elem.nodeType < 6) {
              return false;
            }
          }

          return true;
        },

        parent: function (elem) {
          return !Expr.pseudos["empty"](elem);
        },

        // Element/input types

        header: function (elem) {
          return rheader.test(elem.nodeName);
        },

        input: function (elem) {
          return rinputs.test(elem.nodeName);
        },

        button: function (elem) {
          var name = elem.nodeName.toLowerCase();

          return (
            (name === "input" && elem.type === "button") || name === "button"
          );
        },

        text: function (elem) {
          var attr;

          return (
            elem.nodeName.toLowerCase() === "input" &&
            elem.type === "text" &&
            // Support: IE<8

            // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"

            ((attr = elem.getAttribute("type")) == null ||
              attr.toLowerCase() === "text")
          );
        },

        // Position-in-collection

        first: createPositionalPseudo(function () {
          return [0];
        }),

        last: createPositionalPseudo(function (matchIndexes, length) {
          return [length - 1];
        }),

        eq: createPositionalPseudo(function (matchIndexes, length, argument) {
          return [argument < 0 ? argument + length : argument];
        }),

        even: createPositionalPseudo(function (matchIndexes, length) {
          var i = 0;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),

        odd: createPositionalPseudo(function (matchIndexes, length) {
          var i = 1;

          for (; i < length; i += 2) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),

        lt: createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;

          for (; --i >= 0; ) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),

        gt: createPositionalPseudo(function (matchIndexes, length, argument) {
          var i = argument < 0 ? argument + length : argument;

          for (; ++i < length; ) {
            matchIndexes.push(i);
          }

          return matchIndexes;
        }),
      },
    };

    Expr.pseudos["nth"] = Expr.pseudos["eq"];

    // Add button/input type pseudos

    for (i in {
      radio: true,
      checkbox: true,
      file: true,
      password: true,
      image: true,
    }) {
      Expr.pseudos[i] = createInputPseudo(i);
    }

    for (i in { submit: true, reset: true }) {
      Expr.pseudos[i] = createButtonPseudo(i);
    }

    // Easy API for creating new setFilters

    function setFilters() {}

    setFilters.prototype = Expr.filters = Expr.pseudos;

    Expr.setFilters = new setFilters();

    tokenize = Sizzle.tokenize = function (selector, parseOnly) {
      var matched,
        match,
        tokens,
        type,
        soFar,
        groups,
        preFilters,
        cached = tokenCache[selector + " "];

      if (cached) {
        return parseOnly ? 0 : cached.slice(0);
      }

      soFar = selector;

      groups = [];

      preFilters = Expr.preFilter;

      while (soFar) {
        // Comma and first run

        if (!matched || (match = rcomma.exec(soFar))) {
          if (match) {
            // Don't consume trailing commas as valid

            soFar = soFar.slice(match[0].length) || soFar;
          }

          groups.push((tokens = []));
        }

        matched = false;

        // Combinators

        if ((match = rcombinators.exec(soFar))) {
          matched = match.shift();

          tokens.push({
            value: matched,

            // Cast descendant combinators to space

            type: match[0].replace(rtrim, " "),
          });

          soFar = soFar.slice(matched.length);
        }

        // Filters

        for (type in Expr.filter) {
          if (
            (match = matchExpr[type].exec(soFar)) &&
            (!preFilters[type] || (match = preFilters[type](match)))
          ) {
            matched = match.shift();

            tokens.push({
              value: matched,

              type: type,

              matches: match,
            });

            soFar = soFar.slice(matched.length);
          }
        }

        if (!matched) {
          break;
        }
      }

      // Return the length of the invalid excess

      // if we're just parsing

      // Otherwise, throw an error or return tokens

      return parseOnly
        ? soFar.length
        : soFar
        ? Sizzle.error(selector)
        : // Cache the tokens

          tokenCache(selector, groups).slice(0);
    };

    function toSelector(tokens) {
      var i = 0,
        len = tokens.length,
        selector = "";

      for (; i < len; i++) {
        selector += tokens[i].value;
      }

      return selector;
    }

    function addCombinator(matcher, combinator, base) {
      var dir = combinator.dir,
        skip = combinator.next,
        key = skip || dir,
        checkNonElements = base && key === "parentNode",
        doneName = done++;

      return combinator.first
        ? // Check against closest ancestor/preceding element

          function (elem, context, xml) {
            while ((elem = elem[dir])) {
              if (elem.nodeType === 1 || checkNonElements) {
                return matcher(elem, context, xml);
              }
            }

            return false;
          }
        : // Check against all ancestor/preceding elements

          function (elem, context, xml) {
            var oldCache,
              uniqueCache,
              outerCache,
              newCache = [dirruns, doneName];

            // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

            if (xml) {
              while ((elem = elem[dir])) {
                if (elem.nodeType === 1 || checkNonElements) {
                  if (matcher(elem, context, xml)) {
                    return true;
                  }
                }
              }
            } else {
              while ((elem = elem[dir])) {
                if (elem.nodeType === 1 || checkNonElements) {
                  outerCache = elem[expando] || (elem[expando] = {});

                  // Support: IE <9 only

                  // Defend against cloned attroperties (jQuery gh-1709)

                  uniqueCache =
                    outerCache[elem.uniqueID] ||
                    (outerCache[elem.uniqueID] = {});

                  if (skip && skip === elem.nodeName.toLowerCase()) {
                    elem = elem[dir] || elem;
                  } else if (
                    (oldCache = uniqueCache[key]) &&
                    oldCache[0] === dirruns &&
                    oldCache[1] === doneName
                  ) {
                    // Assign to newCache so results back-propagate to previous elements

                    return (newCache[2] = oldCache[2]);
                  } else {
                    // Reuse newcache so results back-propagate to previous elements

                    uniqueCache[key] = newCache;

                    // A match means we're done; a fail means we have to keep checking

                    if ((newCache[2] = matcher(elem, context, xml))) {
                      return true;
                    }
                  }
                }
              }
            }

            return false;
          };
    }

    function elementMatcher(matchers) {
      return matchers.length > 1
        ? function (elem, context, xml) {
            var i = matchers.length;

            while (i--) {
              if (!matchers[i](elem, context, xml)) {
                return false;
              }
            }

            return true;
          }
        : matchers[0];
    }

    function multipleContexts(selector, contexts, results) {
      var i = 0,
        len = contexts.length;

      for (; i < len; i++) {
        Sizzle(selector, contexts[i], results);
      }

      return results;
    }

    function condense(unmatched, filter, context, xml) {
      var elem,
        newUnmatched = [],
        i = 0,
        len = unmatched.length;

      for (; i < len; i++) {
        if ((elem = unmatched[i])) {
          if (!filter || filter(elem, context, xml)) {
            newUnmatched.push(elem);

            if (mapped) {
            }
          }
        }
      }

      return newUnmatched;
    }

    function setMatcher(
      preFilter,
      selector,
      matcher,
      postFilter,
      postFinder,
      postSelector
    ) {
      if (postFilter && !postFilter[expando]) {
        postFilter = setMatcher(postFilter);
      }

      if (postFinder && !postFinder[expando]) {
        postFinder = setMatcher(postFinder, postSelector);
      }

      return markFunction(function (seed, results, context, xml) {
        var temp,
          i,
          elem,
          preexisting = results.length,
          // Get initial elements from seed or context

          elems =
            seed ||
            multipleContexts(
              selector || "*",
              context.nodeType ? [context] : context,
              []
            ),
          matcherIn =
            preFilter && (seed || !selector)
              ? condense(elems, preMap, preFilter, context, xml)
              : elems,
          matcherOut = matcher
            ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,

              postFinder || (seed ? preFilter : preexisting || postFilter)
              ? // ...intermediate processing is necessary

                []
              : // ...otherwise use results directly

                results
            : matcherIn;

        // Find primary matches

        if (matcher) {
          matcher(matcherIn, matcherOut, context, xml);
        }

        // Apply postFilter

        if (postFilter) {
          temp = condense(matcherOut, postMap);

          postFilter(temp, [], context, xml);

          // Un-match failing elements by moving them back to matcherIn

          i = temp.length;

          while (i--) {
            if ((elem = temp[i])) {
              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
            }
          }
        }

        if (seed) {
          if (postFinder || preFilter) {
            if (postFinder) {
              // Get the final matcherOut by condensing this intermediate into postFinder contexts

              temp = [];

              i = matcherOut.length;

              while (i--) {
                if ((elem = matcherOut[i])) {
                  // Restore matcherIn since elem is not yet a final match

                  temp.push((matcherIn[i] = elem));
                }
              }

              postFinder(null, (matcherOut = []), temp, xml);
            }

            // Move matched elements from seed to results to keep them synchronized

            i = matcherOut.length;

            while (i--) {
              if (
                (elem = matcherOut[i]) &&
                (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1
              ) {
                seed[temp] = !(results[temp] = elem);
              }
            }
          }

          // Add elements to results, through postFinder if defined
        } else {
          matcherOut = condense(
            matcherOut === results
              ? matcherOut.splice(preexisting, matcherOut.length)
              : matcherOut
          );

          if (postFinder) {
            postFinder(null, results, matcherOut, xml);
          } else {
            push.apply(results, matcherOut);
          }
        }
      });
    }

    function matcherFromTokens(tokens) {
      var checkContext,
        matcher,
        j,
        len = tokens.length,
        leadingRelative = Expr.relative[tokens[0].type],
        implicitRelative = leadingRelative || Expr.relative[" "],
        i = leadingRelative ? 1 : 0,
        // The foundational matcher ensures that elements are reachable from top-level context(s)

        matchContext = addCombinator(
          function (elem) {
            return elem === checkContext;
          },
          implicitRelative,
          true
        ),
        matchAnyContext = addCombinator(
          function (elem) {
            return indexOf(checkContext, elem) > -1;
          },
          implicitRelative,
          true
        ),
        matchers = [
          function (elem, context, xml) {
            var ret =
              (!leadingRelative && (xml || context !== outermostContext)) ||
              ((checkContext = context).nodeType
                ? matchContext(elem, context, xml)
                : matchAnyContext(elem, context, xml));

            // Avoid hanging onto element (issue #299)

            checkContext = null;

            return ret;
          },
        ];

      for (; i < len; i++) {
        if ((matcher = Expr.relative[tokens[i].type])) {
          matchers = [addCombinator(elementMatcher(matchers), matcher)];
        } else {
          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);

          // Return special upon seeing a positional matcher

          if (matcher[expando]) {
            // Find the next relative operator (if any) for proper handling

            j = ++i;

            for (; j < len; j++) {
              if (Expr.relative[tokens[j].type]) {
                break;
              }
            }

            return setMatcher(
              i > 1 && elementMatcher(matchers),

              i > 1 &&
                toSelector(
                  // If the preceding token was a descendant combinator, insert an implicit any-element `*`

                  tokens
                    .slice(0, i - 1)
                    .concat({ value: tokens[i - 2].type === " " ? "*" : "" })
                ).replace(rtrim, "$1"),

              matcher,

              i < j && matcherFromTokens(tokens.slice(i, j)),

              j < len && matcherFromTokens((tokens = tokens.slice(j))),

              j < len && toSelector(tokens)
            );
          }

          matchers.push(matcher);
        }
      }

      return elementMatcher(matchers);
    }

    function matcherFromGroupMatchers(elementMatchers, setMatchers) {
      var bySet = setMatchers.length > 0,
        byElement = elementMatchers.length > 0,
        superMatcher = function (seed, context, xml, results, outermost) {
          var elem,
            j,
            matcher,
            matchedCount = 0,
            i = "0",
            unmatched = seed && [],
            setMatched = [],
            contextBackup = outermostContext,
            // We must always have either seed elements or outermost context

            elems = seed || (byElement && Expr.find["TAG"]("*", outermost)),
            // Use integer dirruns iff this is the outermost matcher

            dirrunsUnique = (dirruns +=
              contextBackup == null ? 1 : Math.random() || 0.1),
            len = elems.length;

          if (outermost) {
            outermostContext = context === document || context || outermost;
          }

          // Add elements passing elementMatchers directly to results

          // Support: IE<9, Safari

          // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id

          for (; i !== len && (elem = elems[i]) != null; i++) {
            if (byElement && elem) {
              j = 0;

              if (!context && elem.ownerDocument !== document) {
                setDocument(elem);

                xml = !documentIsHTML;
              }

              while ((matcher = elementMatchers[j++])) {
                if (matcher(elem, context || document, xml)) {
                  results.push(elem);

                  break;
                }
              }

              if (outermost) {
                dirruns = dirrunsUnique;
              }
            }

            // Track unmatched elements for set filters

            if (bySet) {
              // They will have gone through all possible matchers

              if ((elem = !matcher && elem)) {
                matchedCount--;
              }

              // Lengthen the array for every element, matched or not

              if (seed) {
                unmatched.push(elem);
              }
            }
          }

          // `i` is now the count of elements visited above, and adding it to `matchedCount`

          // makes the latter nonnegative.

          matchedCount += i;

          // Apply set filters to unmatched elements

          // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`

          // equals `i`), unless we didn't visit _any_ elements in the above loop because we have

          // no element matchers and no seed.

          // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that

          // case, which will result in a "00" `matchedCount` that differs from `i` but is also

          // numerically zero.

          if (bySet && i !== matchedCount) {
            j = 0;

            while ((matcher = setMatchers[j++])) {
              matcher(unmatched, setMatched, context, xml);
            }

            if (seed) {
              // Reintegrate element matches to eliminate the need for sorting

              if (matchedCount > 0) {
                while (i--) {
                  if (!(unmatched[i] || setMatched[i])) {
                    setMatched[i] = pop.call(results);
                  }
                }
              }

              // Discard index placeholder values to get only actual matches

              setMatched = condense(setMatched);
            }

            // Add matches to results

            push.apply(results, setMatched);

            // Seedless set matches succeeding multiple successful matchers stipulate sorting

            if (
              outermost &&
              !seed &&
              setMatched.length > 0 &&
              matchedCount + setMatchers.length > 1
            ) {
              Sizzle.uniqueSort(results);
            }
          }

          // Override manipulation of globals by nested matchers

          if (outermost) {
            dirruns = dirrunsUnique;

            outermostContext = contextBackup;
          }

          return unmatched;
        };

      return bySet ? markFunction(superMatcher) : superMatcher;
    }

    compile = Sizzle.compile = function (
      selector,
      match /* Internal Use Only */
    ) {
      var i,
        setMatchers = [],
        elementMatchers = [],
        cached = compilerCache[selector + " "];

      if (!cached) {
        // Generate a function of recursive functions that can be used to check each element

        if (!match) {
          match = tokenize(selector);
        }

        i = match.length;

        while (i--) {
          cached = matcherFromTokens(match[i]);

          if (cached[expando]) {
            setMatchers.push(cached);
          } else {
            elementMatchers.push(cached);
          }
        }

        // Cache the compiled function

        cached = compilerCache(
          selector,
          matcherFromGroupMatchers(elementMatchers, setMatchers)
        );

        // Save selector and tokenization

        cached.selector = selector;
      }

      return cached;
    };

    /**
    
     * A low-level selection function that works with Sizzle's compiled
    
     *  selector functions
    
     * @param {String|Function} selector A selector or a pre-compiled
    
     *  selector function built with Sizzle.compile
    
     * @param {Element} context
    
     * @param {Array} [results]
    
     * @param {Array} [seed] A set of elements to match against
    
     */

    select = Sizzle.select = function (selector, context, results, seed) {
      var i,
        tokens,
        token,
        type,
        find,
        compiled = typeof selector === "function" && selector,
        match = !seed && tokenize((selector = compiled.selector || selector));

      results = results || [];

      // Try to minimize operations if there is only one selector in the list and no seed

      // (the latter of which guarantees us context)

      if (match.length === 1) {
        // Reduce context if the leading compound selector is an ID

        tokens = match[0] = match[0].slice(0);

        if (
          tokens.length > 2 &&
          (token = tokens[0]).type === "ID" &&
          context.nodeType === 9 &&
          documentIsHTML &&
          Expr.relative[tokens[1].type]
        ) {
          context = (Expr.find["ID"](
            token.matches[0].replace(runescape, funescape),
            context
          ) || [])[0];

          if (!context) {
            return results;

            // Precompiled matchers will still verify ancestry, so step up a level
          } else if (compiled) {
            context = context.parentNode;
          }

          selector = selector.slice(tokens.shift().value.length);
        }

        // Fetch a seed set for right-to-left matching

        i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;

        while (i--) {
          token = tokens[i];

          // Abort if we hit a combinator

          if (Expr.relative[(type = token.type)]) {
            break;
          }

          if ((find = Expr.find[type])) {
            // Search, expanding context for leading sibling combinators

            if (
              (seed = find(
                token.matches[0].replace(runescape, funescape),

                (rsibling.test(tokens[0].type) &&
                  testContext(context.parentNode)) ||
                  context
              ))
            ) {
              // If seed is empty or no tokens remain, we can return early

              tokens.splice(i, 1);

              selector = seed.length && toSelector(tokens);

              if (!selector) {
                push.apply(results, seed);

                return results;
              }

              break;
            }
          }
        }
      }

      // Compile and execute a filtering function if one is not provided

      // Provide `match` to avoid retokenization if we modified the selector above

      (compiled || compile(selector, match))(
        seed,

        context,

        !documentIsHTML,

        results,

        !context ||
          (rsibling.test(selector) && testContext(context.parentNode)) ||
          context
      );

      return results;
    };

    // One-time assignments

    // Sort stability

    support.sortStable = expando.split("").sort(sortOrder).join("") === expando;

    // Support: Chrome 14-35+

    // Always assume duplicates if they aren't passed to the comparison function

    support.detectDuplicates = !!hasDuplicate;

    // Initialize against the default document

    setDocument();

    // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)

    // Detached nodes confoundingly follow *each other*

    support.sortDetached = assert(function (el) {
      // Should return 1, but returns 4 (following)

      return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
    });

    // Support: IE<8

    // Prevent attribute/property "interpolation"

    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

    if (
      !assert(function (el) {
        el.innerHTML = "<a href='#'></a>";

        return el.firstChild.getAttribute("href") === "#";
      })
    ) {
      addHandle("type|href|height|width", function (elem, name, isXML) {
        if (!isXML) {
          return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        }
      });
    }

    // Support: IE<9

    // Use defaultValue in place of getAttribute("value")

    if (
      !support.attributes ||
      !assert(function (el) {
        el.innerHTML = "<input/>";

        el.firstChild.setAttribute("value", "");

        return el.firstChild.getAttribute("value") === "";
      })
    ) {
      addHandle("value", function (elem, name, isXML) {
        if (!isXML && elem.nodeName.toLowerCase() === "input") {
          return elem.defaultValue;
        }
      });
    }

    // Support: IE<9

    // Use getAttributeNode to fetch booleans when getAttribute lies

    if (
      !assert(function (el) {
        return el.getAttribute("disabled") == null;
      })
    ) {
      addHandle(booleans, function (elem, name, isXML) {
        var val;

        if (!isXML) {
          return elem[name] === true
            ? name.toLowerCase()
            : (val = elem.getAttributeNode(name)) && val.specified
            ? val.value
            : null;
        }
      });
    }

    return Sizzle;
  })(window);

  jQuery.find = Sizzle;

  jQuery.expr = Sizzle.selectors;

  // Deprecated

  jQuery.expr[":"] = jQuery.expr.pseudos;

  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;

  jQuery.text = Sizzle.getText;

  jQuery.isXMLDoc = Sizzle.isXML;

  jQuery.contains = Sizzle.contains;

  jQuery.escapeSelector = Sizzle.escape;

  var dir = function (elem, dir, until) {
    var matched = [],
      truncate = until !== undefined;

    while ((elem = elem[dir]) && elem.nodeType !== 9) {
      if (elem.nodeType === 1) {
        if (truncate && jQuery(elem).is(until)) {
          break;
        }

        matched.push(elem);
      }
    }

    return matched;
  };

  var siblings = function (n, elem) {
    var matched = [];

    for (; n; n = n.nextSibling) {
      if (n.nodeType === 1 && n !== elem) {
        matched.push(n);
      }
    }

    return matched;
  };

  var rneedsContext = jQuery.expr.match.needsContext;

  var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

  var risSimple = /^.[^:#\[\.,]*$/;

  // Implement the identical functionality for filter and not

  function winnow(elements, qualifier, not) {
    if (jQuery.isFunction(qualifier)) {
      return jQuery.grep(elements, function (elem, i) {
        return !!qualifier.call(elem, i, elem) !== not;
      });
    }

    // Single element

    if (qualifier.nodeType) {
      return jQuery.grep(elements, function (elem) {
        return (elem === qualifier) !== not;
      });
    }

    // Arraylike of elements (jQuery, arguments, Array)

    if (typeof qualifier !== "string") {
      return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) > -1 !== not;
      });
    }

    // Simple selector that can be filtered directly, removing non-Elements

    if (risSimple.test(qualifier)) {
      return jQuery.filter(qualifier, elements, not);
    }

    // Complex selector, compare the two sets, removing non-Elements

    qualifier = jQuery.filter(qualifier, elements);

    return jQuery.grep(elements, function (elem) {
      return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;
    });
  }

  jQuery.filter = function (expr, elems, not) {
    var elem = elems[0];

    if (not) {
      expr = ":not(" + expr + ")";
    }

    if (elems.length === 1 && elem.nodeType === 1) {
      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
    }

    return jQuery.find.matches(
      expr,
      jQuery.grep(elems, function (elem) {
        return elem.nodeType === 1;
      })
    );
  };

  jQuery.fn.extend({
    find: function (selector) {
      var i,
        ret,
        len = this.length,
        self = this;

      if (typeof selector !== "string") {
        return this.pushStack(
          jQuery(selector).filter(function () {
            for (i = 0; i < len; i++) {
              if (jQuery.contains(self[i], this)) {
                return true;
              }
            }
          })
        );
      }

      ret = this.pushStack([]);

      for (i = 0; i < len; i++) {
        jQuery.find(selector, self[i], ret);
      }

      return len > 1 ? jQuery.uniqueSort(ret) : ret;
    },

    filter: function (selector) {
      return this.pushStack(winnow(this, selector || [], false));
    },

    not: function (selector) {
      return this.pushStack(winnow(this, selector || [], true));
    },

    is: function (selector) {
      return !!winnow(
        this,

        // If this is a positional/relative selector, check membership in the returned set

        // so $("p:first").is("p:last") won't return true for a doc with two "p".

        typeof selector === "string" && rneedsContext.test(selector)
          ? jQuery(selector)
          : selector || [],

        false
      ).length;
    },
  });

  // Initialize a jQuery object

  // A central reference to the root jQuery(document)

  var rootjQuery,
    // A simple way to check for HTML strings

    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)

    // Strict HTML recognition (#11290: must start with <)

    // Shortcut simple #id case for speed

    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
    init = (jQuery.fn.init = function (selector, context, root) {
      var match, elem;

      // HANDLE: $(""), $(null), $(undefined), $(false)

      if (!selector) {
        return this;
      }

      // Method init() accepts an alternate rootjQuery

      // so migrate can support jQuery.sub (gh-2101)

      root = root || rootjQuery;

      // Handle HTML strings

      if (typeof selector === "string") {
        if (
          selector[0] === "<" &&
          selector[selector.length - 1] === ">" &&
          selector.length >= 3
        ) {
          // Assume that strings that start and end with <> are HTML and skip the regex check

          match = [null, selector, null];
        } else {
          match = rquickExpr.exec(selector);
        }

        // Match html or make sure no context is specified for #id

        if (match && (match[1] || !context)) {
          // HANDLE: $(html) -> $(array)

          if (match[1]) {
            context = context instanceof jQuery ? context[0] : context;

            // Option to run scripts is true for back-compat

            // Intentionally let the error be thrown if parseHTML is not present

            jQuery.merge(
              this,
              jQuery.parseHTML(
                match[1],

                context && context.nodeType
                  ? context.ownerDocument || context
                  : document,

                true
              )
            );

            // HANDLE: $(html, props)

            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
              for (match in context) {
                // Properties of context are called as methods if possible

                if (jQuery.isFunction(this[match])) {
                  this[match](context[match]);

                  // ...and otherwise set as attributes
                } else {
                  this.attr(match, context[match]);
                }
              }
            }

            return this;

            // HANDLE: $(#id)
          } else {
            elem = document.getElementById(match[2]);

            if (elem) {
              // Inject the element directly into the jQuery object

              this[0] = elem;

              this.length = 1;
            }

            return this;
          }

          // HANDLE: $(expr, $(...))
        } else if (!context || context.jquery) {
          return (context || root).find(selector);

          // HANDLE: $(expr, context)

          // (which is just equivalent to: $(context).find(expr)
        } else {
          return this.constructor(context).find(selector);
        }

        // HANDLE: $(DOMElement)
      } else if (selector.nodeType) {
        this[0] = selector;

        this.length = 1;

        return this;

        // HANDLE: $(function)

        // Shortcut for document ready
      } else if (jQuery.isFunction(selector)) {
        return root.ready !== undefined
          ? root.ready(selector)
          : // Execute immediately if ready is not present

            selector(jQuery);
      }

      return jQuery.makeArray(selector, this);
    });

  // Give the init function the jQuery prototype for later instantiation

  init.prototype = jQuery.fn;

  // Initialize central reference

  rootjQuery = jQuery(document);

  var rparentsprev = /^(?:parents|prev(?:Until|All))/,
    // Methods guaranteed to produce a unique set when starting from a unique set

    guaranteedUnique = {
      children: true,

      contents: true,

      next: true,

      prev: true,
    };

  jQuery.fn.extend({
    has: function (target) {
      var targets = jQuery(target, this),
        l = targets.length;

      return this.filter(function () {
        var i = 0;

        for (; i < l; i++) {
          if (jQuery.contains(this, targets[i])) {
            return true;
          }
        }
      });
    },

    closest: function (selectors, context) {
      var cur,
        i = 0,
        l = this.length,
        matched = [],
        targets = typeof selectors !== "string" && jQuery(selectors);

      // Positional selectors never match, since there's no _selection_ context

      if (!rneedsContext.test(selectors)) {
        for (; i < l; i++) {
          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
            // Always skip document fragments

            if (
              cur.nodeType < 11 &&
              (targets
                ? targets.index(cur) > -1
                : // Don't pass non-elements to Sizzle

                  cur.nodeType === 1 &&
                  jQuery.find.matchesSelector(cur, selectors))
            ) {
              matched.push(cur);

              break;
            }
          }
        }
      }

      return this.pushStack(
        matched.length > 1 ? jQuery.uniqueSort(matched) : matched
      );
    },

    // Determine the position of an element within the set

    index: function (elem) {
      // No argument, return index in parent

      if (!elem) {
        return this[0] && this[0].parentNode
          ? this.first().prevAll().length
          : -1;
      }

      // Index in selector

      if (typeof elem === "string") {
        return indexOf.call(jQuery(elem), this[0]);
      }

      // Locate the position of the desired element

      return indexOf.call(
        this,

        // If it receives a jQuery object, the first element is used

        elem.jquery ? elem[0] : elem
      );
    },

    add: function (selector, context) {
      return this.pushStack(
        jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context)))
      );
    },

    addBack: function (selector) {
      return this.add(
        selector == null ? this.prevObject : this.prevObject.filter(selector)
      );
    },
  });

  function sibling(cur, dir) {
    while ((cur = cur[dir]) && cur.nodeType !== 1) {}

    return cur;
  }

  jQuery.each(
    {
      parent: function (elem) {
        var parent = elem.parentNode;

        return parent && parent.nodeType !== 11 ? parent : null;
      },

      parents: function (elem) {
        return dir(elem, "parentNode");
      },

      parentsUntil: function (elem, i, until) {
        return dir(elem, "parentNode", until);
      },

      next: function (elem) {
        return sibling(elem, "nextSibling");
      },

      prev: function (elem) {
        return sibling(elem, "previousSibling");
      },

      nextAll: function (elem) {
        return dir(elem, "nextSibling");
      },

      prevAll: function (elem) {
        return dir(elem, "previousSibling");
      },

      nextUntil: function (elem, i, until) {
        return dir(elem, "nextSibling", until);
      },

      prevUntil: function (elem, i, until) {
        return dir(elem, "previousSibling", until);
      },

      siblings: function (elem) {
        return siblings((elem.parentNode || {}).firstChild, elem);
      },

      children: function (elem) {
        return siblings(elem.firstChild);
      },

      contents: function (elem) {
        return elem.contentDocument || jQuery.merge([], elem.childNodes);
      },
    },
    function (name, fn) {
      jQuery.fn[name] = function (until, selector) {
        if (name.slice(-5) !== "Until") {
          selector = until;
        }

        if (selector && typeof selector === "string") {
          matched = jQuery.filter(selector, matched);
        }

        if (this.length > 1) {
          // Remove duplicates

          if (!guaranteedUnique[name]) {
            jQuery.uniqueSort(matched);
          }

          // Reverse order for parents* and prev-derivatives

          if (rparentsprev.test(name)) {
            matched.reverse();
          }
        }

        return this.pushStack(matched);
      };
    }
  );

  var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;

  // Convert String-formatted options into Object-formatted ones

  function createOptions(options) {
    var object = {};

    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
      object[flag] = true;
    });

    return object;
  }

  /*
    
     * Create a callback list using the following parameters:
    
     *
    
     *	options: an optional list of space-separated options that will change how
    
     *			the callback list behaves or a more traditional option object
    
     *
    
     * By default a callback list will act like an event callback list and can be
    
     * "fired" multiple times.
    
     *
    
     * Possible options:
    
     *
    
     *	once:			will ensure the callback list can only be fired once (like a Deferred)
    
     *
    
     *	memory:			will keep track of previous values and will call any callback added
    
     *					after the list has been fired right away with the latest "memorized"
    
     *					values (like a Deferred)
    
     *
    
     *	unique:			will ensure a callback can only be added once (no duplicate in the list)
    
     *
    
     *	stopOnFalse:	interrupt callings when a callback returns false
    
     *
    
     */

  jQuery.Callbacks = function (options) {
    // Convert options from String-formatted to Object-formatted if needed

    // (we check in cache first)

    options =
      typeof options === "string"
        ? createOptions(options)
        : jQuery.extend({}, options);

    var // Flag to know if list is currently firing

      firing,
      // Last fire value for non-forgettable lists

      memory,
      // Flag to know if list was already fired

      fired,
      // Flag to prevent firing

      locked,
      // Actual callback list

      list = [],
      // Queue of execution data for repeatable lists

      queue = [],
      // Index of currently firing callback (modified by add/remove as needed)

      firingIndex = -1,
      // Fire callbacks

      fire = function () {
        // Enforce single-firing

        locked = options.once;

        // Execute callbacks for all pending executions,

        // respecting firingIndex overrides and runtime changes

        fired = firing = true;

        for (; queue.length; firingIndex = -1) {
          memory = queue.shift();

          while (++firingIndex < list.length) {
            // Run callback and check for early termination

            if (
              list[firingIndex].apply(memory[0], memory[1]) === false &&
              options.stopOnFalse
            ) {
              // Jump to end and forget the data so .add doesn't re-fire

              firingIndex = list.length;

              memory = false;
            }
          }
        }

        // Forget the data if we're done with it

        if (!options.memory) {
          memory = false;
        }

        firing = false;

        // Clean up if we're done firing for good

        if (locked) {
          // Keep an empty list if we have data for future add calls

          if (memory) {
            list = [];

            // Otherwise, this object is spent
          } else {
            list = "";
          }
        }
      },
      // Actual Callbacks object

      self = {
        // Add a callback or a collection of callbacks to the list

        add: function () {
          if (list) {
            // If we have memory from a past run, we should fire after adding

            if (memory && !firing) {
              firingIndex = list.length - 1;

              queue.push(memory);
            }

            (function add(args) {
              jQuery.each(args, function (_, arg) {
                if (jQuery.isFunction(arg)) {
                  if (!options.unique || !self.has(arg)) {
                    list.push(arg);
                  }
                } else if (arg && arg.length && jQuery.type(arg) !== "string") {
                  // Inspect recursively

                  add(arg);
                }
              });
            })(arguments);

            if (memory && !firing) {
              fire();
            }
          }

          return this;
        },

        // Remove a callback from the list

        remove: function () {
          jQuery.each(arguments, function (_, arg) {
            var index;

            while ((index = jQuery.inArray(arg, list, index)) > -1) {
              list.splice(index, 1);

              // Handle firing indexes

              if (index <= firingIndex) {
                firingIndex--;
              }
            }
          });

          return this;
        },

        // Check if a given callback is in the list.

        // If no argument is given, return whether or not list has callbacks attached.

        has: function (fn) {
          return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
        },

        // Remove all callbacks from the list

        empty: function () {
          if (list) {
            list = [];
          }

          return this;
        },

        // Disable .fire and .add

        // Abort any current/pending executions

        // Clear all callbacks and values

        disable: function () {
          locked = queue = [];

          list = memory = "";

          return this;
        },

        disabled: function () {
          return !list;
        },

        // Disable .fire

        // Also disable .add unless we have memory (since it would have no effect)

        // Abort any pending executions

        lock: function () {
          locked = queue = [];

          if (!memory && !firing) {
            list = memory = "";
          }

          return this;
        },

        locked: function () {
          return !!locked;
        },

        // Call all callbacks with the given context and arguments

        fireWith: function (context, args) {
          if (!locked) {
            args = args || [];

            args = [context, args.slice ? args.slice() : args];

            queue.push(args);

            if (!firing) {
              fire();
            }
          }

          return this;
        },

        // Call all the callbacks with the given arguments

        fire: function () {
          self.fireWith(this, arguments);

          return this;
        },

        // To know if the callbacks have already been called at least once

        fired: function () {
          return !!fired;
        },
      };

    return self;
  };

  function Identity(v) {
    return v;
  }

  function Thrower(ex) {
    throw ex;
  }

  function adoptValue(value, resolve, reject) {
    var method;

    try {
      // Check for promise aspect first to privilege synchronous behavior

      if (value && jQuery.isFunction((method = value.promise))) {
        method.call(value).done(resolve).fail(reject);

        // Other thenables
      } else if (value && jQuery.isFunction((method = value.then))) {
        method.call(value, resolve, reject);

        // Other non-thenables
      } else {
        // Support: Android 4.0 only

        // Strict mode functions invoked without .call/.apply get global-object context

        resolve.call(undefined, value);
      }

      // For Promises/A+, convert exceptions into rejections

      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in

      // Deferred#then to conditionally suppress rejection.
    } catch (value) {
      // Support: Android 4.0 only

      // Strict mode functions invoked without .call/.apply get global-object context

      reject.call(undefined, value);
    }
  }

  jQuery.extend({
    Deferred: function (func) {
      var tuples = [
          // action, add listener, callbacks,

          // ... .then handlers, argument index, [final state]

          [
            "notify",
            "progress",
            jQuery.Callbacks("memory"),

            jQuery.Callbacks("memory"),
            2,
          ],

          [
            "resolve",
            "done",
            jQuery.Callbacks("once memory"),

            jQuery.Callbacks("once memory"),
            0,
            "resolved",
          ],

          [
            "reject",
            "fail",
            jQuery.Callbacks("once memory"),

            jQuery.Callbacks("once memory"),
            1,
            "rejected",
          ],
        ],
        state = "pending",
        promise = {
          state: function () {
            return state;
          },

          always: function () {
            deferred.done(arguments).fail(arguments);

            return this;
          },

          catch: function (fn) {
            return promise.then(null, fn);
          },

          // Keep pipe for back-compat

          pipe: function (/* fnDone, fnFail, fnProgress */) {
            var fns = arguments;

            return jQuery
              .Deferred(function (newDefer) {
                jQuery.each(tuples, function (i, tuple) {
                  var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];

                  // deferred.progress(function() { bind to newDefer or newDefer.notify })

                  // deferred.done(function() { bind to newDefer or newDefer.resolve })

                  // deferred.fail(function() { bind to newDefer or newDefer.reject })

                  deferred[tuple[1]](function () {
                    var returned = fn && fn.apply(this, arguments);

                    if (returned && jQuery.isFunction(returned.promise)) {
                      returned
                        .promise()

                        .progress(newDefer.notify)

                        .done(newDefer.resolve)

                        .fail(newDefer.reject);
                    } else {
                      newDefer[tuple[0] + "With"](
                        this,

                        fn ? [returned] : arguments
                      );
                    }
                  });
                });

                fns = null;
              })
              .promise();
          },

          then: function (onFulfilled, onRejected, onProgress) {
            var maxDepth = 0;

            function resolve(depth, deferred, handler, special) {
              return function () {
                var that = this,
                  args = arguments,
                  mightThrow = function () {
                    var returned, then;

                    // Support: Promises/A+ section 2.3.3.3.3

                    // https://promisesaplus.com/#point-59

                    // Ignore double-resolution attempts

                    if (depth < maxDepth) {
                      return;
                    }

                    returned = handler.apply(that, args);

                    // Support: Promises/A+ section 2.3.1

                    // https://promisesaplus.com/#point-48

                    if (returned === deferred.promise()) {
                      throw new TypeError("Thenable self-resolution");
                    }

                    // Support: Promises/A+ sections 2.3.3.1, 3.5

                    // https://promisesaplus.com/#point-54

                    // https://promisesaplus.com/#point-75

                    // Retrieve `then` only once

                    then =
                      returned &&
                      // Support: Promises/A+ section 2.3.4

                      // https://promisesaplus.com/#point-64

                      // Only check objects and functions for thenability

                      (typeof returned === "object" ||
                        typeof returned === "function") &&
                      returned.then;

                    // Handle a returned thenable

                    if (jQuery.isFunction(then)) {
                      // Special processors (notify) just wait for resolution

                      if (special) {
                        then.call(
                          returned,

                          resolve(maxDepth, deferred, Identity, special),

                          resolve(maxDepth, deferred, Thrower, special)
                        );

                        // Normal processors (resolve) also hook into progress
                      } else {
                        // ...and disregard older resolution values

                        maxDepth++;

                        then.call(
                          returned,

                          resolve(maxDepth, deferred, Identity, special),

                          resolve(maxDepth, deferred, Thrower, special),

                          resolve(
                            maxDepth,
                            deferred,
                            Identity,

                            deferred.notifyWith
                          )
                        );
                      }

                      // Handle all other returned values
                    } else {
                      // Only substitute handlers pass on context

                      // and multiple values (non-spec behavior)

                      if (handler !== Identity) {
                        that = undefined;

                        args = [returned];
                      }

                      // Process the value(s)

                      // Default process is resolve

                      (special || deferred.resolveWith)(that, args);
                    }
                  },
                  // Only normal processors (resolve) catch and reject exceptions

                  process = special
                    ? mightThrow
                    : function () {
                        try {
                          mightThrow();
                        } catch (e) {
                          if (jQuery.Deferred.exceptionHook) {
                            jQuery.Deferred.exceptionHook(
                              e,

                              process.stackTrace
                            );
                          }

                          // Support: Promises/A+ section 2.3.3.3.4.1

                          // https://promisesaplus.com/#point-61

                          // Ignore post-resolution exceptions

                          if (depth + 1 >= maxDepth) {
                            // Only substitute handlers pass on context

                            // and multiple values (non-spec behavior)

                            if (handler !== Thrower) {
                              that = undefined;

                              args = [e];
                            }

                            deferred.rejectWith(that, args);
                          }
                        }
                      };

                // Support: Promises/A+ section 2.3.3.3.1

                // https://promisesaplus.com/#point-57

                // Re-resolve promises immediately to dodge false rejection from

                // subsequent errors

                if (depth) {
                  process();
                } else {
                  if (jQuery.Deferred.getStackHook) {
                    process.stackTrace = jQuery.Deferred.getStackHook();
                  }

                  window.setTimeout(process);
                }
              };
            }

            return jQuery
              .Deferred(function (newDefer) {
                // progress_handlers.add( ... )

                tuples[0][3].add(
                  resolve(
                    0,

                    newDefer,

                    jQuery.isFunction(onProgress) ? onProgress : Identity,

                    newDefer.notifyWith
                  )
                );

                // fulfilled_handlers.add( ... )

                tuples[1][3].add(
                  resolve(
                    0,

                    newDefer,

                    jQuery.isFunction(onFulfilled) ? onFulfilled : Identity
                  )
                );

                // rejected_handlers.add( ... )

                tuples[2][3].add(
                  resolve(
                    0,

                    newDefer,

                    jQuery.isFunction(onRejected) ? onRejected : Thrower
                  )
                );
              })
              .promise();
          },

          // Get a promise for this deferred

          // If obj is provided, the promise aspect is added to the object

          promise: function (obj) {
            return obj != null ? jQuery.extend(obj, promise) : promise;
          },
        },
        deferred = {};

      // Add list-specific methods

      jQuery.each(tuples, function (i, tuple) {
        var list = tuple[2],
          stateString = tuple[5];

        // promise.progress = list.add

        // promise.done = list.add

        // promise.fail = list.add

        promise[tuple[1]] = list.add;

        // Handle state

        if (stateString) {
          list.add(
            function () {
              // state = "resolved" (i.e., fulfilled)

              // state = "rejected"

              state = stateString;
            },

            // rejected_callbacks.disable

            // fulfilled_callbacks.disable

            tuples[3 - i][2].disable,

            // progress_callbacks.lock

            tuples[0][2].lock
          );
        }

        // progress_handlers.fire

        // fulfilled_handlers.fire

        // rejected_handlers.fire

        list.add(tuple[3].fire);

        // deferred.notify = function() { deferred.notifyWith(...) }

        // deferred.resolve = function() { deferred.resolveWith(...) }

        // deferred.reject = function() { deferred.rejectWith(...) }

        deferred[tuple[0]] = function () {
          deferred[tuple[0] + "With"](
            this === deferred ? undefined : this,
            arguments
          );

          return this;
        };

        // deferred.notifyWith = list.fireWith

        // deferred.resolveWith = list.fireWith

        // deferred.rejectWith = list.fireWith

        deferred[tuple[0] + "With"] = list.fireWith;
      });

      // Make the deferred a promise

      promise.promise(deferred);

      // Call given func if any

      if (func) {
        func.call(deferred, deferred);
      }

      // All done!

      return deferred;
    },

    // Deferred helper

    when: function (singleValue) {
      var // count of uncompleted subordinates

        remaining = arguments.length,
        // count of unprocessed arguments

        i = remaining,
        // subordinate fulfillment data

        resolveContexts = Array(i),
        resolveValues = slice.call(arguments),
        // the master Deferred

        master = jQuery.Deferred(),
        // subordinate callback factory

        updateFunc = function (i) {
          return function (value) {
            resolveContexts[i] = this;

            resolveValues[i] =
              arguments.length > 1 ? slice.call(arguments) : value;

            if (!--remaining) {
              master.resolveWith(resolveContexts, resolveValues);
            }
          };
        };

      // Single- and empty arguments are adopted like Promise.resolve

      if (remaining <= 1) {
        adoptValue(
          singleValue,
          master.done(updateFunc(i)).resolve,
          master.reject
        );

        // Use .then() to unwrap secondary thenables (cf. gh-3000)

        if (
          master.state() === "pending" ||
          jQuery.isFunction(resolveValues[i] && resolveValues[i].then)
        ) {
          return master.then();
        }
      }

      // Multiple arguments are aggregated like Promise.all array elements

      while (i--) {
        adoptValue(resolveValues[i], updateFunc(i), master.reject);
      }

      return master.promise();
    },
  });

  // These usually indicate a programmer mistake during development,

  // warn about them ASAP rather than swallowing them by default.

  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

  jQuery.Deferred.exceptionHook = function (error, stack) {
    // Support: IE 8 - 9 only

    // Console exists when dev tools are open, which can happen at any time

    if (
      window.console &&
      window.console.warn &&
      error &&
      rerrorNames.test(error.name)
    ) {
      window.console.warn(
        "jQuery.Deferred exception: " + error.message,
        error.stack,
        stack
      );
    }
  };

  jQuery.readyException = function (error) {
    window.setTimeout(function () {
      throw error;
    });
  };

  // The deferred used on DOM ready

  var readyList = jQuery.Deferred();

  jQuery.fn.ready = function (fn) {
    readyList

      .then(fn)

      // Wrap jQuery.readyException in a function so that the lookup

      // happens at the time of error handling instead of callback

      // registration.

      .catch(function (error) {
        jQuery.readyException(error);
      });

    return this;
  };

  jQuery.extend({
    // Is the DOM ready to be used? Set to true once it occurs.

    isReady: false,

    // A counter to track how many items to wait for before

    // the ready event fires. See #6781

    readyWait: 1,

    // Hold (or release) the ready event

    holdReady: function (hold) {
      if (hold) {
        jQuery.readyWait++;
      } else {
        jQuery.ready(true);
      }
    },

    // Handle when the DOM is ready

    ready: function (wait) {
      // Abort if there are pending holds or we're already ready

      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
        return;
      }

      // Remember that the DOM is ready

      jQuery.isReady = true;

      // If a normal DOM Ready event fired, decrement, and wait if need be

      if (wait !== true && --jQuery.readyWait > 0) {
        return;
      }

      // If there are functions bound, to execute

      readyList.resolveWith(document, [jQuery]);
    },
  });

  jQuery.ready.then = readyList.then;

  // The ready event handler and self cleanup method

  function completed() {
    document.removeEventListener("DOMContentLoaded", completed);

    window.removeEventListener("load", completed);

    jQuery.ready();
  }

  // Catch cases where $(document).ready() is called

  // after the browser event has already occurred.

  // Support: IE <=9 - 10 only

  // Older IE sometimes signals "interactive" too soon

  if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
  ) {
    window.setTimeout(jQuery.ready);
  } else {
    // Use the handy event callback

    document.addEventListener("DOMContentLoaded", completed);

    // A fallback to window.onload, that will always work

    window.addEventListener("load", completed);
  }

  // Multifunctional method to get and set values of a collection

  // The value/s can optionally be executed if it's a function

  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {
    var i = 0,
      len = elems.length,
      bulk = key == null;

    // Sets many values

    if (jQuery.type(key) === "object") {
      chainable = true;

      for (i in key) {
        access(elems, fn, i, key[i], true, emptyGet, raw);
      }

      // Sets one value
    } else if (value !== undefined) {
      chainable = true;

      if (!jQuery.isFunction(value)) {
        raw = true;
      }

      if (bulk) {
        // Bulk operations run against the entire set

        if (raw) {
          fn.call(elems, value);

          fn = null;

          // ...except when executing function values
        } else {
          bulk = fn;

          fn = function (elem, key, value) {
            return bulk.call(jQuery(elem), value);
          };
        }
      }

      if (fn) {
        for (; i < len; i++) {
          fn(
            elems[i],
            key,
            raw ? value : value.call(elems[i], i, fn(elems[i], key))
          );
        }
      }
    }

    if (chainable) {
      return elems;
    }

    // Gets

    if (bulk) {
      return fn.call(elems);
    }

    return len ? fn(elems[0], key) : emptyGet;
  };

  var acceptData = function (owner) {
    // Accepts only:

    //  - Node

    //    - Node.ELEMENT_NODE

    //    - Node.DOCUMENT_NODE

    //  - Object

    //    - Any

    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
  };

  function Data() {
    this.expando = jQuery.expando + Data.uid++;
  }

  Data.uid = 1;

  Data.prototype = {
    cache: function (owner) {
      // Check if the owner object already has a cache

      var value = owner[this.expando];

      // If not, create one

      if (!value) {
        value = {};

        // We can accept data for non-element nodes in modern browsers,

        // but we should not, see #8335.

        // Always return an empty object.

        if (acceptData(owner)) {
          // If it is a node unlikely to be stringify-ed or looped over

          // use plain assignment

          if (owner.nodeType) {
            owner[this.expando] = value;

            // Otherwise secure it in a non-enumerable property

            // configurable must be true to allow the property to be

            // deleted when data is removed
          } else {
            Object.defineProperty(owner, this.expando, {
              value: value,

              configurable: true,
            });
          }
        }
      }

      return value;
    },

    set: function (owner, data, value) {
      var prop,
        cache = this.cache(owner);

      // Handle: [ owner, key, value ] args

      // Always use camelCase key (gh-2257)

      if (typeof data === "string") {
        cache[jQuery.camelCase(data)] = value;

        // Handle: [ owner, { properties } ] args
      } else {
        // Copy the properties one-by-one to the cache object

        for (prop in data) {
          cache[jQuery.camelCase(prop)] = data[prop];
        }
      }

      return cache;
    },

    get: function (owner, key) {
      return key === undefined
        ? this.cache(owner)
        : // Always use camelCase key (gh-2257)

          owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];
    },

    access: function (owner, key, value) {
      // In cases where either:

      //

      //   1. No key was specified

      //   2. A string key was specified, but no value provided

      //

      // Take the "read" path and allow the get method to determine

      // which value to return, respectively either:

      //

      //   1. The entire cache object

      //   2. The data stored at the key

      //

      if (
        key === undefined ||
        (key && typeof key === "string" && value === undefined)
      ) {
        return this.get(owner, key);
      }

      // When the key is not a string, or both a key and value

      // are specified, set or extend (existing objects) with either:

      //

      //   1. An object of properties

      //   2. A key and value

      //

      this.set(owner, key, value);

      // Since the "set" path can have two possible entry points

      // return the expected data based on which path was taken[*]

      return value !== undefined ? value : key;
    },

    remove: function (owner, key) {
      var i,
        cache = owner[this.expando];

      if (cache === undefined) {
        return;
      }

      if (key !== undefined) {
        // Support array or space separated string of keys

        if (jQuery.isArray(key)) {
          // If key is an array of keys...
          // We always set camelCase keys, so remove that.
        } else {
          key = jQuery.camelCase(key);

          // If a key with the spaces exists, use it.

          // Otherwise, create an array by matching non-whitespace

          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
        }

        i = key.length;

        while (i--) {
          delete cache[key[i]];
        }
      }

      // Remove the expando if there's no more data

      if (key === undefined || jQuery.isEmptyObject(cache)) {
        // Support: Chrome <=35 - 45

        // Webkit & Blink performance suffers when deleting properties

        // from DOM nodes, so set to undefined instead

        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)

        if (owner.nodeType) {
          owner[this.expando] = undefined;
        } else {
          delete owner[this.expando];
        }
      }
    },

    hasData: function (owner) {
      var cache = owner[this.expando];

      return cache !== undefined && !jQuery.isEmptyObject(cache);
    },
  };

  var dataPriv = new Data();

  var dataUser = new Data();

  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    rmultiDash = /[A-Z]/g;

  function getData(data) {
    if (data === "true") {
      return true;
    }

    if (data === "false") {
      return false;
    }

    if (data === "null") {
      return null;
    }

    // Only convert to a number if it doesn't change the string

    if (data === +data + "") {
      return +data;
    }

    if (rbrace.test(data)) {
      return JSON.parse(data);
    }

    return data;
  }

  function dataAttr(elem, key, data) {
    var name;

    // If nothing was found internally, try to fetch any

    // data from the HTML5 data-* attribute

    if (data === undefined && elem.nodeType === 1) {
      name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();

      data = elem.getAttribute(name);

      if (typeof data === "string") {
        try {
          data = getData(data);
        } catch (e) {}

        // Make sure we set the data so it isn't changed later

        dataUser.set(elem, key, data);
      } else {
        data = undefined;
      }
    }

    return data;
  }

  jQuery.extend({
    hasData: function (elem) {
      return dataUser.hasData(elem) || dataPriv.hasData(elem);
    },

    data: function (elem, name, data) {
      return dataUser.access(elem, name, data);
    },

    removeData: function (elem, name) {
      dataUser.remove(elem, name);
    },

    // TODO: Now that all calls to _data and _removeData have been replaced

    // with direct calls to dataPriv methods, these can be deprecated.

    _data: function (elem, name, data) {
      return dataPriv.access(elem, name, data);
    },

    _removeData: function (elem, name) {
      dataPriv.remove(elem, name);
    },
  });

  jQuery.fn.extend({
    data: function (key, value) {
      var i,
        name,
        data,
        elem = this[0],
        attrs = elem && elem.attributes;

      // Gets all values

      if (key === undefined) {
        if (this.length) {
          data = dataUser.get(elem);

          if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
            i = attrs.length;

            while (i--) {
              // Support: IE 11 only

              // The attrs elements can be null (#14894)

              if (attrs[i]) {
                name = attrs[i].name;

                if (name.indexOf("data-") === 0) {
                  name = jQuery.camelCase(name.slice(5));

                  dataAttr(elem, name, data[name]);
                }
              }
            }

            dataPriv.set(elem, "hasDataAttrs", true);
          }
        }

        return data;
      }

      // Sets multiple values

      if (typeof key === "object") {
        return this.each(function () {
          dataUser.set(this, key);
        });
      }

      return access(
        this,
        function (value) {
          var data;

          // The calling jQuery object (element matches) is not empty

          // (and therefore has an element appears at this[ 0 ]) and the

          // `value` parameter was not undefined. An empty jQuery object

          // will result in `undefined` for elem = this[ 0 ] which will

          // throw an exception if an attempt to read a data cache is made.

          if (elem && value === undefined) {
            // Attempt to get data from the cache

            // The key will always be camelCased in Data

            data = dataUser.get(elem, key);

            if (data !== undefined) {
              return data;
            }

            // Attempt to "discover" the data in

            // HTML5 custom data-* attrs

            data = dataAttr(elem, key);

            if (data !== undefined) {
              return data;
            }

            // We tried really hard, but the data doesn't exist.

            return;
          }

          // Set the data...

          this.each(function () {
            // We always store the camelCased key

            dataUser.set(this, key, value);
          });
        },
        null,
        value,
        arguments.length > 1,
        null,
        true
      );
    },

    removeData: function (key) {
      return this.each(function () {
        dataUser.remove(this, key);
      });
    },
  });

  jQuery.extend({
    queue: function (elem, type, data) {
      var queue;

      if (elem) {
        type = (type || "fx") + "queue";

        queue = dataPriv.get(elem, type);

        // Speed up dequeue by getting out quickly if this is just a lookup

        if (data) {
          if (!queue || jQuery.isArray(data)) {
            queue = dataPriv.access(elem, type, jQuery.makeArray(data));
          } else {
            queue.push(data);
          }
        }

        return queue || [];
      }
    },

    dequeue: function (elem, type) {
      type = type || "fx";

      var queue = jQuery.queue(elem, type),
        startLength = queue.length,
        fn = queue.shift(),
        hooks = jQuery._queueHooks(elem, type),
        next = function () {
          jQuery.dequeue(elem, type);
        };

      // If the fx queue is dequeued, always remove the progress sentinel

      if (fn === "inprogress") {
        fn = queue.shift();

        startLength--;
      }

      if (fn) {
        // Add a progress sentinel to prevent the fx queue from being

        // automatically dequeued

        if (type === "fx") {
          queue.unshift("inprogress");
        }

        // Clear up the last queue stop function

        delete hooks.stop;

        fn.call(elem, next, hooks);
      }

      if (!startLength && hooks) {
        hooks.empty.fire();
      }
    },

    // Not public - generate a queueHooks object, or return the current one

    _queueHooks: function (elem, type) {
      var key = type + "queueHooks";

      return (
        dataPriv.get(elem, key) ||
        dataPriv.access(elem, key, {
          empty: jQuery.Callbacks("once memory").add(function () {
            dataPriv.remove(elem, [type + "queue", key]);
          }),
        })
      );
    },
  });

  jQuery.fn.extend({
    queue: function (type, data) {
      var setter = 2;

      if (typeof type !== "string") {
        data = type;

        type = "fx";

        setter--;
      }

      if (arguments.length < setter) {
        return jQuery.queue(this[0], type);
      }

      return data === undefined
        ? this
        : this.each(function () {
            var queue = jQuery.queue(this, type, data);

            // Ensure a hooks for this queue

            jQuery._queueHooks(this, type);

            if (type === "fx" && queue[0] !== "inprogress") {
              jQuery.dequeue(this, type);
            }
          });
    },

    dequeue: function (type) {
      return this.each(function () {
        jQuery.dequeue(this, type);
      });
    },

    clearQueue: function (type) {
      return this.queue(type || "fx", []);
    },

    // Get a promise resolved when queues of a certain type

    // are emptied (fx is the type by default)

    promise: function (type, obj) {
      var tmp,
        count = 1,
        defer = jQuery.Deferred(),
        elements = this,
        i = this.length,
        resolve = function () {
          if (!--count) {
            defer.resolveWith(elements, [elements]);
          }
        };

      if (typeof type !== "string") {
        obj = type;

        type = undefined;
      }

      type = type || "fx";

      while (i--) {
        tmp = dataPriv.get(elements[i], type + "queueHooks");

        if (tmp && tmp.empty) {
          count++;

          tmp.empty.add(resolve);
        }
      }

      resolve();

      return defer.promise(obj);
    },
  });

  var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;

  var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");

  var cssExpand = ["Top", "Right", "Bottom", "Left"];

  var isHiddenWithinTree = function (elem, el) {
    // isHiddenWithinTree might be called from jQuery#filter function;

    // in that case, element will be second argument

    elem = el || elem;

    // Inline style trumps all

    return (
      elem.style.display === "none" ||
      (elem.style.display === "" &&
        // Otherwise, check computed style

        // Support: Firefox <=43 - 45

        // Disconnected elements can have computed display: none, so first confirm that elem is

        // in the document.

        jQuery.contains(elem.ownerDocument, elem) &&
        jQuery.css(elem, "display") === "none")
    );
  };

  var swap = function (elem, options, callback, args) {
    var ret,
      name,
      old = {};

    // Remember the old values, and insert the new ones

    for (name in options) {
      old[name] = elem.style[name];

      elem.style[name] = options[name];
    }

    ret = callback.apply(elem, args || []);

    // Revert the old values

    for (name in options) {
      elem.style[name] = old[name];
    }

    return ret;
  };

  function adjustCSS(elem, prop, valueParts, tween) {
    var adjusted,
      scale = 1,
      maxIterations = 20,
      currentValue = tween
        ? function () {
            return tween.cur();
          }
        : function () {
            return jQuery.css(elem, prop, "");
          },
      initial = currentValue(),
      unit =
        (valueParts && valueParts[3]) || (jQuery.cssNumber[prop] ? "" : "px"),
      // Starting value computation is required for potential unit mismatches

      initialInUnit =
        (jQuery.cssNumber[prop] || (unit !== "px" && +initial)) &&
        rcssNum.exec(jQuery.css(elem, prop));

    if (initialInUnit && initialInUnit[3] !== unit) {
      // Trust units reported by jQuery.css

      unit = unit || initialInUnit[3];

      // Make sure we update the tween properties later on

      valueParts = valueParts || [];

      // Iteratively approximate from a nonzero starting point

      initialInUnit = +initial || 1;

      do {
        // If previous iteration zeroed out, double until we get *something*.

        // Use string for doubling so we don't accidentally see scale as unchanged below

        scale = scale || ".5";

        // Adjust and apply

        initialInUnit = initialInUnit / scale;

        jQuery.style(elem, prop, initialInUnit + unit);

        // Update scale, tolerating zero or NaN from tween.cur()

        // Break the loop if scale is unchanged or perfect, or if we've just had enough.
      } while (
        scale !== (scale = currentValue() / initial) &&
        scale !== 1 &&
        --maxIterations
      );
    }

    if (valueParts) {
      initialInUnit = +initialInUnit || +initial || 0;

      // Apply relative offset (+=/-=) if specified

      adjusted = valueParts[1]
        ? initialInUnit + (valueParts[1] + 1) * valueParts[2]
        : +valueParts[2];

      if (tween) {
        tween.unit = unit;

        tween.start = initialInUnit;

        tween.end = adjusted;
      }
    }

    return adjusted;
  }

  function getDefaultDisplay(elem) {
    var temp,
      doc = elem.ownerDocument,
      nodeName = elem.nodeName,
      display = defaultDisplayMap[nodeName];

    if (display) {
      return display;
    }

    temp = doc.body.appendChild(doc.createElement(nodeName));

    display = jQuery.css(temp, "display");

    temp.parentNode.removeChild(temp);

    if (display === "none") {
      display = "block";
    }

    return display;
  }

  function showHide(elements, show) {
    var display,
      elem,
      values = [],
      index = 0,
      length = elements.length;

    // Determine new display value for elements that need to change

    for (; index < length; index++) {
      elem = elements[index];

      if (!elem.style) {
        continue;
      }

      display = elem.style.display;

      if (show) {
        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)

        // check is required in this first loop unless we have a nonempty display value (either

        // inline or about-to-be-restored)

        if (display === "none") {
          values[index] = dataPriv.get(elem, "display") || null;

          if (!values[index]) {
            elem.style.display = "";
          }
        }

        if (elem.style.display === "" && isHiddenWithinTree(elem)) {
          values[index] = getDefaultDisplay(elem);
        }
      } else {
        if (display !== "none") {
          values[index] = "none";

          // Remember what we're overwriting

          dataPriv.set(elem, "display", display);
        }
      }
    }

    // Set the display of the elements in a second loop to avoid constant reflow

    for (index = 0; index < length; index++) {
      if (values[index] != null) {
        elements[index].style.display = values[index];
      }
    }

    return elements;
  }

  jQuery.fn.extend({
    show: function () {
      return showHide(this, true);
    },

    hide: function () {
      return showHide(this);
    },

    toggle: function (state) {
      if (typeof state === "boolean") {
        return state ? this.show() : this.hide();
      }

      return this.each(function () {
        if (isHiddenWithinTree(this)) {
          jQuery(this).show();
        } else {
          jQuery(this).hide();
        }
      });
    },
  });

  var rcheckableType = /^(?:checkbox|radio)$/i;

  var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i;

  var rscriptType = /^$|\/(?:java|ecma)script/i;

  // We have to close these tags to support XHTML (#13200)

  var wrapMap = {
    // Support: IE <=9 only

    option: [1, "<select multiple='multiple'>", "</select>"],

    // XHTML parsers do not magically insert elements in the

    // same way that tag soup parsers do. So we cannot shorten

    // this by omitting <tbody> or other required elements.

    thead: [1, "<table>", "</table>"],

    col: [2, "<table><colgroup>", "</colgroup></table>"],

    tr: [2, "<table><tbody>", "</tbody></table>"],

    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],

    _default: [0, "", ""],
  };

  // Support: IE <=9 only

  wrapMap.optgroup = wrapMap.option;

  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption =
    wrapMap.thead;

  wrapMap.th = wrapMap.td;

  function getAll(context, tag) {
    // Support: IE <=9 - 11 only

    // Use typeof to avoid zero-argument method invocation on host objects (#15151)

    var ret;

    if (typeof context.getElementsByTagName !== "undefined") {
      ret = context.getElementsByTagName(tag || "*");
    } else if (typeof context.querySelectorAll !== "undefined") {
      ret = context.querySelectorAll(tag || "*");
    } else {
      ret = [];
    }

    if (tag === undefined || (tag && jQuery.nodeName(context, tag))) {
      return jQuery.merge([context], ret);
    }

    return ret;
  }

  // Mark scripts as having already been evaluated

  function setGlobalEval(elems, refElements) {
    var i = 0,
      l = elems.length;

    for (; i < l; i++) {
      dataPriv.set(
        elems[i],

        "globalEval",

        !refElements || dataPriv.get(refElements[i], "globalEval")
      );
    }
  }

  var rhtml = /<|&#?\w+;/;

  function buildFragment(elems, context, scripts, selection, ignored) {
    var elem,
      tmp,
      tag,
      wrap,
      contains,
      j,
      fragment = context.createDocumentFragment(),
      nodes = [],
      i = 0,
      l = elems.length;

    for (; i < l; i++) {
      elem = elems[i];

      if (elem || elem === 0) {
        // Add nodes directly

        if (jQuery.type(elem) === "object") {
          // Support: Android <=4.0 only, PhantomJS 1 only

          // push.apply(_, arraylike) throws on ancient WebKit

          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);

          // Convert non-html into a text node
        } else if (!rhtml.test(elem)) {
          nodes.push(context.createTextNode(elem));

          // Convert html into DOM nodes
        } else {
          tmp = tmp || fragment.appendChild(context.createElement("div"));

          // Deserialize a standard representation

          tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();

          wrap = wrapMap[tag] || wrapMap._default;

          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

          // Descend through wrappers to the right content

          j = wrap[0];

          while (j--) {
            tmp = tmp.lastChild;
          }

          // Support: Android <=4.0 only, PhantomJS 1 only

          // push.apply(_, arraylike) throws on ancient WebKit

          jQuery.merge(nodes, tmp.childNodes);

          // Remember the top-level container

          tmp = fragment.firstChild;

          // Ensure the created nodes are orphaned (#12392)

          tmp.textContent = "";
        }
      }
    }

    // Remove wrapper from fragment

    fragment.textContent = "";

    i = 0;

    while ((elem = nodes[i++])) {
      // Skip elements already in the context collection (trac-4087)

      if (selection && jQuery.inArray(elem, selection) > -1) {
        if (ignored) {
          ignored.push(elem);
        }

        continue;
      }

      contains = jQuery.contains(elem.ownerDocument, elem);

      // Append to fragment

      tmp = getAll(fragment.appendChild(elem), "script");

      // Preserve script evaluation history

      if (contains) {
        setGlobalEval(tmp);
      }

      // Capture executables

      if (scripts) {
        j = 0;

        while ((elem = tmp[j++])) {
          if (rscriptType.test(elem.type || "")) {
            scripts.push(elem);
          }
        }
      }
    }

    return fragment;
  }

  (function () {
    var fragment = document.createDocumentFragment(),
      div = fragment.appendChild(document.createElement("div")),
      input = document.createElement("input");

    // Support: Android 4.0 - 4.3 only

    // Check state lost if the name is set (#11217)

    // Support: Windows Web Apps (WWA)

    // `name` and `type` must use .setAttribute for WWA (#14901)

    input.setAttribute("type", "radio");

    input.setAttribute("checked", "checked");

    input.setAttribute("name", "t");

    div.appendChild(input);

    // Support: Android <=4.1 only

    // Older WebKit doesn't clone checked state correctly in fragments

    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;

    // Support: IE <=11 only

    // Make sure textarea (and checkbox) defaultValue is properly cloned

    div.innerHTML = "<textarea>x</textarea>";

    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
  })();

  var documentElement = document.documentElement;

  var rkeyEvent = /^key/,
    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

  function returnTrue() {
    return true;
  }

  function returnFalse() {
    return false;
  }

  // Support: IE <=9 only

  // See #13393 for more info

  function safeActiveElement() {
    try {
      return document.activeElement;
    } catch (err) {}
  }

  function on(elem, types, selector, data, fn, one) {
    var origFn, type;

    // Types can be a map of types/handlers

    if (typeof types === "object") {
      // ( types-Object, selector, data )

      if (typeof selector !== "string") {
        // ( types-Object, data )

        data = data || selector;

        selector = undefined;
      }

      for (type in types) {
        on(elem, type, selector, data, types[type], one);
      }

      return elem;
    }

    if (data == null && fn == null) {
      // ( types, fn )

      fn = selector;

      data = selector = undefined;
    } else if (fn == null) {
      if (typeof selector === "string") {
        // ( types, selector, fn )

        fn = data;

        data = undefined;
      } else {
        // ( types, data, fn )

        fn = data;

        data = selector;

        selector = undefined;
      }
    }

    if (fn === false) {
      fn = returnFalse;
    } else if (!fn) {
      return elem;
    }

    if (one === 1) {
      origFn = fn;

      fn = function (event) {
        // Can use an empty set, since event contains the info

        jQuery().off(event);

        return origFn.apply(this, arguments);
      };

      // Use same guid so caller can remove using origFn

      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
    }

    return elem.each(function () {
      jQuery.event.add(this, types, fn, data, selector);
    });
  }

  /*
    
     * Helper functions for managing events -- not part of the public interface.
    
     * Props to Dean Edwards' addEvent library for many of the ideas.
    
     */

  jQuery.event = {
    global: {},

    add: function (elem, types, handler, data, selector) {
      var handleObjIn,
        eventHandle,
        tmp,
        events,
        t,
        handleObj,
        special,
        handlers,
        type,
        namespaces,
        origType,
        elemData = dataPriv.get(elem);

      // Don't attach events to noData or text/comment nodes (but allow plain objects)

      if (!elemData) {
        return;
      }

      // Caller can pass in an object of custom data in lieu of the handler

      if (handler.handler) {
        handleObjIn = handler;

        handler = handleObjIn.handler;

        selector = handleObjIn.selector;
      }

      // Ensure that invalid selectors throw exceptions at attach time

      // Evaluate against documentElement in case elem is a non-element node (e.g., document)

      if (selector) {
        jQuery.find.matchesSelector(documentElement, selector);
      }

      // Make sure that the handler has a unique ID, used to find/remove it later

      if (!handler.guid) {
        handler.guid = jQuery.guid++;
      }

      // Init the element's event structure and main handler, if this is the first

      if (!(events = elemData.events)) {
        events = elemData.events = {};
      }

      if (!(eventHandle = elemData.handle)) {
        eventHandle = elemData.handle = function (e) {
          // Discard the second event of a jQuery.event.trigger() and

          // when an event is called after a page has unloaded

          return typeof jQuery !== "undefined" &&
            jQuery.event.triggered !== e.type
            ? jQuery.event.dispatch.apply(elem, arguments)
            : undefined;
        };
      }

      // Handle multiple events separated by a space

      types = (types || "").match(rnothtmlwhite) || [""];

      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];

        type = origType = tmp[1];

        namespaces = (tmp[2] || "").split(".").sort();

        // There *must* be a type, no attaching namespace-only handlers

        if (!type) {
          continue;
        }

        // If event changes its type, use the special event handlers for the changed type

        special = jQuery.event.special[type] || {};

        // If selector defined, determine special event api type, otherwise given type

        type = (selector ? special.delegateType : special.bindType) || type;

        // Update special based on newly reset type

        special = jQuery.event.special[type] || {};

        // handleObj is passed to all event handlers

        handleObj = jQuery.extend(
          {
            type: type,

            origType: origType,

            data: data,

            handler: handler,

            guid: handler.guid,

            selector: selector,

            needsContext:
              selector && jQuery.expr.match.needsContext.test(selector),

            namespace: namespaces.join("."),
          },
          handleObjIn
        );

        // Init the event handler queue if we're the first

        if (!(handlers = events[type])) {
          handlers = events[type] = [];

          handlers.delegateCount = 0;

          // Only use addEventListener if the special events handler returns false

          if (
            !special.setup ||
            special.setup.call(elem, data, namespaces, eventHandle) === false
          ) {
            if (elem.addEventListener) {
              elem.addEventListener(type, eventHandle);
            }
          }
        }

        if (special.add) {
          special.add.call(elem, handleObj);

          if (!handleObj.handler.guid) {
            handleObj.handler.guid = handler.guid;
          }
        }

        // Add to the element's handler list, delegates in front

        if (selector) {
          handlers.splice(handlers.delegateCount++, 0, handleObj);
        } else {
          handlers.push(handleObj);
        }

        // Keep track of which events have ever been used, for event optimization

        jQuery.event.global[type] = true;
      }
    },

    // Detach an event or set of events from an element

    remove: function (elem, types, handler, selector, mappedTypes) {
      var j,
        origCount,
        tmp,
        events,
        t,
        handleObj,
        special,
        handlers,
        type,
        namespaces,
        origType,
        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

      if (!elemData || !(events = elemData.events)) {
        return;
      }

      // Once for each type.namespace in types; type may be omitted

      types = (types || "").match(rnothtmlwhite) || [""];

      t = types.length;

      while (t--) {
        tmp = rtypenamespace.exec(types[t]) || [];

        type = origType = tmp[1];

        namespaces = (tmp[2] || "").split(".").sort();

        // Unbind all events (on this namespace, if provided) for the element

        if (!type) {
          for (type in events) {
            jQuery.event.remove(elem, type + types[t], handler, selector, true);
          }

          continue;
        }

        special = jQuery.event.special[type] || {};

        type = (selector ? special.delegateType : special.bindType) || type;

        handlers = events[type] || [];

        tmp =
          tmp[2] &&
          new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");

        // Remove matching events

        origCount = j = handlers.length;

        while (j--) {
          handleObj = handlers[j];

          if (
            (mappedTypes || origType === handleObj.origType) &&
            (!handler || handler.guid === handleObj.guid) &&
            (!tmp || tmp.test(handleObj.namespace)) &&
            (!selector ||
              selector === handleObj.selector ||
              (selector === "**" && handleObj.selector))
          ) {
            handlers.splice(j, 1);

            if (handleObj.selector) {
              handlers.delegateCount--;
            }

            if (special.remove) {
              special.remove.call(elem, handleObj);
            }
          }
        }

        // Remove generic event handler if we removed something and no more handlers exist

        // (avoids potential for endless recursion during removal of special event handlers)

        if (origCount && !handlers.length) {
          if (
            !special.teardown ||
            special.teardown.call(elem, namespaces, elemData.handle) === false
          ) {
            jQuery.removeEvent(elem, type, elemData.handle);
          }

          delete events[type];
        }
      }

      // Remove data and the expando if it's no longer used

      if (jQuery.isEmptyObject(events)) {
        dataPriv.remove(elem, "handle events");
      }
    },

    dispatch: function (nativeEvent) {
      // Make a writable jQuery.Event from the native event object

      var event = jQuery.event.fix(nativeEvent);

      var i,
        j,
        ret,
        matched,
        handleObj,
        handlerQueue,
        args = new Array(arguments.length),
        handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
        special = jQuery.event.special[event.type] || {};

      // Use the fix-ed jQuery.Event rather than the (read-only) native event

      args[0] = event;

      for (i = 1; i < arguments.length; i++) {
        args[i] = arguments[i];
      }

      event.delegateTarget = this;

      // Call the preDispatch hook for the mapped type, and let it bail if desired

      if (
        special.preDispatch &&
        special.preDispatch.call(this, event) === false
      ) {
        return;
      }

      // Determine handlers

      handlerQueue = jQuery.event.handlers.call(this, event, handlers);

      // Run delegates first; they may want to stop propagation beneath us

      i = 0;

      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
        event.currentTarget = matched.elem;

        j = 0;

        while (
          (handleObj = matched.handlers[j++]) &&
          !event.isImmediatePropagationStopped()
        ) {
          // Triggered event must either 1) have no namespace, or 2) have namespace(s)

          // a subset or equal to those in the bound event (both can have no namespace).

          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
            event.handleObj = handleObj;

            event.data = handleObj.data;

            ret = (
              (jQuery.event.special[handleObj.origType] || {}).handle ||
              handleObj.handler
            ).apply(matched.elem, args);

            if (ret !== undefined) {
              if ((event.result = ret) === false) {
                event.preventDefault();

                event.stopPropagation();
              }
            }
          }
        }
      }

      // Call the postDispatch hook for the mapped type

      if (special.postDispatch) {
        special.postDispatch.call(this, event);
      }

      return event.result;
    },

    handlers: function (event, handlers) {
      var i,
        handleObj,
        sel,
        matchedHandlers,
        matchedSelectors,
        handlerQueue = [],
        delegateCount = handlers.delegateCount,
        cur = event.target;

      // Find delegate handlers

      if (
        delegateCount &&
        // Support: IE <=9

        // Black-hole SVG <use> instance trees (trac-13180)

        cur.nodeType &&
        // Support: Firefox <=42

        // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)

        // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click

        // Support: IE 11 only

        // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)

        !(event.type === "click" && event.button >= 1)
      ) {
        for (; cur !== this; cur = cur.parentNode || this) {
          // Don't check non-elements (#13208)

          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)

          if (
            cur.nodeType === 1 &&
            !(event.type === "click" && cur.disabled === true)
          ) {
            matchedHandlers = [];

            matchedSelectors = {};

            for (i = 0; i < delegateCount; i++) {
              handleObj = handlers[i];

              // Don't conflict with Object.prototype properties (#13203)

              sel = handleObj.selector + " ";

              if (matchedSelectors[sel] === undefined) {
                matchedSelectors[sel] = handleObj.needsContext
                  ? jQuery(sel, this).index(cur) > -1
                  : jQuery.find(sel, this, null, [cur]).length;
              }

              if (matchedSelectors[sel]) {
                matchedHandlers.push(handleObj);
              }
            }

            if (matchedHandlers.length) {
              handlerQueue.push({ elem: cur, handlers: matchedHandlers });
            }
          }
        }
      }

      // Add the remaining (directly-bound) handlers

      cur = this;

      if (delegateCount < handlers.length) {
        handlerQueue.push({
          elem: cur,
          handlers: handlers.slice(delegateCount),
        });
      }

      return handlerQueue;
    },

    addProp: function (name, hook) {
      Object.defineProperty(jQuery.Event.prototype, name, {
        enumerable: true,

        configurable: true,

        get: jQuery.isFunction(hook)
          ? function () {
              if (this.originalEvent) {
                return hook(this.originalEvent);
              }
            }
          : function () {
              if (this.originalEvent) {
                return this.originalEvent[name];
              }
            },

        set: function (value) {
          Object.defineProperty(this, name, {
            enumerable: true,

            configurable: true,

            writable: true,

            value: value,
          });
        },
      });
    },

    fix: function (originalEvent) {
      return originalEvent[jQuery.expando]
        ? originalEvent
        : new jQuery.Event(originalEvent);
    },

    special: {
      load: {
        // Prevent triggered image.load events from bubbling to window.load

        noBubble: true,
      },

      focus: {
        // Fire native event if possible so blur/focus sequence is correct

        trigger: function () {
          if (this !== safeActiveElement() && this.focus) {
            this.focus();

            return false;
          }
        },

        delegateType: "focusin",
      },

      blur: {
        trigger: function () {
          if (this === safeActiveElement() && this.blur) {
            this.blur();

            return false;
          }
        },

        delegateType: "focusout",
      },

      click: {
        // For checkbox, fire native event so checked state will be right

        trigger: function () {
          if (
            this.type === "checkbox" &&
            this.click &&
            jQuery.nodeName(this, "input")
          ) {
            this.click();

            return false;
          }
        },

        // For cross-browser consistency, don't fire native .click() on links

        _default: function (event) {
          return jQuery.nodeName(event.target, "a");
        },
      },

      beforeunload: {
        postDispatch: function (event) {
          // Support: Firefox 20+

          // Firefox doesn't alert if the returnValue field is not set.

          if (event.result !== undefined && event.originalEvent) {
            event.originalEvent.returnValue = event.result;
          }
        },
      },
    },
  };

  jQuery.removeEvent = function (elem, type, handle) {
    // This "if" is needed for plain objects

    if (elem.removeEventListener) {
      elem.removeEventListener(type, handle);
    }
  };

  jQuery.Event = function (src, props) {
    // Allow instantiation without the 'new' keyword

    if (!(this instanceof jQuery.Event)) {
      return new jQuery.Event(src, props);
    }

    // Event object

    if (src && src.type) {
      this.originalEvent = src;

      this.type = src.type;

      // Events bubbling up the document may have been marked as prevented

      // by a handler lower down the tree; reflect the correct value.

      this.isDefaultPrevented =
        src.defaultPrevented ||
        (src.defaultPrevented === undefined &&
          // Support: Android <=2.3 only

          src.returnValue === false)
          ? returnTrue
          : returnFalse;

      // Create target properties

      // Support: Safari <=6 - 7 only

      // Target should not be a text node (#504, #13143)

      this.target =
        src.target && src.target.nodeType === 3
          ? src.target.parentNode
          : src.target;

      this.currentTarget = src.currentTarget;

      this.relatedTarget = src.relatedTarget;

      // Event type
    } else {
      this.type = src;
    }

    // Put explicitly provided properties onto the event object

    if (props) {
      jQuery.extend(this, props);
    }

    // Create a timestamp if incoming event doesn't have one

    this.timeStamp = (src && src.timeStamp) || jQuery.now();

    // Mark it as fixed

    this[jQuery.expando] = true;
  };

  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding

  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html

  jQuery.Event.prototype = {
    constructor: jQuery.Event,

    isDefaultPrevented: returnFalse,

    isPropagationStopped: returnFalse,

    isImmediatePropagationStopped: returnFalse,

    isSimulated: false,

    preventDefault: function () {
      var e = this.originalEvent;

      this.isDefaultPrevented = returnTrue;

      if (e && !this.isSimulated) {
        e.preventDefault();
      }
    },

    stopPropagation: function () {
      var e = this.originalEvent;

      this.isPropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopPropagation();
      }
    },

    stopImmediatePropagation: function () {
      var e = this.originalEvent;

      this.isImmediatePropagationStopped = returnTrue;

      if (e && !this.isSimulated) {
        e.stopImmediatePropagation();
      }

      this.stopPropagation();
    },
  };

  // Includes all common event props including KeyEvent and MouseEvent specific props

  jQuery.each(
    {
      altKey: true,

      bubbles: true,

      cancelable: true,

      changedTouches: true,

      ctrlKey: true,

      detail: true,

      eventPhase: true,

      metaKey: true,

      pageX: true,

      pageY: true,

      shiftKey: true,

      view: true,

      char: true,

      charCode: true,

      key: true,

      keyCode: true,

      button: true,

      buttons: true,

      clientX: true,

      clientY: true,

      offsetX: true,

      offsetY: true,

      pointerId: true,

      pointerType: true,

      screenX: true,

      screenY: true,

      targetTouches: true,

      toElement: true,

      touches: true,

      which: function (event) {
        var button = event.button;

        // Add which for key events

        if (event.which == null && rkeyEvent.test(event.type)) {
          return event.charCode != null ? event.charCode : event.keyCode;
        }

        // Add which for click: 1 === left; 2 === middle; 3 === right

        if (
          !event.which &&
          button !== undefined &&
          rmouseEvent.test(event.type)
        ) {
          if (button & 1) {
            return 1;
          }

          if (button & 2) {
            return 3;
          }

          if (button & 4) {
            return 2;
          }

          return 0;
        }

        return event.which;
      },
    },
    jQuery.event.addProp
  );

  // Create mouseenter/leave events using mouseover/out and event-time checks

  // so that event delegation works in jQuery.

  // Do the same for pointerenter/pointerleave and pointerover/pointerout

  //

  // Support: Safari 7 only

  // Safari sends mouseenter too often; see:

  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258

  // for the description of the bug (it existed in older Chrome versions as well).

  jQuery.each(
    {
      mouseenter: "mouseover",

      mouseleave: "mouseout",

      pointerenter: "pointerover",

      pointerleave: "pointerout",
    },
    function (orig, fix) {
      jQuery.event.special[orig] = {
        delegateType: fix,

        bindType: fix,

        handle: function (event) {
          var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj;

          // For mouseenter/leave call the handler if related is outside the target.

          // NB: No relatedTarget if the mouse left/entered the browser window

          if (
            !related ||
            (related !== target && !jQuery.contains(target, related))
          ) {
            event.type = handleObj.origType;

            ret = handleObj.handler.apply(this, arguments);

            event.type = fix;
          }

          return ret;
        },
      };
    }
  );

  jQuery.fn.extend({
    on: function (types, selector, data, fn) {
      return on(this, types, selector, data, fn);
    },

    one: function (types, selector, data, fn) {
      return on(this, types, selector, data, fn, 1);
    },

    off: function (types, selector, fn) {
      var handleObj, type;

      if (types && types.preventDefault && types.handleObj) {
        // ( event )  dispatched jQuery.Event

        handleObj = types.handleObj;

        jQuery(types.delegateTarget).off(
          handleObj.namespace
            ? handleObj.origType + "." + handleObj.namespace
            : handleObj.origType,

          handleObj.selector,

          handleObj.handler
        );

        return this;
      }

      if (typeof types === "object") {
        // ( types-object [, selector] )

        for (type in types) {
          this.off(type, selector, types[type]);
        }

        return this;
      }

      if (selector === false || typeof selector === "function") {
        // ( types [, fn] )

        fn = selector;

        selector = undefined;
      }

      if (fn === false) {
        fn = returnFalse;
      }

      return this.each(function () {
        jQuery.event.remove(this, types, fn, selector);
      });
    },
  });

  var /* eslint-disable max-len */

    // See https://github.com/eslint/eslint/issues/3229

    rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
    /* eslint-enable */

    // Support: IE <=10 - 11, Edge 12 - 13

    // In IE/Edge using regex groups here causes severe slowdowns.

    // See https://connect.microsoft.com/IE/feedback/details/1736512/

    rnoInnerhtml = /<script|<style|<link/i,
    // checked="checked" or checked

    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
    rscriptTypeMasked = /^true\/(.*)/,
    rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

  function manipulationTarget(elem, content) {
    if (
      jQuery.nodeName(elem, "table") &&
      jQuery.nodeName(
        content.nodeType !== 11 ? content : content.firstChild,
        "tr"
      )
    ) {
      return elem.getElementsByTagName("tbody")[0] || elem;
    }

    return elem;
  }

  // Replace/restore the type attribute of script elements for safe DOM manipulation

  function disableScript(elem) {
    elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;

    return elem;
  }

  function restoreScript(elem) {
    var match = rscriptTypeMasked.exec(elem.type);

    return elem;
  }

  function cloneCopyEvent(src, dest) {
    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

    if (dest.nodeType !== 1) {
      return;
    }

    if (dataPriv.hasData(src)) {
      pdataOld = dataPriv.access(src);

      pdataCur = dataPriv.set(dest, pdataOld);

      events = pdataOld.events;

      if (events) {
        delete pdataCur.handle;

        pdataCur.events = {};

        for (type in events) {
          for (i = 0, l = events[type].length; i < l; i++) {
            jQuery.event.add(dest, type, events[type][i]);
          }
        }
      }
    }

    // 2. Copy user data

    if (dataUser.hasData(src)) {
      udataOld = dataUser.access(src);

      udataCur = jQuery.extend({}, udataOld);

      dataUser.set(dest, udataCur);
    }
  }

  // Fix IE bugs, see support tests

  function fixInput(src, dest) {
    var nodeName = dest.nodeName.toLowerCase();

    // Fails to persist the checked state of a cloned checkbox or radio button.

    if (nodeName === "input" && rcheckableType.test(src.type)) {
      dest.checked = src.checked;

      // Fails to return the selected option to the default selected state when cloning options
    } else if (nodeName === "input" || nodeName === "textarea") {
      dest.defaultValue = src.defaultValue;
    }
  }

  function domManip(collection, args, callback, ignored) {
    // Flatten any nested arrays

    args = concat.apply([], args);

    var fragment,
      first,
      scripts,
      hasScripts,
      node,
      doc,
      i = 0,
      l = collection.length,
      iNoClone = l - 1,
      value = args[0],
      isFunction = jQuery.isFunction(value);
    if (l) {
      fragment = buildFragment(
        args,
        collection[0].ownerDocument,
        false,
        collection,
        ignored
      );

      first = fragment.firstChild;

      if (fragment.childNodes.length === 1) {
        fragment = first;
      }
      if (first || ignored) {
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);

        hasScripts = scripts.length;
        for (; i < l; i++) {
          node = fragment;

          if (i !== iNoClone) {
            node = jQuery.clone(node, true, true);
          }

          callback.call(collection[i], node, i);
        }

        if (hasScripts) {
          doc = scripts[scripts.length - 1].ownerDocument;

          // Reenable scripts

          jQuery.map(scripts, restoreScript);

          // Evaluate executable scripts on first document insertion

          for (i = 0; i < hasScripts; i++) {
            node = scripts[i];

            if (
              rscriptType.test(node.type || "") &&
              !dataPriv.access(node, "globalEval") &&
              jQuery.contains(doc, node)
            ) {
              if (node.src) {
                // Optional AJAX dependency, but won't run scripts if not present

                if (jQuery._evalUrl) {
                  jQuery._evalUrl(node.src);
                }
              } else {
                DOMEval(node.textContent.replace(rcleanScript, ""), doc);
              }
            }
          }
        }
      }
    }

    return collection;
  }

  function remove(elem, selector, keepData) {
    var node,
      nodes = selector ? jQuery.filter(selector, elem) : elem,
      i = 0;

    for (; (node = nodes[i]) != null; i++) {
      if (!keepData && node.nodeType === 1) {
        jQuery.cleanData(getAll(node));
      }

      if (node.parentNode) {
        if (keepData && jQuery.contains(node.ownerDocument, node)) {
          setGlobalEval(getAll(node, "script"));
        }

        node.parentNode.removeChild(node);
      }
    }

    return elem;
  }

  jQuery.extend({
    htmlPrefilter: function (html) {
      return html.replace(rxhtmlTag, "<$1></$2>");
    },

    clone: function (elem, dataAndEvents, deepDataAndEvents) {
      var i,
        l,
        srcElements,
        destElements,
        clone = elem.cloneNode(true),
        inPage = jQuery.contains(elem.ownerDocument, elem);

      // Fix IE cloning issues

      if (
        !support.noCloneChecked &&
        (elem.nodeType === 1 || elem.nodeType === 11) &&
        !jQuery.isXMLDoc(elem)
      ) {
        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2

        destElements = getAll(clone);

        srcElements = getAll(elem);

        for (i = 0, l = srcElements.length; i < l; i++) {
          fixInput(srcElements[i], destElements[i]);
        }
      }

      // Copy the events from the original to the clone

      if (dataAndEvents) {
        if (deepDataAndEvents) {
          srcElements = srcElements || getAll(elem);

          destElements = destElements || getAll(clone);

          for (i = 0, l = srcElements.length; i < l; i++) {
            cloneCopyEvent(srcElements[i], destElements[i]);
          }
        } else {
          cloneCopyEvent(elem, clone);
        }
      }

      // Preserve script evaluation history

      destElements = getAll(clone, "script");

      if (destElements.length > 0) {
        setGlobalEval(destElements, !inPage && getAll(elem, "script"));
      }

      // Return the cloned set

      return clone;
    },

    cleanData: function (elems) {
      var data,
        elem,
        type,
        special = jQuery.event.special,
        i = 0;

      for (; (elem = elems[i]) !== undefined; i++) {
        if (acceptData(elem)) {
          if ((data = elem[dataPriv.expando])) {
            if (data.events) {
              for (type in data.events) {
                if (special[type]) {
                  jQuery.event.remove(elem, type);

                  // This is a shortcut to avoid jQuery.event.remove's overhead
                } else {
                  jQuery.removeEvent(elem, type, data.handle);
                }
              }
            }

            // Support: Chrome <=35 - 45+

            // Assign undefined instead of using delete, see Data#remove

            elem[dataPriv.expando] = undefined;
          }

          if (elem[dataUser.expando]) {
            // Support: Chrome <=35 - 45+

            // Assign undefined instead of using delete, see Data#remove

            elem[dataUser.expando] = undefined;
          }
        }
      }
    },
  });

  jQuery.fn.extend({
    detach: function (selector) {
      return remove(this, selector, true);
    },

    remove: function (selector) {
      return remove(this, selector);
    },

    text: function (value) {
      return access(
        this,
        function (value) {
          return value === undefined
            ? jQuery.text(this)
            : this.empty().each(function () {
                if (
                  this.nodeType === 1 ||
                  this.nodeType === 11 ||
                  this.nodeType === 9
                ) {
                  this.textContent = value;
                }
              });
        },
        null,
        value,
        arguments.length
      );
    },

    append: function () {
      return domManip(this, arguments, function (elem) {
        if (
          this.nodeType === 1 ||
          this.nodeType === 11 ||
          this.nodeType === 9
        ) {
          var target = manipulationTarget(this, elem);

          target.appendChild(elem);
        }
      });
    },

    prepend: function () {
      return domManip(this, arguments, function (elem) {
        if (
          this.nodeType === 1 ||
          this.nodeType === 11 ||
          this.nodeType === 9
        ) {
          var target = manipulationTarget(this, elem);

          target.insertBefore(elem, target.firstChild);
        }
      });
    },

    before: function () {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this);
        }
      });
    },

    after: function () {
      return domManip(this, arguments, function (elem) {
        if (this.parentNode) {
          this.parentNode.insertBefore(elem, this.nextSibling);
        }
      });
    },

    empty: function () {
      var elem,
        i = 0;

      for (; (elem = this[i]) != null; i++) {
        if (elem.nodeType === 1) {
          // Prevent memory leaks

          jQuery.cleanData(getAll(elem, false));

          // Remove any remaining nodes

          elem.textContent = "";
        }
      }

      return this;
    },

    clone: function (dataAndEvents, deepDataAndEvents) {
      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;

      deepDataAndEvents =
        deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

      return this.map(function () {
        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
      });
    },

    html: function (value) {
      return access(
        this,
        function (value) {
          var elem = this[0] || {},
            i = 0,
            l = this.length;

          if (value === undefined && elem.nodeType === 1) {
            return elem.innerHTML;
          }

          // See if we can take a shortcut and just use innerHTML

          if (
            typeof value === "string" &&
            !rnoInnerhtml.test(value) &&
            !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]
          ) {
            value = jQuery.htmlPrefilter(value);

            try {
              for (; i < l; i++) {
                elem = this[i] || {};

                // Remove element nodes and prevent memory leaks

                if (elem.nodeType === 1) {
                  jQuery.cleanData(getAll(elem, false));

                  elem.innerHTML = value;
                }
              }

              elem = 0;

              // If using innerHTML throws an exception, use the fallback method
            } catch (e) {}
          }

          if (elem) {
            this.empty().append(value);
          }
        },
        null,
        value,
        arguments.length
      );
    },

    replaceWith: function () {
      var ignored = [];

      // Make the changes, replacing each non-ignored context element with the new content

      return domManip(
        this,
        arguments,
        function (elem) {
          var parent = this.parentNode;

          if (jQuery.inArray(this, ignored) < 0) {
            jQuery.cleanData(getAll(this));

            if (parent) {
              parent.replaceChild(elem, this);
            }
          }

          // Force callback invocation
        },
        ignored
      );
    },
  });

  jQuery.each(
    {
      appendTo: "append",

      prependTo: "prepend",

      insertBefore: "before",

      insertAfter: "after",

      replaceAll: "replaceWith",
    },
    function (name, original) {
      jQuery.fn[name] = function (selector) {
        var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;

        for (; i <= last; i++) {
          elems = i === last ? this : this.clone(true);

          jQuery(insert[i])[original](elems);

          // Support: Android <=4.0 only, PhantomJS 1 only

          // .get() because push.apply(_, arraylike) throws on ancient WebKit

          push.apply(ret, elems.get());
        }

        return this.pushStack(ret);
      };
    }
  );

  var rmargin = /^margin/;

  var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");

  var getStyles = function (elem) {
    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)

    // IE throws on elements created in popups

    // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"

    var view = elem.ownerDocument.defaultView;

    if (!view || !view.opener) {
      view = window;
    }

    return view.getComputedStyle(elem);
  };

  (function () {
    // Executing both pixelPosition & boxSizingReliable tests require only one layout

    // so they're executed at the same time to save the second computation.

    function computeStyleTests() {
      // This is a singleton, we need to execute it only once

      if (!div) {
        return;
      }

      div.style.cssText =
        "box-sizing:border-box;" +
        "position:relative;display:block;" +
        "margin:auto;border:1px;padding:1px;" +
        "top:1%;width:50%";

      div.innerHTML = "";

      documentElement.appendChild(container);

      var divStyle = window.getComputedStyle(div);

      pixelPositionVal = divStyle.top !== "1%";

      // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44

      reliableMarginLeftVal = divStyle.marginLeft === "2px";

      boxSizingReliableVal = divStyle.width === "4px";

      // Support: Android 4.0 - 4.3 only

      // Some styles come back with percentage values, even though they shouldn't

      div.style.marginRight = "50%";

      pixelMarginRightVal = divStyle.marginRight === "4px";

      documentElement.removeChild(container);

      // Nullify the div so it wouldn't be stored in the memory and

      // it will also be a sign that checks already performed

      div = null;
    }

    var pixelPositionVal,
      boxSizingReliableVal,
      pixelMarginRightVal,
      reliableMarginLeftVal,
      container = document.createElement("div"),
      div = document.createElement("div");

    // Finish early in limited (non-browser) environments

    if (!div.style) {
      return;
    }

    // Support: IE <=9 - 11 only

    // Style of cloned element affects source element cloned (#8908)

    div.style.backgroundClip = "content-box";

    div.cloneNode(true).style.backgroundClip = "";

    support.clearCloneStyle = div.style.backgroundClip === "content-box";

    container.style.cssText =
      "border:0;width:8px;height:0;top:0;left:-9999px;" +
      "padding:0;margin-top:1px;position:absolute";

    container.appendChild(div);

    jQuery.extend(support, {
      pixelPosition: function () {
        computeStyleTests();

        return pixelPositionVal;
      },

      boxSizingReliable: function () {
        computeStyleTests();

        return boxSizingReliableVal;
      },

      pixelMarginRight: function () {
        computeStyleTests();

        return pixelMarginRightVal;
      },

      reliableMarginLeft: function () {
        computeStyleTests();

        return reliableMarginLeftVal;
      },
    });
  })();

  function curCSS(elem, name, computed) {
    var width,
      minWidth,
      maxWidth,
      ret,
      style = elem.style;

    computed = computed || getStyles(elem);

    // Support: IE <=9 only

    // getPropertyValue is only needed for .css('filter') (#12537)

    if (computed) {
      ret = computed.getPropertyValue(name) || computed[name];

      if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
        ret = jQuery.style(elem, name);
      }

      // A tribute to the "awesome hack by Dean Edwards"

      // Android Browser returns percentage for some values,

      // but width seems to be reliably pixels.

      // This is against the CSSOM draft spec:

      // https://drafts.csswg.org/cssom/#resolved-values

      if (
        !support.pixelMarginRight() &&
        rnumnonpx.test(ret) &&
        rmargin.test(name)
      ) {
        // Remember the original values

        width = style.width;

        minWidth = style.minWidth;

        maxWidth = style.maxWidth;

        // Put in the new values to get a computed value out

        style.minWidth = style.maxWidth = style.width = ret;

        ret = computed.width;

        // Revert the changed values

        style.width = width;

        style.minWidth = minWidth;

        style.maxWidth = maxWidth;
      }
    }

    return ret !== undefined
      ? // Support: IE <=9 - 11 only

        // IE returns zIndex value as an integer.

        ret + ""
      : ret;
  }

  function addGetHookIf(conditionFn, hookFn) {
    // Define the hook, we'll check on the first run if it's really needed.

    return {
      get: function () {
        if (conditionFn()) {
          // Hook not needed (or it's not possible to use it due

          // to missing dependency), remove it.

          delete this.get;

          return;
        }

        // Hook needed; redefine it so that the support test is not executed again.

        return (this.get = hookFn).apply(this, arguments);
      },
    };
  }

  var // Swappable if display is none or starts with table

    // except "table", "table-cell", or "table-caption"

    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display

    rdisplayswap = /^(none|table(?!-c[ea]).+)/,
    cssShow = { position: "absolute", visibility: "hidden", display: "block" },
    cssNormalTransform = {
      letterSpacing: "0",

      fontWeight: "400",
    },
    cssPrefixes = ["Webkit", "Moz", "ms"],
    emptyStyle = document.createElement("div").style;

  // Return a css property mapped to a potentially vendor prefixed property

  function vendorPropName(name) {
    // Shortcut for names that are not vendor prefixed

    if (name in emptyStyle) {
      return name;
    }

    // Check for vendor prefixed names

    var capName = name[0].toUpperCase() + name.slice(1),
      i = cssPrefixes.length;

    while (i--) {
      name = cssPrefixes[i] + capName;

      if (name in emptyStyle) {
        return name;
      }
    }
  }

  function setPositiveNumber(elem, value, subtract) {
    // Any relative (+/-) values have already been

    // normalized at this point

    var matches = rcssNum.exec(value);

    return matches
      ? // Guard against undefined "subtract", e.g., when used as in cssHooks

        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px")
      : value;
  }

  function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
    var i,
      val = 0;
    return val;
  }

  function getWidthOrHeight(elem, name, extra) {
    // Start with offset property, which is equivalent to the border-box value

    var val,
      valueIsBorderBox = true,
      styles = getStyles(elem),
      isBorderBox =
        jQuery.css(elem, "boxSizing", false, styles) === "border-box";

    // Support: IE <=11 only

    // Running getBoundingClientRect on a disconnected node

    // in IE throws an error.

    if (elem.getClientRects().length) {
      val = elem.getBoundingClientRect()[name];
    }

    // Some non-html elements return undefined for offsetWidth, so check for null/undefined

    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285

    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668

    if (val <= 0 || val == null) {
      // Fall back to computed then uncomputed css if necessary

      val = curCSS(elem, name, styles);

      if (val < 0 || val == null) {
        val = elem.style[name];
      }

      // Computed unit is not pixels. Stop here and return.

      if (rnumnonpx.test(val)) {
        return val;
      }

      // Check for style in case a browser which returns unreliable values

      // for getComputedStyle silently falls back to the reliable elem.style

      valueIsBorderBox =
        isBorderBox &&
        (support.boxSizingReliable() || val === elem.style[name]);

      // Normalize "", auto, and prepare for extra

      val = parseFloat(val) || 0;
    }

    // Use the active box-sizing model to add/subtract irrelevant styles

    return (
      val +
      augmentWidthOrHeight(
        elem,

        name,

        extra || (isBorderBox ? "border" : "content"),

        valueIsBorderBox,

        styles
      ) +
      "px"
    );
  }

  jQuery.extend({
    // Add in style property hooks for overriding the default

    // behavior of getting and setting a style property

    cssHooks: {
      opacity: {
        get: function (elem, computed) {
          if (computed) {
            // We should always get a number back from opacity

            var ret = curCSS(elem, "opacity");

            return ret === "" ? "1" : ret;
          }
        },
      },
    },

    // Don't automatically add "px" to these possibly-unitless properties

    cssNumber: {
      animationIterationCount: true,

      columnCount: true,

      fillOpacity: true,

      flexGrow: true,

      flexShrink: true,

      fontWeight: true,

      lineHeight: true,

      opacity: true,

      order: true,

      orphans: true,

      widows: true,

      zIndex: true,

      zoom: true,
    },

    // Add in properties whose names you wish to fix before

    // setting or getting the value

    cssProps: {
      float: "cssFloat",
    },

    // Get and set the style property on a DOM Node

    style: function (elem, name, value, extra) {
      // Don't set styles on text and comment nodes

      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
        return;
      }

      // Make sure that we're working with the right name

      var ret,
        type,
        hooks,
        origName = jQuery.camelCase(name),
        style = elem.style;

      name =
        jQuery.cssProps[origName] ||
        (jQuery.cssProps[origName] = vendorPropName(origName) || origName);

      // Gets hook for the prefixed version, then unprefixed version

      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

      // Check if we're setting a value

      if (value !== undefined) {
        type = typeof value;

        // Convert "+=" or "-=" to relative numbers (#7345)

        if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
          value = adjustCSS(elem, name, ret);

          // Fixes bug #9237

          type = "number";
        }

        // Make sure that null and NaN values aren't set (#7116)

        if (value == null || value !== value) {
          return;
        }

        // If a number was passed in, add the unit (except for certain CSS properties)

        if (type === "number") {
          value += (ret && ret[3]) || (jQuery.cssNumber[origName] ? "" : "px");
        }

        // background-* props affect original clone's values

        if (
          !support.clearCloneStyle &&
          value === "" &&
          name.indexOf("background") === 0
        ) {
          style[name] = "inherit";
        }

        // If a hook was provided, use that value, otherwise just set the specified value

        if (
          !hooks ||
          !("set" in hooks) ||
          (value = hooks.set(elem, value, extra)) !== undefined
        ) {
          style[name] = value;
        }
      } else {
        // If a hook was provided get the non-computed value from there

        if (
          hooks &&
          "get" in hooks &&
          (ret = hooks.get(elem, false, extra)) !== undefined
        ) {
          return ret;
        }

        // Otherwise just get the value from the style object

        return style[name];
      }
    },

    css: function (elem, name, extra, styles) {
      var val,
        num,
        hooks,
        origName = jQuery.camelCase(name);

      // Make sure that we're working with the right name

      name =
        jQuery.cssProps[origName] ||
        (jQuery.cssProps[origName] = vendorPropName(origName) || origName);

      // Try prefixed name followed by the unprefixed name

      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

      // If a hook was provided get the computed value from there

      if (hooks && "get" in hooks) {
        val = hooks.get(elem, true, extra);
      }

      // Otherwise, if a way to get the computed value exists, use that

      if (val === undefined) {
        val = curCSS(elem, name, styles);
      }

      // Convert "normal" to computed value

      if (val === "normal" && name in cssNormalTransform) {
        val = cssNormalTransform[name];
      }

      // Make numeric if forced or a qualifier was provided and val looks numeric

      if (extra === "" || extra) {
        num = parseFloat(val);

        return extra === true || isFinite(num) ? num || 0 : val;
      }

      return val;
    },
  });

  jQuery.each(["height", "width"], function (i, name) {
    jQuery.cssHooks[name] = {
      get: function (elem, computed, extra) {
        if (computed) {
          // Certain elements can have dimension info if we invisibly show them

          // but it must have a current display style that would benefit

          return rdisplayswap.test(jQuery.css(elem, "display")) &&
            // Support: Safari 8+

            // Table columns in Safari have non-zero offsetWidth & zero

            // getBoundingClientRect().width unless display is changed.

            // Support: IE <=11 only

            // Running getBoundingClientRect on a disconnected node

            // in IE throws an error.

            (!elem.getClientRects().length ||
              !elem.getBoundingClientRect().width)
            ? swap(elem, cssShow, function () {
                return getWidthOrHeight(elem, name, extra);
              })
            : getWidthOrHeight(elem, name, extra);
        }
      },

      set: function (elem, value, extra) {
        var matches,
          styles = extra && getStyles(elem),
          subtract =
            extra &&
            augmentWidthOrHeight(
              elem,

              name,

              extra,

              jQuery.css(elem, "boxSizing", false, styles) === "border-box",

              styles
            );

        // Convert to pixels if value adjustment is needed

        if (
          subtract &&
          (matches = rcssNum.exec(value)) &&
          (matches[3] || "px") !== "px"
        ) {
          elem.style[name] = value;

          value = jQuery.css(elem, name);
        }

        return setPositiveNumber(elem, value, subtract);
      },
    };
  });

  jQuery.cssHooks.marginLeft = addGetHookIf(
    support.reliableMarginLeft,

    function (elem, computed) {
      if (computed) {
        return (
          (parseFloat(curCSS(elem, "marginLeft")) ||
            elem.getBoundingClientRect().left -
              swap(elem, { marginLeft: 0 }, function () {
                return elem.getBoundingClientRect().left;
              })) + "px"
        );
      }
    }
  );

  // These hooks are used by animate to expand properties

  jQuery.each(
    {
      margin: "",

      padding: "",

      border: "Width",
    },
    function (prefix, suffix) {
      jQuery.cssHooks[prefix + suffix] = {
        expand: function (value) {
          var i = 0,
            expanded = {},
            // Assumes a single number if not a string

            parts = typeof value === "string" ? value.split(" ") : [value];

          for (; i < 4; i++) {
            expanded[prefix + cssExpand[i] + suffix] =
              parts[i] || parts[i - 2] || parts[0];
          }

          return expanded;
        },
      };

      if (!rmargin.test(prefix)) {
        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
      }
    }
  );

  jQuery.fn.extend({
    css: function (name, value) {
      return access(
        this,
        function (elem, name, value) {
          var styles,
            len,
            map = {},
            i = 0;

          if (jQuery.isArray(name)) {
            styles = getStyles(elem);

            len = name.length;

            for (; i < len; i++) {
              map[name[i]] = jQuery.css(elem, name[i], false, styles);
            }

            return map;
          }

          return value !== undefined
            ? jQuery.style(elem, name, value)
            : jQuery.css(elem, name);
        },
        name,
        value,
        arguments.length > 1
      );
    },
  });

  function Tween(elem, options, prop, end, easing) {
    return new Tween.prototype.init(elem, options, prop, end, easing);
  }

  jQuery.Tween = Tween;

  Tween.prototype = {
    constructor: Tween,

    init: function (elem, options, prop, end, easing, unit) {
      this.elem = elem;

      this.prop = prop;

      this.easing = easing || jQuery.easing._default;

      this.options = options;

      this.start = this.now = this.cur();

      this.end = end;

      this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
    },

    cur: function () {
      var hooks = Tween.propHooks[this.prop];

      return hooks && hooks.get
        ? hooks.get(this)
        : Tween.propHooks._default.get(this);
    },

    run: function (percent) {
      var eased,
        hooks = Tween.propHooks[this.prop];

      if (this.options.duration) {
        this.pos = eased = jQuery.easing[this.easing](
          percent,
          this.options.duration * percent,
          0,
          1,
          this.options.duration
        );
      } else {
        this.pos = eased = percent;
      }

      this.now = (this.end - this.start) * eased + this.start;

      if (this.options.step) {
        this.options.step.call(this.elem, this.now, this);
      }

      if (hooks && hooks.set) {
        hooks.set(this);
      } else {
        Tween.propHooks._default.set(this);
      }

      return this;
    },
  };

  Tween.prototype.init.prototype = Tween.prototype;

  Tween.propHooks = {
    _default: {
      get: function (tween) {
        var result;

        // Use a property on the element directly when it is not a DOM element,

        // or when there is no matching style property that exists.

        if (
          tween.elem.nodeType !== 1 ||
          (tween.elem[tween.prop] != null &&
            tween.elem.style[tween.prop] == null)
        ) {
          return tween.elem[tween.prop];
        }

        // Passing an empty string as a 3rd parameter to .css will automatically

        // attempt a parseFloat and fallback to a string if the parse fails.

        // Simple values such as "10px" are parsed to Float;

        // complex values such as "rotate(1rad)" are returned as-is.

        result = jQuery.css(tween.elem, tween.prop, "");

        // Empty strings, null, undefined and "auto" are converted to 0.

        return !result || result === "auto" ? 0 : result;
      },

      set: function (tween) {
        // Use step hook for back compat.

        // Use cssHook if its there.

        // Use .style if available and use plain properties where available.

        if (jQuery.fx.step[tween.prop]) {
          jQuery.fx.step[tween.prop](tween);
        } else if (
          tween.elem.nodeType === 1 &&
          (tween.elem.style[jQuery.cssProps[tween.prop]] != null ||
            jQuery.cssHooks[tween.prop])
        ) {
          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
        } else {
          tween.elem[tween.prop] = tween.now;
        }
      },
    },
  };

  // Support: IE <=9 only

  // Panic based approach to setting things on disconnected nodes

  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
    set: function (tween) {
      if (tween.elem.nodeType && tween.elem.parentNode) {
        tween.elem[tween.prop] = tween.now;
      }
    },
  };

  jQuery.easing = {
    linear: function (p) {
      return p;
    },

    swing: function (p) {
      return 0.5 - Math.cos(p * Math.PI) / 2;
    },

    _default: "swing",
  };

  jQuery.fx = Tween.prototype.init;

  // Back compat <1.8 extension point

  jQuery.fx.step = {};

  var fxNow,
    timerId,
    rfxtypes = /^(?:toggle|show|hide)$/,
    rrun = /queueHooks$/;

  function raf() {
    if (timerId) {
      window.requestAnimationFrame(raf);

      jQuery.fx.tick();
    }
  }

  // Animations created synchronously will run synchronously

  function createFxNow() {
    window.setTimeout(function () {
      fxNow = undefined;
    });

    return (fxNow = jQuery.now());
  }

  // Generate parameters to create a standard animation

  function genFx(type, includeWidth) {
    var which,
      i = 0,
      attrs = { height: type };

    // If we include width, step value is 1 to do all cssExpand values,

    // otherwise step value is 2 to skip over Left and Right

    includeWidth = includeWidth ? 1 : 0;

    for (; i < 4; i += 2 - includeWidth) {
      which = cssExpand[i];

      attrs["margin" + which] = attrs["padding" + which] = type;
    }

    if (includeWidth) {
      attrs.opacity = attrs.width = type;
    }

    return attrs;
  }

  function createTween(value, prop, animation) {
    var tween,
      collection = (Animation.tweeners[prop] || []).concat(
        Animation.tweeners["*"]
      ),
      index = 0,
      length = collection.length;

    for (; index < length; index++) {
      if ((tween = collection[index].call(animation, prop, value))) {
        // We're done with this property

        return tween;
      }
    }
  }

  function defaultPrefilter(elem, props, opts) {
    var prop,
      value,
      toggle,
      hooks,
      oldfire,
      propTween,
      restoreDisplay,
      display,
      isBox = "width" in props || "height" in props,
      anim = this,
      orig = {},
      style = elem.style,
      hidden = elem.nodeType && isHiddenWithinTree(elem),
      dataShow = dataPriv.get(elem, "fxshow");

    // Queue-skipping animations hijack the fx hooks

    if (!opts.queue) {
      hooks = jQuery._queueHooks(elem, "fx");

      if (hooks.unqueued == null) {
        hooks.unqueued = 0;

        oldfire = hooks.empty.fire;

        hooks.empty.fire = function () {
          if (!hooks.unqueued) {
            oldfire();
          }
        };
      }

      hooks.unqueued++;

      anim.always(function () {
        // Ensure the complete handler is called before this completes

        anim.always(function () {
          hooks.unqueued--;

          if (!jQuery.queue(elem, "fx").length) {
            hooks.empty.fire();
          }
        });
      });
    }

    // Detect show/hide animations

    for (prop in props) {
      value = props[prop];

      if (rfxtypes.test(value)) {
        delete props[prop];

        toggle = toggle || value === "toggle";

        if (value === (hidden ? "hide" : "show")) {
          // Pretend to be hidden if this is a "show" and

          // there is still data from a stopped show/hide

          if (value === "show" && dataShow && dataShow[prop] !== undefined) {
            hidden = true;

            // Ignore all other no-op show/hide data
          } else {
            continue;
          }
        }

        orig[prop] = (dataShow && dataShow[prop]) || jQuery.style(elem, prop);
      }
    }

    // Bail out if this is a no-op like .hide().hide()

    propTween = !jQuery.isEmptyObject(props);

    if (!propTween && jQuery.isEmptyObject(orig)) {
      return;
    }

    // Restrict "overflow" and "display" styles during box animations

    if (isBox && elem.nodeType === 1) {
      // Support: IE <=9 - 11, Edge 12 - 13

      // Record all 3 overflow attributes because IE does not infer the shorthand

      // from identically-valued overflowX and overflowY

      opts.overflow = [style.overflow, style.overflowX, style.overflowY];

      // Identify a display type, preferring old show/hide data over the CSS cascade

      restoreDisplay = dataShow && dataShow.display;

      if (restoreDisplay == null) {
        restoreDisplay = dataPriv.get(elem, "display");
      }

      display = jQuery.css(elem, "display");

      if (display === "none") {
        if (restoreDisplay) {
          display = restoreDisplay;
        } else {
          // Get nonempty value(s) by temporarily forcing visibility

          showHide([elem], true);

          restoreDisplay = elem.style.display || restoreDisplay;

          display = jQuery.css(elem, "display");

          showHide([elem]);
        }
      }

      // Animate inline elements as inline-block

      if (
        display === "inline" ||
        (display === "inline-block" && restoreDisplay != null)
      ) {
        if (jQuery.css(elem, "float") === "none") {
          // Restore the original display value at the end of pure show/hide animations

          if (!propTween) {
            anim.done(function () {
              style.display = restoreDisplay;
            });

            if (restoreDisplay == null) {
              display = style.display;

              restoreDisplay = display === "none" ? "" : display;
            }
          }

          style.display = "inline-block";
        }
      }
    }

    if (opts.overflow) {
      style.overflow = "hidden";

      anim.always(function () {
        style.overflow = opts.overflow[0];

        style.overflowX = opts.overflow[1];

        style.overflowY = opts.overflow[2];
      });
    }

    // Implement show/hide animations

    propTween = false;

    for (prop in orig) {
      // General show/hide setup for this element animation

      if (!propTween) {
        if (dataShow) {
          if ("hidden" in dataShow) {
            hidden = dataShow.hidden;
          }
        } else {
          dataShow = dataPriv.access(elem, "fxshow", {
            display: restoreDisplay,
          });
        }

        // Store hidden/visible for toggle so `.stop().toggle()` "reverses"

        if (toggle) {
          dataShow.hidden = !hidden;
        }

        // Show elements before animating them

        if (hidden) {
          showHide([elem], true);
        }

        /* eslint-disable no-loop-func */

        anim.done(function () {
          /* eslint-enable no-loop-func */

          // The final step of a "hide" animation is actually hiding the element

          if (!hidden) {
            showHide([elem]);
          }

          dataPriv.remove(elem, "fxshow");

          for (prop in orig) {
            jQuery.style(elem, prop, orig[prop]);
          }
        });
      }

      // Per-property setup

      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);

      if (!(prop in dataShow)) {
        dataShow[prop] = propTween.start;

        if (hidden) {
          propTween.end = propTween.start;

          propTween.start = 0;
        }
      }
    }
  }

  function propFilter(props, specialEasing) {
    var index, name, easing, value, hooks;

    // camelCase, specialEasing and expand cssHook pass

    for (index in props) {
      name = jQuery.camelCase(index);

      easing = specialEasing[name];

      value = props[index];

      if (jQuery.isArray(value)) {
        easing = value[1];

        value = props[index] = value[0];
      }

      if (index !== name) {
        props[name] = value;

        delete props[index];
      }

      hooks = jQuery.cssHooks[name];

      if (hooks && "expand" in hooks) {
        value = hooks.expand(value);

        delete props[name];

        // Not quite $.extend, this won't overwrite existing keys.

        // Reusing 'index' because we have the correct "name"

        for (index in value) {
          if (!(index in props)) {
            props[index] = value[index];

            specialEasing[index] = easing;
          }
        }
      } else {
        specialEasing[name] = easing;
      }
    }
  }


  jQuery.Animation = jQuery.extend(Animation, {
    tweeners: {
      "*": [
        function (prop, value) {
          var tween = this.createTween(prop, value);

          adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);

          return tween;
        },
      ],
    },

    tweener: function (props, callback) {
      if (jQuery.isFunction(props)) {
        callback = props;

        props = ["*"];
      } else {
        props = props.match(rnothtmlwhite);
      }

      var prop,
        index = 0,
        length = props.length;

      for (; index < length; index++) {
        prop = props[index];

        Animation.tweeners[prop] = Animation.tweeners[prop] || [];

        Animation.tweeners[prop].unshift(callback);
      }
    },

    prefilters: [defaultPrefilter],

    prefilter: function (callback, prepend) {
      if (prepend) {
        Animation.prefilters.unshift(callback);
      } else {
        Animation.prefilters.push(callback);
      }
    },
  });

  jQuery.speed = function (speed, easing, fn) {
    var opt =
      speed && typeof speed === "object"
        ? jQuery.extend({}, speed)
        : {
            complete:
              fn || (!fn && easing) || (jQuery.isFunction(speed) && speed),

            duration: speed,

            easing:
              (fn && easing) ||
              (easing && !jQuery.isFunction(easing) && easing),
          };

    // Go to the end state if fx are off or if document is hidden

    if (jQuery.fx.off || document.hidden) {
      opt.duration = 0;
    } else {
      if (typeof opt.duration !== "number") {
        if (opt.duration in jQuery.fx.speeds) {
          opt.duration = jQuery.fx.speeds[opt.duration];
        } else {
          opt.duration = jQuery.fx.speeds._default;
        }
      }
    }

    // Normalize opt.queue - true/undefined/null -> "fx"

    if (opt.queue == null || opt.queue === true) {
      opt.queue = "fx";
    }

    // Queueing

    opt.old = opt.complete;

    opt.complete = function () {
      if (jQuery.isFunction(opt.old)) {
        opt.old.call(this);
      }

      if (opt.queue) {
        jQuery.dequeue(this, opt.queue);
      }
    };

    return opt;
  };

  jQuery.fn.extend({
    fadeTo: function (speed, to, easing, callback) {
      // Show any hidden elements after setting opacity to 0

      return (
        this.filter(isHiddenWithinTree)
          .css("opacity", 0)
          .show()

          // Animate to the value specified

          .end()
          .animate({ opacity: to }, speed, easing, callback)
      );
    },

    animate: function (prop, speed, easing, callback) {
      var empty = jQuery.isEmptyObject(prop),
        optall = jQuery.speed(speed, easing, callback),
        doAnimation = function () {
          // Operate on a copy of prop so per-property easing won't be lost

          var anim = Animation(this, jQuery.extend({}, prop), optall);

          // Empty animations, or finishing resolves immediately

          if (empty || dataPriv.get(this, "finish")) {
            anim.stop(true);
          }
        };

      doAnimation.finish = doAnimation;

      return empty || optall.queue === false
        ? this.each(doAnimation)
        : this.queue(optall.queue, doAnimation);
    },

    stop: function (type, clearQueue, gotoEnd) {
      var stopQueue = function (hooks) {
        var stop = hooks.stop;

        delete hooks.stop;

        stop(gotoEnd);
      };

      if (typeof type !== "string") {
        gotoEnd = clearQueue;

        clearQueue = type;

        type = undefined;
      }

      if (clearQueue && type !== false) {
        this.queue(type || "fx", []);
      }

      return this.each(function () {
        var dequeue = true,
          index = type != null && type + "queueHooks",
          timers = jQuery.timers,
          data = dataPriv.get(this);

        if (index) {
          if (data[index] && data[index].stop) {
            stopQueue(data[index]);
          }
        } else {
          for (index in data) {
            if (data[index] && data[index].stop && rrun.test(index)) {
              stopQueue(data[index]);
            }
          }
        }

        for (index = timers.length; index--; ) {
          if (
            timers[index].elem === this &&
            (type == null || timers[index].queue === type)
          ) {
            timers[index].anim.stop(gotoEnd);

            dequeue = false;

            timers.splice(index, 1);
          }
        }

        // Start the next in the queue if the last step wasn't forced.

        // Timers currently will call their complete callbacks, which

        // will dequeue but only if they were gotoEnd.

        if (dequeue || !gotoEnd) {
          jQuery.dequeue(this, type);
        }
      });
    },

    finish: function (type) {
      if (type !== false) {
        type = type || "fx";
      }

      return this.each(function () {
        var index,
          data = dataPriv.get(this),
          queue = data[type + "queue"],
          hooks = data[type + "queueHooks"],
          timers = jQuery.timers,
          length = queue ? queue.length : 0;

        // Enable finishing flag on private data

        data.finish = true;

        // Empty the queue first

        jQuery.queue(this, type, []);

        if (hooks && hooks.stop) {
          hooks.stop.call(this, true);
        }

        // Look for any active animations, and finish them

        for (index = timers.length; index--; ) {
          if (timers[index].elem === this && timers[index].queue === type) {
            timers[index].anim.stop(true);

            timers.splice(index, 1);
          }
        }

        // Look for any animations in the old queue and finish them

        for (index = 0; index < length; index++) {
          if (queue[index] && queue[index].finish) {
            queue[index].finish.call(this);
          }
        }

        // Turn off finishing flag

        delete data.finish;
      });
    },
  });

  jQuery.each(["toggle", "show", "hide"], function (i, name) {
    var cssFn = jQuery.fn[name];

    jQuery.fn[name] = function (speed, easing, callback) {
      return speed == null || typeof speed === "boolean"
        ? cssFn.apply(this, arguments)
        : this.animate(genFx(name, true), speed, easing, callback);
    };
  });

  // Generate shortcuts for custom animations

  jQuery.each(
    {
      slideDown: genFx("show"),

      slideUp: genFx("hide"),

      slideToggle: genFx("toggle"),

      fadeIn: { opacity: "show" },

      fadeOut: { opacity: "hide" },

      fadeToggle: { opacity: "toggle" },
    },
    function (name, props) {
      jQuery.fn[name] = function (speed, easing, callback) {
        return this.animate(props, speed, easing, callback);
      };
    }
  );

  jQuery.timers = [];

  jQuery.fx.tick = function () {
    var timer,
      i = 0,
      timers = jQuery.timers;

    fxNow = jQuery.now();

    for (; i < timers.length; i++) {
      timer = timers[i];

      // Checks the timer has not already been removed

      if (!timer() && timers[i] === timer) {
        timers.splice(i--, 1);
      }
    }

    if (!timers.length) {
      jQuery.fx.stop();
    }

    fxNow = undefined;
  };

  jQuery.fx.timer = function (timer) {
    jQuery.timers.push(timer);

    if (timer()) {
      jQuery.fx.start();
    } else {
      jQuery.timers.pop();
    }
  };

  jQuery.fx.interval = 13;

  jQuery.fx.start = function () {
    if (!timerId) {
      timerId = window.requestAnimationFrame
        ? window.requestAnimationFrame(raf)
        : window.setInterval(jQuery.fx.tick, jQuery.fx.interval);
    }
  };

  jQuery.fx.stop = function () {
    if (window.cancelAnimationFrame) {
      window.cancelAnimationFrame(timerId);
    } else {
      window.clearInterval(timerId);
    }

    timerId = null;
  };

  jQuery.fx.speeds = {
    slow: 600,

    fast: 200,

    // Default speed

    _default: 400,
  };

  // Based off of the plugin by Clint Helfers, with permission.

  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

  jQuery.fn.delay = function (time, type) {
    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;

    type = type || "fx";

    return this.queue(type, function (next, hooks) {
      var timeout = window.setTimeout(next, time);

      hooks.stop = function () {
        window.clearTimeout(timeout);
      };
    });
  };

  (function () {
    var input = document.createElement("input"),
      select = document.createElement("select"),
      opt = select.appendChild(document.createElement("option"));

    input.type = "checkbox";

    // Support: Android <=4.3 only

    // Default value for a checkbox should be "on"

    support.checkOn = input.value !== "";

    // Support: IE <=11 only

    // Must access selectedIndex to make default options select

    support.optSelected = opt.selected;

    // Support: IE <=11 only

    // An input loses its value after becoming a radio

    input = document.createElement("input");

    input.value = "t";

    input.type = "radio";

    support.radioValue = input.value === "t";
  })();

  var boolHook,
    attrHandle = jQuery.expr.attrHandle;

  jQuery.fn.extend({
    attr: function (name, value) {
      return access(this, jQuery.attr, name, value, arguments.length > 1);
    },

    removeAttr: function (name) {
      return this.each(function () {
        jQuery.removeAttr(this, name);
      });
    },
  });

  jQuery.extend({
    attr: function (elem, name, value) {
      var ret,
        hooks,
        nType = elem.nodeType;

      // Don't get/set attributes on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }

      // Fallback to prop when attributes are not supported

      if (typeof elem.getAttribute === "undefined") {
        return jQuery.prop(elem, name, value);
      }

      // Attribute hooks are determined by the lowercase version

      // Grab necessary hook if one is defined

      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        hooks =
          jQuery.attrHooks[name.toLowerCase()] ||
          (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
      }

      if (value !== undefined) {
        if (value === null) {
          jQuery.removeAttr(elem, name);

          return;
        }

        if (
          hooks &&
          "set" in hooks &&
          (ret = hooks.set(elem, value, name)) !== undefined
        ) {
          return ret;
        }

        elem.setAttribute(name, value + "");

        return value;
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      ret = jQuery.find.attr(elem, name);

      // Non-existent attributes return null, we normalize to undefined

      return ret == null ? undefined : ret;
    },

    attrHooks: {
      type: {
        set: function (elem, value) {
          if (
            !support.radioValue &&
            value === "radio" &&
            jQuery.nodeName(elem, "input")
          ) {
            var val = elem.value;

            elem.setAttribute("type", value);

            if (val) {
              elem.value = val;
            }

            return value;
          }
        },
      },
    },

    removeAttr: function (elem, value) {
      var name,
        i = 0,
        // Attribute names can contain non-HTML whitespace characters

        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2

        attrNames = value && value.match(rnothtmlwhite);

      if (attrNames && elem.nodeType === 1) {
        while ((name = attrNames[i++])) {
          elem.removeAttribute(name);
        }
      }
    },
  });

  // Hooks for boolean attributes

  boolHook = {
    set: function (elem, value, name) {
      if (value === false) {
        // Remove boolean attributes when set to false

        jQuery.removeAttr(elem, name);
      } else {
        elem.setAttribute(name, name);
      }

      return name;
    },
  };

  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
    var getter = attrHandle[name] || jQuery.find.attr;

    attrHandle[name] = function (elem, name, isXML) {
      var ret,
        handle,
        lowercaseName = name.toLowerCase();

      if (!isXML) {
        // Avoid an infinite loop by temporarily removing this function from the getter

        handle = attrHandle[lowercaseName];

        attrHandle[lowercaseName] = ret;

        ret = getter(elem, name, isXML) != null ? lowercaseName : null;

        attrHandle[lowercaseName] = handle;
      }

      return ret;
    };
  });

  var rfocusable = /^(?:input|select|textarea|button)$/i,
    rclickable = /^(?:a|area)$/i;

  jQuery.fn.extend({
    prop: function (name, value) {
      return access(this, jQuery.prop, name, value, arguments.length > 1);
    },

    removeProp: function (name) {
      return this.each(function () {
        delete this[jQuery.propFix[name] || name];
      });
    },
  });

  jQuery.extend({
    prop: function (elem, name, value) {
      var ret,
        hooks,
        nType = elem.nodeType;

      // Don't get/set properties on text, comment and attribute nodes

      if (nType === 3 || nType === 8 || nType === 2) {
        return;
      }

      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
        // Fix name and attach hooks

        name = jQuery.propFix[name] || name;

        hooks = jQuery.propHooks[name];
      }

      if (value !== undefined) {
        if (
          hooks &&
          "set" in hooks &&
          (ret = hooks.set(elem, value, name)) !== undefined
        ) {
          return ret;
        }

        return (elem[name] = value);
      }

      if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
        return ret;
      }

      return elem[name];
    },

    propHooks: {
      tabIndex: {
        get: function (elem) {
          // Support: IE <=9 - 11 only

          // elem.tabIndex doesn't always return the

          // correct value when it hasn't been explicitly set

          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/

          // Use proper attribute retrieval(#12072)

          var tabindex = jQuery.find.attr(elem, "tabindex");

          if (tabindex) {
            return parseInt(tabindex, 10);
          }

          if (
            rfocusable.test(elem.nodeName) ||
            (rclickable.test(elem.nodeName) && elem.href)
          ) {
            return 0;
          }

          return -1;
        },
      },
    },

    propFix: {
      for: "htmlFor",

      class: "className",
    },
  });

  // Support: IE <=11 only

  // Accessing the selectedIndex property

  // forces the browser to respect setting selected

  // on the option

  // The getter ensures a default option is selected

  // when in an optgroup

  // eslint rule "no-unused-expressions" is disabled for this code

  // since it considers such accessions noop

  if (!support.optSelected) {
    jQuery.propHooks.selected = {
      get: function (elem) {
        /* eslint no-unused-expressions: "off" */

        var parent = elem.parentNode;

        if (parent && parent.parentNode) {
          parent.parentNode.selectedIndex;
        }

        return null;
      },

      set: function (elem) {
        /* eslint no-unused-expressions: "off" */

        var parent = elem.parentNode;

        if (parent) {
          parent.selectedIndex;

          if (parent.parentNode) {
            parent.parentNode.selectedIndex;
          }
        }
      },
    };
  }

  jQuery.each(
    [
      "tabIndex",

      "readOnly",

      "maxLength",

      "cellSpacing",

      "cellPadding",

      "rowSpan",

      "colSpan",

      "useMap",

      "frameBorder",

      "contentEditable",
    ],
    function () {
      jQuery.propFix[this.toLowerCase()] = this;
    }
  );

  // Strip and collapse whitespace according to HTML spec

  // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace

  function stripAndCollapse(value) {
    var tokens = value.match(rnothtmlwhite) || [];

    return tokens.join(" ");
  }

  function getClass(elem) {
    return (elem.getAttribute && elem.getAttribute("class")) || "";
  }

  jQuery.fn.extend({
    addClass: function (value) {
      var classes,
        elem,
        cur,
        curValue,
        clazz,
        j,
        finalValue,
        i = 0;

      if (jQuery.isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).addClass(value.call(this, j, getClass(this)));
        });
      }

      if (typeof value === "string" && value) {
        classes = value.match(rnothtmlwhite) || [];

        while ((elem = this[i++])) {
          curValue = getClass(elem);

          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while ((clazz = classes[j++])) {
              if (cur.indexOf(" " + clazz + " ") < 0) {
                cur += clazz + " ";
              }
            }

            // Only assign if different to avoid unneeded rendering.

            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },

    removeClass: function (value) {
      var classes,
        elem,
        cur,
        curValue,
        clazz,
        j,
        finalValue,
        i = 0;

      if (jQuery.isFunction(value)) {
        return this.each(function (j) {
          jQuery(this).removeClass(value.call(this, j, getClass(this)));
        });
      }

      if (!arguments.length) {
        return this.attr("class", "");
      }

      if (typeof value === "string" && value) {
        classes = value.match(rnothtmlwhite) || [];

        while ((elem = this[i++])) {
          curValue = getClass(elem);

          // This expression is here for better compressibility (see addClass)

          cur = elem.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";

          if (cur) {
            j = 0;

            while ((clazz = classes[j++])) {
              // Remove *all* instances

              while (cur.indexOf(" " + clazz + " ") > -1) {
                cur = cur.replace(" " + clazz + " ", " ");
              }
            }

            // Only assign if different to avoid unneeded rendering.

            finalValue = stripAndCollapse(cur);

            if (curValue !== finalValue) {
              elem.setAttribute("class", finalValue);
            }
          }
        }
      }

      return this;
    },

    toggleClass: function (value, stateVal) {
      var type = typeof value;

      if (typeof stateVal === "boolean" && type === "string") {
        return stateVal ? this.addClass(value) : this.removeClass(value);
      }

      if (jQuery.isFunction(value)) {
        return this.each(function (i) {
          jQuery(this).toggleClass(
            value.call(this, i, getClass(this), stateVal),

            stateVal
          );
        });
      }

      return this.each(function () {
        var className, i, self, classNames;

        if (type === "string") {
          // Toggle individual class names

          i = 0;

          self = jQuery(this);

          classNames = value.match(rnothtmlwhite) || [];

          while ((className = classNames[i++])) {
            // Check each className given, space separated list

            if (self.hasClass(className)) {
              self.removeClass(className);
            } else {
              self.addClass(className);
            }
          }

          // Toggle whole class name
        } else if (value === undefined || type === "boolean") {
          className = getClass(this);

          if (className) {
            // Store className if set

            dataPriv.set(this, "__className__", className);
          }

          // If the element has a class name or if we're passed `false`,

          // then remove the whole classname (if there was one, the above saved it).

          // Otherwise bring back whatever was previously saved (if anything),

          // falling back to the empty string if nothing was stored.

          if (this.setAttribute) {
            this.setAttribute(
              "class",

              className || value === false
                ? ""
                : dataPriv.get(this, "__className__") || ""
            );
          }
        }
      });
    },

    hasClass: function (selector) {
      var className,
        elem,
        i = 0;

      className = " " + selector + " ";

      while ((elem = this[i++])) {
        if (
          elem.nodeType === 1 &&
          (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1
        ) {
          return true;
        }
      }

      return false;
    },
  });

  var rreturn = /\r/g;

  jQuery.fn.extend({
    val: function (value) {
      var hooks,
        ret,
        isFunction,
        elem = this[0];

      if (!arguments.length) {
        if (elem) {
          hooks =
            jQuery.valHooks[elem.type] ||
            jQuery.valHooks[elem.nodeName.toLowerCase()];

          if (
            hooks &&
            "get" in hooks &&
            (ret = hooks.get(elem, "value")) !== undefined
          ) {
            return ret;
          }

          ret = elem.value;

          // Handle most common string cases

          if (typeof ret === "string") {
            return ret.replace(rreturn, "");
          }

          // Handle cases where value is null/undef or number

          return ret == null ? "" : ret;
        }

        return;
      }

      isFunction = jQuery.isFunction(value);

      return this.each(function (i) {
        var val;

        if (this.nodeType !== 1) {
          return;
        }

        if (isFunction) {
          val = value.call(this, i, jQuery(this).val());
        } else {
          val = value;
        }

        // Treat null/undefined as ""; convert numbers to string

        if (val == null) {
          val = "";
        } else if (typeof val === "number") {
          val += "";
        } else if (jQuery.isArray(val)) {
          val = jQuery.map(val, function (value) {
            return value == null ? "" : value + "";
          });
        }

        hooks =
          jQuery.valHooks[this.type] ||
          jQuery.valHooks[this.nodeName.toLowerCase()];

        // If set returns undefined, fall back to normal setting

        if (
          !hooks ||
          !("set" in hooks) ||
          hooks.set(this, val, "value") === undefined
        ) {
          this.value = val;
        }
      });
    },
  });

  jQuery.extend({
    valHooks: {
      option: {
        get: function (elem) {
          var val = jQuery.find.attr(elem, "value");

          return val != null
            ? val
            : // Support: IE <=10 - 11 only

              // option.text throws exceptions (#14686, #14858)

              // Strip and collapse whitespace

              // https://html.spec.whatwg.org/#strip-and-collapse-whitespace

              stripAndCollapse(jQuery.text(elem));
        },
      },

      select: {
        get: function (elem) {
          var value,
            option,
            i,
            options = elem.options,
            index = elem.selectedIndex,
            one = elem.type === "select-one",
            values = one ? null : [],
            max = one ? index + 1 : options.length;

          if (index < 0) {
            i = max;
          } else {
            i = one ? index : 0;
          }

          // Loop through all the selected options

          for (; i < max; i++) {
            option = options[i];

            // Support: IE <=9 only

            // IE8-9 doesn't update selected after form reset (#2551)

            if (
              (option.selected || i === index) &&
              // Don't return options that are disabled or in a disabled optgroup

              !option.disabled &&
              (!option.parentNode.disabled ||
                !jQuery.nodeName(option.parentNode, "optgroup"))
            ) {
              // Get the specific value for the option

              value = jQuery(option).val();

              // We don't need an array for one selects

              if (one) {
                return value;
              }

              // Multi-Selects return an array

              values.push(value);
            }
          }

          return values;
        },

        set: function (elem, value) {
          var optionSet,
            option,
            options = elem.options,
            values = jQuery.makeArray(value),
            i = options.length;

          while (i--) {
            option = options[i];

            /* eslint-disable no-cond-assign */

            if (
              (option.selected =
                jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1)
            ) {
              optionSet = true;
            }

            /* eslint-enable no-cond-assign */
          }

          // Force browsers to behave consistently when non-matching value is set

          if (!optionSet) {
            elem.selectedIndex = -1;
          }

          return values;
        },
      },
    },
  });

  // Radios and checkboxes getter/setter

  jQuery.each(["radio", "checkbox"], function () {
    jQuery.valHooks[this] = {
      set: function (elem, value) {
        if (jQuery.isArray(value)) {
          return (elem.checked =
            jQuery.inArray(jQuery(elem).val(), value) > -1);
        }
      },
    };

    if (!support.checkOn) {
      jQuery.valHooks[this].get = function (elem) {
        return elem.getAttribute("value") === null ? "on" : elem.value;
      };
    }
  });

  // Return jQuery for attributes-only inclusion

  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

  jQuery.extend(jQuery.event, {
    trigger: function (event, data, elem, onlyHandlers) {
      var i,
        cur,
        tmp,
        bubbleType,
        ontype,
        handle,
        special,
        eventPath = [elem || document],
        type = hasOwn.call(event, "type") ? event.type : event,
        namespaces = hasOwn.call(event, "namespace")
          ? event.namespace.split(".")
          : [];

      cur = tmp = elem = elem || document;

      // Don't do events on text and comment nodes

      if (elem.nodeType === 3 || elem.nodeType === 8) {
        return;
      }

      // focus/blur morphs to focusin/out; ensure we're not firing them right now

      if (rfocusMorph.test(type + jQuery.event.triggered)) {
        return;
      }

      if (type.indexOf(".") > -1) {
        // Namespaced trigger; create a regexp to match event type in handle()

        namespaces = type.split(".");

        type = namespaces.shift();

        namespaces.sort();
      }

      ontype = type.indexOf(":") < 0 && "on" + type;

      // Caller can pass in a jQuery.Event object, Object, or just an event type string

      event = event[jQuery.expando]
        ? event
        : new jQuery.Event(type, typeof event === "object" && event);

      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

      event.isTrigger = onlyHandlers ? 2 : 3;

      event.namespace = namespaces.join(".");

      event.rnamespace = event.namespace
        ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)")
        : null;

      // Clean up the event in case it is being reused

      event.result = undefined;

      if (!event.target) {
        event.target = elem;
      }

      // Clone any incoming data and prepend the event, creating the handler arg list

      data = data == null ? [event] : jQuery.makeArray(data, [event]);

      // Allow special events to draw outside the lines

      special = jQuery.event.special[type] || {};

      if (
        !onlyHandlers &&
        special.trigger &&
        special.trigger.apply(elem, data) === false
      ) {
        return;
      }

      // Determine event propagation path in advance, per W3C events spec (#9951)

      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)

      if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
        bubbleType = special.delegateType || type;

        if (!rfocusMorph.test(bubbleType + type)) {
          cur = cur.parentNode;
        }

        for (; cur; cur = cur.parentNode) {
          eventPath.push(cur);

          tmp = cur;
        }

        // Only add window if we got to document (e.g., not plain obj or detached DOM)

        if (tmp === (elem.ownerDocument || document)) {
          eventPath.push(tmp.defaultView || tmp.parentWindow || window);
        }
      }

      // Fire handlers on the event path

      i = 0;

      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
        event.type = i > 1 ? bubbleType : special.bindType || type;

        // jQuery handler

        handle =
          (dataPriv.get(cur, "events") || {})[event.type] &&
          dataPriv.get(cur, "handle");

        if (handle) {
          handle.apply(cur, data);
        }

        // Native handler

        handle = ontype && cur[ontype];

        if (handle && handle.apply && acceptData(cur)) {
          event.result = handle.apply(cur, data);

          if (event.result === false) {
            event.preventDefault();
          }
        }
      }

      event.type = type;

      // If nobody prevented the default action, do it now

      if (!onlyHandlers && !event.isDefaultPrevented()) {
        if (
          (!special._default ||
            special._default.apply(eventPath.pop(), data) === false) &&
          acceptData(elem)
        ) {
          // Call a native DOM method on the target with the same name as the event.

          // Don't do default actions on window, that's where global variables be (#6170)

          if (
            ontype &&
            jQuery.isFunction(elem[type]) &&
            !jQuery.isWindow(elem)
          ) {
            // Don't re-trigger an onFOO event when we call its FOO() method

            tmp = elem[ontype];

            if (tmp) {
              elem[ontype] = null;
            }

            // Prevent re-triggering of the same event, since we already bubbled it above

            jQuery.event.triggered = type;

            elem[type]();

            jQuery.event.triggered = undefined;

            if (tmp) {
              elem[ontype] = tmp;
            }
          }
        }
      }

      return event.result;
    },

    // Piggyback on a donor event to simulate a different one

    // Used only for `focus(in | out)` events

    simulate: function (type, elem, event) {
      var e = jQuery.extend(
        new jQuery.Event(),

        event,

        {
          type: type,

          isSimulated: true,
        }
      );

      jQuery.event.trigger(e, null, elem);
    },
  });

  jQuery.fn.extend({
    trigger: function (type, data) {
      return this.each(function () {
        jQuery.event.trigger(type, data, this);
      });
    },

    triggerHandler: function (type, data) {
      var elem = this[0];

      if (elem) {
        return jQuery.event.trigger(type, data, elem, true);
      }
    },
  });

  jQuery.each(
    (
      "blur focus focusin focusout resize scroll click dblclick " +
      "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
      "change select submit keydown keypress keyup contextmenu"
    ).split(" "),

    function (i, name) {
      // Handle event binding

      jQuery.fn[name] = function (data, fn) {
        return arguments.length > 0
          ? this.on(name, null, data, fn)
          : this.trigger(name);
      };
    }
  );

  jQuery.fn.extend({
    hover: function (fnOver, fnOut) {
      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    },
  });

  support.focusin = "onfocusin" in window;

  // Support: Firefox <=44

  // Firefox doesn't have focus(in | out) events

  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787

  //

  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1

  // focus(in | out) events fire after focus & blur events,

  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order

  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857

  if (!support.focusin) {
    jQuery.each({ focus: "focusin", blur: "focusout" }, function (orig, fix) {
      // Attach a single capturing handler on the document while someone wants focusin/focusout

      var handler = function (event) {
        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
      };

      jQuery.event.special[fix] = {
        setup: function () {
          var doc = this.ownerDocument || this,
            attaches = dataPriv.access(doc, fix);

          if (!attaches) {
            doc.addEventListener(orig, handler, true);
          }

          dataPriv.access(doc, fix, (attaches || 0) + 1);
        },

        teardown: function () {
          var doc = this.ownerDocument || this,
            attaches = dataPriv.access(doc, fix) - 1;

          if (!attaches) {
            doc.removeEventListener(orig, handler, true);

            dataPriv.remove(doc, fix);
          } else {
            dataPriv.access(doc, fix, attaches);
          }
        },
      };
    });
  }

  var location = window.location;

  var nonce = jQuery.now();

  var rquery = /\?/;

  // Cross-browser xml parsing

  jQuery.parseXML = function (data) {
    var xml;

    if (!data || typeof data !== "string") {
      return null;
    }

    // Support: IE 9 - 11 only

    // IE throws on parseFromString with invalid input.

    try {
      xml = new window.DOMParser().parseFromString(data, "text/xml");
    } catch (e) {
      xml = undefined;
    }

    if (!xml || xml.getElementsByTagName("parsererror").length) {
      jQuery.error("Invalid XML: " + data);
    }

    return xml;
  };

  var rbracket = /\[\]$/,
    rCRLF = /\r?\n/g,
    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
    rsubmittable = /^(?:input|select|textarea|keygen)/i;

  function buildParams(prefix, obj, traditional, add) {
    var name;

    if (jQuery.isArray(obj)) {
      // Serialize array item.

      jQuery.each(obj, function (i, v) {
        if (traditional || rbracket.test(prefix)) {
          // Treat each array item as a scalar.

          add(prefix, v);
        } else {
          // Item is non-scalar (array or object), encode its numeric index.

          buildParams(
            prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]",

            v,

            traditional,

            add
          );
        }
      });
    } else if (!traditional && jQuery.type(obj) === "object") {
      // Serialize object item.

      for (name in obj) {
        buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
      }
    } else {
      // Serialize scalar item.

      add(prefix, obj);
    }
  }

  // Serialize an array of form elements or a set of

  // key/values into a query string

  jQuery.param = function (a, traditional) {
    var prefix,
      s = [],
      add = function (key, valueOrFunction) {
        // If value is a function, invoke it and use its return value

        var value = jQuery.isFunction(valueOrFunction)
          ? valueOrFunction()
          : valueOrFunction;

        s[s.length] =
          encodeURIComponent(key) +
          "=" +
          encodeURIComponent(value == null ? "" : value);
      };

    // If an array was passed in, assume that it is an array of form elements.

    if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
      // Serialize the form elements

      jQuery.each(a, function () {
        add(this.name, this.value);
      });
    } else {
      // If traditional, encode the "old" way (the way 1.3.2 or older

      // did it), otherwise encode params recursively.

      for (prefix in a) {
        buildParams(prefix, a[prefix], traditional, add);
      }
    }

    // Return the resulting serialization

    return s.join("&");
  };

  jQuery.fn.extend({
    serialize: function () {
      return jQuery.param(this.serializeArray());
    },

    serializeArray: function () {
      return this.map(function () {
        // Can add propHook for "elements" to filter or add form elements

        var elements = jQuery.prop(this, "elements");

        return elements ? jQuery.makeArray(elements) : this;
      })

        .filter(function () {
          var type = this.type;

          // Use .is( ":disabled" ) so that fieldset[disabled] works

          return (
            this.name &&
            !jQuery(this).is(":disabled") &&
            rsubmittable.test(this.nodeName) &&
            !rsubmitterTypes.test(type) &&
            (this.checked || !rcheckableType.test(type))
          );
        })

        .map(function (i, elem) {
          var val = jQuery(this).val();

          if (val == null) {
            return null;
          }

          if (jQuery.isArray(val)) {
            return jQuery.map(val, function (val) {
              return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
            });
          }

          return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
        })
        .get();
    },
  });

  var r20 = /%20/g,
    rhash = /#.*$/,
    rantiCache = /([?&])_=[^&]*/,
    rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
    // #7653, #8125, #8152: local protocol detection

    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
    rnoContent = /^(?:GET|HEAD)$/,
    rprotocol = /^\/\//,
    /* Prefilters
    
         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
    
         * 2) These are called:
    
         *    - BEFORE asking for a transport
    
         *    - AFTER param serialization (s.data is a string if s.processData is true)
    
         * 3) key is the dataType
    
         * 4) the catchall symbol "*" can be used
    
         * 5) execution will start with transport dataType and THEN continue down to "*" if needed
    
         */

    prefilters = {},
    /* Transports bindings
    
         * 1) key is the dataType
    
         * 2) the catchall symbol "*" can be used
    
         * 3) selection will start with transport dataType and THEN go to "*" if needed
    
         */

    transports = {},
    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression

    allTypes = "*/".concat("*"),
    // Anchor tag for parsing the document origin

    originAnchor = document.createElement("a");

  originAnchor.href = location.href;

  // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

  function addToPrefiltersOrTransports(structure) {
    // dataTypeExpression is optional and defaults to "*"

    return function (dataTypeExpression, func) {
      if (typeof dataTypeExpression !== "string") {
        func = dataTypeExpression;

        dataTypeExpression = "*";
      }

      var dataType,
        i = 0,
        dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

      if (jQuery.isFunction(func)) {
        // For each dataType in the dataTypeExpression

        while ((dataType = dataTypes[i++])) {
          // Prepend if requested

          if (dataType[0] === "+") {
            dataType = dataType.slice(1) || "*";

            (structure[dataType] = structure[dataType] || []).unshift(func);

            // Otherwise append
          } else {
            (structure[dataType] = structure[dataType] || []).push(func);
          }
        }
      }
    };
  }

  // Base inspection function for prefilters and transports

  function inspectPrefiltersOrTransports(
    structure,
    options,
    originalOptions,
    jqXHR
  ) {
    var inspected = {},
      seekingTransport = structure === transports;

    function inspect(dataType) {
      var selected;

      inspected[dataType] = true;

      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
        var dataTypeOrTransport = prefilterOrFactory(
          options,
          originalOptions,
          jqXHR
        );

        if (
          typeof dataTypeOrTransport === "string" &&
          !seekingTransport &&
          !inspected[dataTypeOrTransport]
        ) {
          options.dataTypes.unshift(dataTypeOrTransport);

          inspect(dataTypeOrTransport);

          return false;
        } else if (seekingTransport) {
          return !(selected = dataTypeOrTransport);
        }
      });

      return selected;
    }

    return inspect(options.dataTypes[0]) || (!inspected["*"] && inspect("*"));
  }

  // A special extend for ajax options

  // that takes "flat" options (not to be deep extended)

  // Fixes #9887

  function ajaxExtend(target, src) {
    var key,
      deep,
      flatOptions = jQuery.ajaxSettings.flatOptions || {};

    for (key in src) {
      if (src[key] !== undefined) {
        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
      }
    }

    if (deep) {
      jQuery.extend(true, target, deep);
    }

    return target;
  }

  /* Handles responses to an ajax request:
    
     * - finds the right dataType (mediates between content-type and expected dataType)
    
     * - returns the corresponding response
    
     */

  function ajaxHandleResponses(s, jqXHR, responses) {
    var ct,
      type,
      finalDataType,
      firstDataType,
      contents = s.contents,
      dataTypes = s.dataTypes;

    // Remove auto dataType and get content-type in the process

    while (dataTypes[0] === "*") {
      dataTypes.shift();

      if (ct === undefined) {
        ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
      }
    }

    // Check if we're dealing with a known content-type

    if (ct) {
      for (type in contents) {
        if (contents[type] && contents[type].test(ct)) {
          dataTypes.unshift(type);

          break;
        }
      }
    }

    // Check to see if we have a response for the expected dataType

    if (dataTypes[0] in responses) {
      finalDataType = dataTypes[0];
    } else {
      // Try convertible dataTypes

      for (type in responses) {
        if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
          finalDataType = type;

          break;
        }

        if (!firstDataType) {
          firstDataType = type;
        }
      }

      // Or just use first one

      finalDataType = finalDataType || firstDataType;
    }

    // If we found a dataType

    // We add the dataType to the list if needed

    // and return the corresponding response

    if (finalDataType) {
      if (finalDataType !== dataTypes[0]) {
        dataTypes.unshift(finalDataType);
      }

      return responses[finalDataType];
    }
  }

  /* Chain conversions given the request and the original response
    
     * Also sets the responseXXX fields on the jqXHR instance
    
     */

  function ajaxConvert(s, response, jqXHR, isSuccess) {
    var conv2,
      current,
      conv,
      tmp,
      prev,
      converters = {},
      // Work with a copy of dataTypes in case we need to modify it for conversion

      dataTypes = s.dataTypes.slice();

    // Create converters map with lowercased keys

    if (dataTypes[1]) {
      for (conv in s.converters) {
        converters[conv.toLowerCase()] = s.converters[conv];
      }
    }

    current = dataTypes.shift();

    // Convert to each sequential dataType

    while (current) {
      if (s.responseFields[current]) {
        jqXHR[s.responseFields[current]] = response;
      }

      // Apply the dataFilter if provided

      if (!prev && isSuccess && s.dataFilter) {
        response = s.dataFilter(response, s.dataType);
      }

      prev = current;

      current = dataTypes.shift();

      if (current) {
        // There's only work to do if current dataType is non-auto

        if (current === "*") {
          current = prev;

          // Convert response if prev dataType is non-auto and differs from current
        } else if (prev !== "*" && prev !== current) {
          // Seek a direct converter

          conv = converters[prev + " " + current] || converters["* " + current];

          // If none found, seek a pair

          if (!conv) {
            for (conv2 in converters) {
              // If conv2 outputs current

              tmp = conv2.split(" ");

              if (tmp[1] === current) {
                // If prev can be converted to accepted input

                conv =
                  converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];

                if (conv) {
                  // Condense equivalence converters

                  if (conv === true) {
                    conv = converters[conv2];

                    // Otherwise, insert the intermediate dataType
                  } else if (converters[conv2] !== true) {
                    current = tmp[0];

                    dataTypes.unshift(tmp[1]);
                  }

                  break;
                }
              }
            }
          }

          // Apply converter (if not an equivalence)

          if (conv !== true) {
            // Unless errors are allowed to bubble, catch and return them

            if (conv && s.throws) {
              response = conv(response);
            } else {
              try {
                response = conv(response);
              } catch (e) {
                return {
                  state: "parsererror",

                  error: conv
                    ? e
                    : "No conversion from " + prev + " to " + current,
                };
              }
            }
          }
        }
      }
    }

    return { state: "success", data: response };
  }

  jQuery.extend({
    // Counter for holding the number of active queries

    active: 0,

    // Last-Modified header cache for next request

    lastModified: {},

    etag: {},

    ajaxSettings: {
      url: location.href,

      type: "GET",

      isLocal: rlocalProtocol.test(location.protocol),

      global: true,

      processData: true,

      contentType: "application/x-www-form-urlencoded; charset=UTF-8",

      /*
    
            timeout: 0,
    
            data: null,
    
            dataType: null,
    
            username: null,
    
            password: null,
    
            cache: null,
    
            throws: false,
    
            traditional: false,
    
            headers: {},
    
            */

      accepts: {
        "*": allTypes,

        text: "text/plain",

        html: "text/html",

        xml: "application/xml, text/xml",

        json: "application/json, text/javascript",
      },

      contents: {
        xml: /\bxml\b/,

        html: /\bhtml/,

        json: /\bjson\b/,
      },

      responseFields: {
        xml: "responseXML",

        text: "responseText",

        json: "responseJSON",
      },

      // Data converters

      // Keys separate source (or catchall "*") and destination types with a single space

      converters: {
        // Convert anything to text

        "* text": String,

        // Text to html (true = no transformation)

        "text html": true,

        // Evaluate text as a json expression

        "text json": JSON.parse,

        // Parse text as xml

        "text xml": jQuery.parseXML,
      },

      // For options that shouldn't be deep extended:

      // you can add your own custom options here if

      // and when you create one that shouldn't be

      // deep extended (see ajaxExtend)

      flatOptions: {
        url: true,

        context: true,
      },
    },

    // Creates a full fledged settings object into target

    // with both ajaxSettings and settings fields.

    // If target is omitted, writes into ajaxSettings.

    ajaxSetup: function (target, settings) {
      return settings
        ? // Building a settings object

          ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings)
        : // Extending ajaxSettings

          ajaxExtend(jQuery.ajaxSettings, target);
    },

    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),

    ajaxTransport: addToPrefiltersOrTransports(transports),

    // Main method

    ajax: function (url, options) {
      // If url is an object, simulate pre-1.5 signature

      if (typeof url === "object") {
        options = url;

        url = undefined;
      }

      // Force options to be an object

      options = options || {};

      var transport,
        // URL without anti-cache param

        cacheURL,
        // Response headers

        responseHeadersString,
        responseHeaders,
        // timeout handle

        timeoutTimer,
        // Url cleanup var

        urlAnchor,
        // Request state (becomes false upon send and true upon completion)

        completed,
        // To know if global events are to be dispatched

        fireGlobals,
        // Loop variable

        i,
        // uncached part of the url

        uncached,
        // Create the final options object

        s = jQuery.ajaxSetup({}, options),
        // Callbacks context

        callbackContext = s.context || s,
        // Context for global events is callbackContext if it is a DOM node or jQuery collection

        globalEventContext =
          s.context && (callbackContext.nodeType || callbackContext.jquery)
            ? jQuery(callbackContext)
            : jQuery.event,
        // Deferreds

        deferred = jQuery.Deferred(),
        completeDeferred = jQuery.Callbacks("once memory"),
        // Status-dependent callbacks

        statusCode = s.statusCode || {},
        // Headers (they are sent all at once)

        requestHeaders = {},
        requestHeadersNames = {},
        // Default abort message

        strAbort = "canceled",
        // Fake xhr

        jqXHR = {
          readyState: 0,

          // Builds headers hashtable if needed

          getResponseHeader: function (key) {
            var match;

            if (completed) {
              if (!responseHeaders) {
                responseHeaders = {};

                while ((match = rheaders.exec(responseHeadersString))) {
                  responseHeaders[match[1].toLowerCase()] = match[2];
                }
              }

              match = responseHeaders[key.toLowerCase()];
            }

            return match == null ? null : match;
          },

          // Raw string

          getAllResponseHeaders: function () {
            return completed ? responseHeadersString : null;
          },

          // Caches the header

          setRequestHeader: function (name, value) {
            if (completed == null) {
              name = requestHeadersNames[name.toLowerCase()] =
                requestHeadersNames[name.toLowerCase()] || name;

              requestHeaders[name] = value;
            }

            return this;
          },

          // Overrides response content-type header

          overrideMimeType: function (type) {
            if (completed == null) {
              s.mimeType = type;
            }

            return this;
          },

          // Status-dependent callbacks

          statusCode: function (map) {
            var code;

            if (map) {
              if (completed) {
                // Execute the appropriate callbacks

                jqXHR.always(map[jqXHR.status]);
              } else {
                // Lazy-add the new callbacks in a way that preserves old ones

                for (code in map) {
                  statusCode[code] = [statusCode[code], map[code]];
                }
              }
            }

            return this;
          },

          // Cancel the request

          abort: function (statusText) {
            var finalText = statusText || strAbort;

            if (transport) {
              transport.abort(finalText);
            }

            done(0, finalText);

            return this;
          },
        };

      // Attach deferreds

      deferred.promise(jqXHR);

      // Add protocol if not provided (prefilters might expect it)

      // Handle falsy url in the settings object (#10093: consistency with old signature)

      // We also use the url parameter if available

      s.url = ((url || s.url || location.href) + "").replace(
        rprotocol,
        location.protocol + "//"
      );

      // Alias method option to type as per ticket #12004

      s.type = options.method || options.type || s.method || s.type;

      // Extract dataTypes list

      s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [
        "",
      ];

      // A cross-domain request is in order when the origin doesn't match the current origin.

      if (s.crossDomain == null) {
        urlAnchor = document.createElement("a");

        // Support: IE <=8 - 11, Edge 12 - 13

        // IE throws exception on accessing the href property if url is malformed,

        // e.g. http://example.com:80x/

        try {
          urlAnchor.href = s.url;

          // Support: IE <=8 - 11 only

          // Anchor's host property isn't correctly set when s.url is relative

          urlAnchor.href = urlAnchor.href;

          s.crossDomain =
            originAnchor.protocol + "//" + originAnchor.host !==
            urlAnchor.protocol + "//" + urlAnchor.host;
        } catch (e) {
          // If there is an error parsing the URL, assume it is crossDomain,

          // it can be rejected by the transport if it is invalid

          s.crossDomain = true;
        }
      }

      // Convert data if not already a string

      if (s.data && s.processData && typeof s.data !== "string") {
        s.data = jQuery.param(s.data, s.traditional);
      }

      // Apply prefilters

      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

      // If request was aborted inside a prefilter, stop there

      if (completed) {
        return jqXHR;
      }

      // We can fire global events as of now if asked to

      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)

      fireGlobals = jQuery.event && s.global;

      // Watch for a new set of requests

      if (fireGlobals && jQuery.active++ === 0) {
        jQuery.event.trigger("ajaxStart");
      }

      // Uppercase the type

      s.type = s.type.toUpperCase();

      // Determine if request has content

      s.hasContent = !rnoContent.test(s.type);

      // Save the URL in case we're toying with the If-Modified-Since

      // and/or If-None-Match header later on

      // Remove hash to simplify url manipulation

      cacheURL = s.url.replace(rhash, "");

      // More options handling for requests with no content

      if (!s.hasContent) {
        // Remember the hash so we can put it back

        uncached = s.url.slice(cacheURL.length);

        // If data is available, append data to url

        if (s.data) {
          cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;

          // #9682: remove data so that it's not used in an eventual retry

          delete s.data;
        }

        // Add or update anti-cache param if needed

        if (s.cache === false) {
          cacheURL = cacheURL.replace(rantiCache, "$1");

          uncached =
            (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++ + uncached;
        }

        // Put hash and anti-cache on the URL that will be requested (gh-1732)

        s.url = cacheURL + uncached;

        // Change '%20' to '+' if this is encoded form body content (gh-2658)
      } else if (
        s.data &&
        s.processData &&
        (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0
      ) {
        s.data = s.data.replace(r20, "+");
      }

      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.

      if (s.ifModified) {
        if (jQuery.lastModified[cacheURL]) {
          jqXHR.setRequestHeader(
            "If-Modified-Since",
            jQuery.lastModified[cacheURL]
          );
        }

        if (jQuery.etag[cacheURL]) {
          jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
        }
      }

      // Set the correct header, if data is being sent

      if (
        (s.data && s.hasContent && s.contentType !== false) ||
        options.contentType
      ) {
        jqXHR.setRequestHeader("Content-Type", s.contentType);
      }

      // Set the Accepts header for the server, depending on the dataType

      jqXHR.setRequestHeader(
        "Accept",

        s.dataTypes[0] && s.accepts[s.dataTypes[0]]
          ? s.accepts[s.dataTypes[0]] +
              (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "")
          : s.accepts["*"]
      );

      // Check for headers option

      for (i in s.headers) {
        jqXHR.setRequestHeader(i, s.headers[i]);
      }

      // Allow custom headers/mimetypes and early abort

      if (
        s.beforeSend &&
        (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)
      ) {
        // Abort if not done already and return

        return jqXHR.abort();
      }

      // Aborting is no longer a cancellation

      strAbort = "abort";

      // Install callbacks on deferreds

      completeDeferred.add(s.complete);

      jqXHR.done(s.success);

      jqXHR.fail(s.error);

      // Get transport

      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

      // If no transport, we auto-abort

      if (!transport) {
        done(-1, "No Transport");
      } else {
        jqXHR.readyState = 1;

        // Send global event

        if (fireGlobals) {
          globalEventContext.trigger("ajaxSend", [jqXHR, s]);
        }

        // If request was aborted inside ajaxSend, stop there

        if (completed) {
          return jqXHR;
        }

        // Timeout

        try {
          completed = false;

          transport.send(requestHeaders, done);
        } catch (e) {
          // Rethrow post-completion exceptions

          if (completed) {
            throw e;
          }

          // Propagate others as results

          done(-1, e);
        }
      }

      // Callback for when everything is done

      function done(status, nativeStatusText, responses, headers) {
        var isSuccess,
          success,
          error,
          response,
          modified,
          statusText = nativeStatusText;

        // Ignore repeat invocations

        if (completed) {
          return;
        }

        completed = true;

        // Clear timeout if it exists

        if (timeoutTimer) {
          window.clearTimeout(timeoutTimer);
        }

        // Dereference transport for early garbage collection

        // (no matter how long the jqXHR object will be used)

        transport = undefined;

        // Cache response headers

        responseHeadersString = headers || "";

        // Set readyState

        jqXHR.readyState = status > 0 ? 4 : 0;

        // Determine if successful

        isSuccess = (status >= 200 && status < 300) || status === 304;

        // Get response data

        if (responses) {
          response = ajaxHandleResponses(s, jqXHR, responses);
        }

        // Convert no matter what (that way responseXXX fields are always set)

        response = ajaxConvert(s, response, jqXHR, isSuccess);

        // If successful, handle type chaining

        if (isSuccess) {
          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.

          if (s.ifModified) {
            modified = jqXHR.getResponseHeader("Last-Modified");

            if (modified) {
              jQuery.lastModified[cacheURL] = modified;
            }

            modified = jqXHR.getResponseHeader("etag");

            if (modified) {
              jQuery.etag[cacheURL] = modified;
            }
          }

          // if no content

          if (status === 204 || s.type === "HEAD") {
            statusText = "nocontent";

            // if not modified
          } else if (status === 304) {
            statusText = "notmodified";

            // If we have data, let's convert it
          } else {
            statusText = response.state;

            success = response.data;

            error = response.error;

            isSuccess = !error;
          }
        } else {
          // Extract error from statusText and normalize for non-aborts

          error = statusText;

          if (status || !statusText) {
            statusText = "error";

            if (status < 0) {
              status = 0;
            }
          }
        }

        // Set data for the fake xhr object

        jqXHR.status = status;

        jqXHR.statusText = (nativeStatusText || statusText) + "";

        // Success/Error

        if (isSuccess) {
          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
        } else {
          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
        }

        // Status-dependent callbacks

        jqXHR.statusCode(statusCode);

        statusCode = undefined;

        if (fireGlobals) {
          globalEventContext.trigger(
            isSuccess ? "ajaxSuccess" : "ajaxError",

            [jqXHR, s, isSuccess ? success : error]
          );
        }

        // Complete

        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

        if (fireGlobals) {
          globalEventContext.trigger("ajaxComplete", [jqXHR, s]);

          // Handle the global AJAX counter

          if (!--jQuery.active) {
            jQuery.event.trigger("ajaxStop");
          }
        }
      }

      return jqXHR;
    },

    getJSON: function (url, data, callback) {
      return jQuery.get(url, data, callback, "json");
    },

    getScript: function (url, callback) {
      return jQuery.get(url, undefined, callback, "script");
    },
  });

  jQuery.each(["get", "post"], function (i, method) {
    jQuery[method] = function (url, data, callback, type) {
      // Shift arguments if data argument was omitted

      if (jQuery.isFunction(data)) {
        type = type || callback;

        callback = data;

        data = undefined;
      }

      // The url can be an options object (which then must have .url)

      return jQuery.ajax(
        jQuery.extend(
          {
            url: url,

            type: method,

            dataType: type,

            data: data,

            success: callback,
          },
          jQuery.isPlainObject(url) && url
        )
      );
    };
  });

  jQuery.fn.extend({
    wrapAll: function (html) {
      var wrap;

      if (this[0]) {
        if (jQuery.isFunction(html)) {
          html = html.call(this[0]);
        }

        // The elements to wrap the target around

        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

        if (this[0].parentNode) {
          wrap.insertBefore(this[0]);
        }

        wrap
          .map(function () {
            var elem = this;

            while (elem.firstElementChild) {
              elem = elem.firstElementChild;
            }

            return elem;
          })
          .append(this);
      }

      return this;
    },

    wrapInner: function (html) {
      if (jQuery.isFunction(html)) {
        return this.each(function (i) {
          jQuery(this).wrapInner(html.call(this, i));
        });
      }

      return this.each(function () {
        var self = jQuery(this),
          contents = self.contents();

        if (contents.length) {
          contents.wrapAll(html);
        } else {
          self.append(html);
        }
      });
    },

    wrap: function (html) {
      var isFunction = jQuery.isFunction(html);

      return this.each(function (i) {
        jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
      });
    },

    unwrap: function (selector) {
      this.parent(selector)
        .not("body")
        .each(function () {
          jQuery(this).replaceWith(this.childNodes);
        });

      return this;
    },
  });

  jQuery.expr.pseudos.hidden = function (elem) {
    return !jQuery.expr.pseudos.visible(elem);
  };

  jQuery.expr.pseudos.visible = function (elem) {
    return !!(
      elem.offsetWidth ||
      elem.offsetHeight ||
      elem.getClientRects().length
    );
  };

  jQuery.ajaxSettings.xhr = function () {
    try {
      return new window.XMLHttpRequest();
    } catch (e) {}
  };

  var xhrSuccessStatus = {
      // File protocol always yields status code 0, assume 200

      0: 200,

      // Support: IE <=9 only

      // #1450: sometimes IE returns 1223 when it should be 204

      1223: 204,
    },
    xhrSupported = jQuery.ajaxSettings.xhr();

  support.cors = !!xhrSupported && "withCredentials" in xhrSupported;

  support.ajax = xhrSupported = !!xhrSupported;

  jQuery.ajaxTransport(function (options) {
    var callback, errorCallback;

    // Cross domain only allowed if supported through XMLHttpRequest

    if (support.cors || (xhrSupported && !options.crossDomain)) {
      return {
        send: function (headers, complete) {
          var i,
            xhr = options.xhr();

          xhr.open(
            options.type,

            options.url,

            options.username,

            options.password
          );

          // Apply custom fields if provided

          if (options.xhrFields) {
            for (i in options.xhrFields) {
              xhr[i] = options.xhrFields[i];
            }
          }

          // Override mime type if needed

          if (options.mimeType && xhr.overrideMimeType) {
            xhr.overrideMimeType(options.mimeType);
          }

          // X-Requested-With header

          // For cross-domain requests, seeing as conditions for a preflight are

          // akin to a jigsaw puzzle, we simply never set it to be sure.

          // (it can always be set on a per-request basis or even using ajaxSetup)

          // For same-domain requests, won't change header if already provided.

          if (!options.crossDomain && !headers["X-Requested-With"]) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          }

          // Set headers

          for (i in headers) {
            xhr.setRequestHeader(i, headers[i]);
          }

          // Callback

          callback = function (type) {
            return function () {
              if (callback) {
                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

                if (type === "abort") {
                  xhr.abort();
                } else if (type === "error") {
                  // Support: IE <=9 only

                  // On a manual native abort, IE9 throws

                  // errors on any property access that is not readyState

                  if (typeof xhr.status !== "number") {
                    complete(0, "error");
                  } else {
                    complete(
                      // File: protocol always yields status 0; see #8605, #14207

                      xhr.status,

                      xhr.statusText
                    );
                  }
                } else {
                  complete(
                    xhrSuccessStatus[xhr.status] || xhr.status,

                    xhr.statusText,

                    // Support: IE <=9 only

                    // IE9 has no XHR2 but throws on binary (trac-11426)

                    // For XHR2 non-text, let the caller handle it (gh-2498)

                    (xhr.responseType || "text") !== "text" ||
                      typeof xhr.responseText !== "string"
                      ? { binary: xhr.response }
                      : { text: xhr.responseText },

                    xhr.getAllResponseHeaders()
                  );
                }
              }
            };
          };

          // Listen to events

          xhr.onload = callback();

          errorCallback = xhr.onerror = callback("error");

          // Support: IE 9 only

          // Use onreadystatechange to replace onabort

          // to handle uncaught aborts

          if (xhr.onabort !== undefined) {
            xhr.onabort = errorCallback;
          } else {
            xhr.onreadystatechange = function () {
              // Check readyState before timeout as it changes

              if (xhr.readyState === 4) {
                // Allow onerror to be called first,

                // but that will not handle a native abort

                // Also, save errorCallback to a variable

                // as xhr.onerror cannot be accessed

                window.setTimeout(function () {
                  if (callback) {
                    errorCallback();
                  }
                });
              }
            };
          }

          // Create the abort callback

          callback = callback("abort");

          try {
            // Do send the request (this may raise an exception)

            xhr.send((options.hasContent && options.data) || null);
          } catch (e) {
            // #14683: Only rethrow if this hasn't been notified as an error yet

            if (callback) {
              throw e;
            }
          }
        },

        abort: function () {
          if (callback) {
            callback();
          }
        },
      };
    }
  });


  jQuery.fn.extend({
    bind: function (types, data, fn) {
      return this.on(types, null, data, fn);
    },

    unbind: function (types, fn) {
      return this.off(types, null, fn);
    },

    delegate: function (selector, types, data, fn) {
      return this.on(types, selector, data, fn);
    },

    undelegate: function (selector, types, fn) {
      // ( namespace ) or ( selector, types [, fn] )

      return arguments.length === 1
        ? this.off(selector, "**")
        : this.off(types, selector || "**", fn);
    },
  });

  jQuery.parseJSON = JSON.parse;
  if (typeof define === "function" && define.amd) {
    define("jquery", [], function () {
      return jQuery;
    });
  }

  var // Map over jQuery in case of overwrite

    _jQuery = window.jQuery,
    // Map over the $ in case of overwrite

    _$ = window.$;

  jQuery.noConflict = function (deep) {
    if (window.$ === jQuery) {
      window.$ = _$;
    }

    if (deep && window.jQuery === jQuery) {
      window.jQuery = _jQuery;
    }

    return jQuery;
  };

  // Expose jQuery and $ identifiers, even in AMD

  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)

  // and CommonJS for browser emulators (#13566)

  if (!noGlobal) {
    window.jQuery = window.$ = jQuery;
  }

  return jQuery;
});

/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under the MIT license
 */

if (typeof jQuery === "undefined") {
  throw new Error("Bootstrap's JavaScript requires jQuery");
}

+(function ($) {
  "use strict";
  var version = $.fn.jquery.split(" ")[0].split(".");
  if (
    (version[0] < 2 && version[1] < 9) ||
    (version[0] == 1 && version[1] == 9 && version[2] < 1) ||
    version[0] > 3
  ) {
    throw new Error(
      "Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4"
    );
  }
})(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement("bootstrap");

    var transEndEventNames = {
      WebkitTransition: "webkitTransitionEnd",
      MozTransition: "transitionend",
      OTransition: "oTransitionEnd otransitionend",
      transition: "transitionend",
    };

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] };
      }
    }

    return false; // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false;
    var $el = this;
    $(this).one("bsTransitionEnd", function () {
      called = true;
    });
    var callback = function () {
      if (!called) $($el).trigger($.support.transition.end);
    };
    setTimeout(callback, duration);
    return this;
  };

  $(function () {
    $.support.transition = transitionEnd();

    if (!$.support.transition) return;

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this))
          return e.handleObj.handler.apply(this, arguments);
      },
    };
  });
})(jQuery);

+(function ($) {
  "use strict";

  var dismiss = '[data-dismiss="alert"]';
  var Alert = function (el) {
    $(el).on("click", dismiss, this.close);
  };

  Alert.VERSION = "3.3.7";

  Alert.TRANSITION_DURATION = 150;

  Alert.prototype.close = function (e) {
    var $this = $(this);
    var selector = $this.attr("data-target");

    if (!selector) {
      selector = $this.attr("href");
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ""); // strip for ie7
    }

    var $parent = $(selector === "#" ? [] : selector);

    if (e) e.preventDefault();

    if (!$parent.length) {
      $parent = $this.closest(".alert");
    }

    $parent.trigger((e = $.Event("close.bs.alert")));

    if (e.isDefaultPrevented()) return;

    $parent.removeClass("in");

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger("closed.bs.alert").remove();
    }

    $.support.transition && $parent.hasClass("fade")
      ? $parent
          .one("bsTransitionEnd", removeElement)
          .emulateTransitionEnd(Alert.TRANSITION_DURATION)
      : removeElement();
  };

  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.alert");

      if (!data) $this.data("bs.alert", (data = new Alert(this)));
      if (typeof option == "string") data[option].call($this);
    });
  }

  var old = $.fn.alert;

  $.fn.alert = Plugin;
  $.fn.alert.Constructor = Alert;

  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old;
    return this;
  };

  // ALERT DATA-API
  // ==============

  $(document).on("click.bs.alert.data-api", dismiss, Alert.prototype.close);
})(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Button.DEFAULTS, options);
    this.isLoading = false;
  };

  Button.VERSION = "3.3.7";

  Button.DEFAULTS = {
    loadingText: "loading...",
  };

  Button.prototype.setState = function (state) {
    var d = "disabled";
    var $el = this.$element;
    var val = $el.is("input") ? "val" : "html";
    var data = $el.data();

    state += "Text";

    if (data.resetText == null) $el.data("resetText", $el[val]());

    // push to event loop to allow forms to submit
    setTimeout(
      $.proxy(function () {
        $el[val](data[state] == null ? this.options[state] : data[state]);

        if (state == "loadingText") {
          this.isLoading = true;
          $el.addClass(d).attr(d, d).prop(d, true);
        } else if (this.isLoading) {
          this.isLoading = false;
          $el.removeClass(d).removeAttr(d).prop(d, false);
        }
      }, this),
      0
    );
  };

  Button.prototype.toggle = function () {
    var changed = true;
    var $parent = this.$element.closest('[data-toggle="buttons"]');

    if ($parent.length) {
      var $input = this.$element.find("input");
      if ($input.prop("type") == "radio") {
        if ($input.prop("checked")) changed = false;
        $parent.find(".active").removeClass("active");
        this.$element.addClass("active");
      } else if ($input.prop("type") == "checkbox") {
        if ($input.prop("checked") !== this.$element.hasClass("active"))
          changed = false;
        this.$element.toggleClass("active");
      }
      $input.prop("checked", this.$element.hasClass("active"));
      if (changed) $input.trigger("change");
    } else {
      this.$element.attr("aria-pressed", !this.$element.hasClass("active"));
      this.$element.toggleClass("active");
    }
  };

  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.button");
      var options = typeof option == "object" && option;

      if (!data) $this.data("bs.button", (data = new Button(this, options)));

      if (option == "toggle") data.toggle();
      else if (option) data.setState(option);
    });
  }

  var old = $.fn.button;

  $.fn.button = Plugin;
  $.fn.button.Constructor = Button;

  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old;
    return this;
  };

  // BUTTON DATA-API
  // ===============

  $(document)
    .on("click.bs.button.data-api", '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest(".btn");
      Plugin.call($btn, "toggle");
      if (!$(e.target).is('input[type="radio"], input[type="checkbox"]')) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault();
        // The target component still receive the focus
        if ($btn.is("input,button")) $btn.trigger("focus");
        else $btn.find("input:visible,button:visible").first().trigger("focus");
      }
    })
    .on(
      "focus.bs.button.data-api blur.bs.button.data-api",
      '[data-toggle^="button"]',
      function (e) {
        $(e.target)
          .closest(".btn")
          .toggleClass("focus", /^focus(in)?$/.test(e.type));
      }
    );
})(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element = $(element);
    this.$indicators = this.$element.find(".carousel-indicators");
    this.options = options;
    this.paused = null;
    this.sliding = null;
    this.interval = null;
    this.$active = null;
    this.$items = null;

    this.options.keyboard &&
      this.$element.on("keydown.bs.carousel", $.proxy(this.keydown, this));

    this.options.pause == "hover" &&
      !("ontouchstart" in document.documentElement) &&
      this.$element
        .on("mouseenter.bs.carousel", $.proxy(this.pause, this))
        .on("mouseleave.bs.carousel", $.proxy(this.cycle, this));
  };

  Carousel.VERSION = "3.3.7";

  Carousel.TRANSITION_DURATION = 600;

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: "hover",
    wrap: true,
    keyboard: true,
  };

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return;
    switch (e.which) {
      case 37:
        this.prev();
        break;
      case 39:
        this.next();
        break;
      default:
        return;
    }

    e.preventDefault();
  };

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false);

    this.interval && clearInterval(this.interval);

    this.options.interval &&
      !this.paused &&
      (this.interval = setInterval(
        $.proxy(this.next, this),
        this.options.interval
      ));

    return this;
  };

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children(".item");
    return this.$items.index(item || this.$active);
  };

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active);
    var willWrap =
      (direction == "prev" && activeIndex === 0) ||
      (direction == "next" && activeIndex == this.$items.length - 1);
    if (willWrap && !this.options.wrap) return active;
    var delta = direction == "prev" ? -1 : 1;
    var itemIndex = (activeIndex + delta) % this.$items.length;
    return this.$items.eq(itemIndex);
  };

  Carousel.prototype.to = function (pos) {
    var that = this;
    var activeIndex = this.getItemIndex(
      (this.$active = this.$element.find(".item.active"))
    );

    if (pos > this.$items.length - 1 || pos < 0) return;

    if (this.sliding)
      return this.$element.one("slid.bs.carousel", function () {
        that.to(pos);
      }); // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle();

    return this.slide(pos > activeIndex ? "next" : "prev", this.$items.eq(pos));
  };

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true);

    if (this.$element.find(".next, .prev").length && $.support.transition) {
      this.$element.trigger($.support.transition.end);
      this.cycle(true);
    }

    this.interval = clearInterval(this.interval);

    return this;
  };

  Carousel.prototype.next = function () {
    if (this.sliding) return;
    return this.slide("next");
  };

  Carousel.prototype.prev = function () {
    if (this.sliding) return;
    return this.slide("prev");
  };

  Carousel.prototype.slide = function (type, next) {
    var $active = this.$element.find(".item.active");
    var $next = next || this.getItemForDirection(type, $active);
    var isCycling = this.interval;
    var direction = type == "next" ? "left" : "right";
    var that = this;

    if ($next.hasClass("active")) return (this.sliding = false);

    var relatedTarget = $next[0];
    var slideEvent = $.Event("slide.bs.carousel", {
      relatedTarget: relatedTarget,
      direction: direction,
    });
    this.$element.trigger(slideEvent);
    if (slideEvent.isDefaultPrevented()) return;

    this.sliding = true;

    isCycling && this.pause();

    if (this.$indicators.length) {
      this.$indicators.find(".active").removeClass("active");
      var $nextIndicator = $(
        this.$indicators.children()[this.getItemIndex($next)]
      );
      $nextIndicator && $nextIndicator.addClass("active");
    }

    var slidEvent = $.Event("slid.bs.carousel", {
      relatedTarget: relatedTarget,
      direction: direction,
    }); // yes, "slid"
    if ($.support.transition && this.$element.hasClass("slide")) {
      $next.addClass(type);
      $next[0].offsetWidth; // force reflow
      $active.addClass(direction);
      $next.addClass(direction);
      $active
        .one("bsTransitionEnd", function () {
          $next.removeClass([type, direction].join(" ")).addClass("active");
          $active.removeClass(["active", direction].join(" "));
          that.sliding = false;
          setTimeout(function () {
            that.$element.trigger(slidEvent);
          }, 0);
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION);
    } else {
      $active.removeClass("active");
      $next.addClass("active");
      this.sliding = false;
      this.$element.trigger(slidEvent);
    }

    isCycling && this.cycle();

    return this;
  };

  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.carousel");
      var options = $.extend(
        {},
        Carousel.DEFAULTS,
        $this.data(),
        typeof option == "object" && option
      );
      var action = typeof option == "string" ? option : options.slide;

      if (!data)
        $this.data("bs.carousel", (data = new Carousel(this, options)));
      if (typeof option == "number") data.to(option);
      else if (action) data[action]();
      else if (options.interval) data.pause().cycle();
    });
  }

  var old = $.fn.carousel;

  $.fn.carousel = Plugin;
  $.fn.carousel.Constructor = Carousel;

  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old;
    return this;
  };

  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href;
    var $this = $(this);
    var $target = $(
      $this.attr("data-target") ||
        ((href = $this.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, ""))
    ); // strip for ie7
    if (!$target.hasClass("carousel")) return;
    var options = $.extend({}, $target.data(), $this.data());
    var slideIndex = $this.attr("data-slide-to");
    if (slideIndex) options.interval = false;

    Plugin.call($target, options);

    if (slideIndex) {
      $target.data("bs.carousel").to(slideIndex);
    }

    e.preventDefault();
  };

  $(document)
    .on("click.bs.carousel.data-api", "[data-slide]", clickHandler)
    .on("click.bs.carousel.data-api", "[data-slide-to]", clickHandler);

  $(window).on("load", function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this);
      Plugin.call($carousel, $carousel.data());
    });
  });
})(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+(function ($) {
  "use strict";

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Collapse.DEFAULTS, options);
    this.$trigger = $(
      '[data-toggle="collapse"][href="#' +
        element.id +
        '"],' +
        '[data-toggle="collapse"][data-target="#' +
        element.id +
        '"]'
    );
    this.transitioning = null;

    if (this.options.parent) {
      this.$parent = this.getParent();
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger);
    }

    if (this.options.toggle) this.toggle();
  };

  Collapse.VERSION = "3.3.7";

  Collapse.TRANSITION_DURATION = 350;

  Collapse.DEFAULTS = {
    toggle: true,
  };

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass("width");
    return hasWidth ? "width" : "height";
  };

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass("in")) return;

    var activesData;
    var actives =
      this.$parent &&
      this.$parent.children(".panel").children(".in, .collapsing");

    if (actives && actives.length) {
      activesData = actives.data("bs.collapse");
      if (activesData && activesData.transitioning) return;
    }

    var startEvent = $.Event("show.bs.collapse");
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented()) return;

    if (actives && actives.length) {
      Plugin.call(actives, "hide");
      activesData || actives.data("bs.collapse", null);
    }

    var dimension = this.dimension();

    this.$element
      .removeClass("collapse")
      .addClass("collapsing")
      [dimension](0)
      .attr("aria-expanded", true);

    this.$trigger.removeClass("collapsed").attr("aria-expanded", true);

    this.transitioning = 1;

    var complete = function () {
      this.$element
        .removeClass("collapsing")
        .addClass("collapse in")
        [dimension]("");
      this.transitioning = 0;
      this.$element.trigger("shown.bs.collapse");
    };

    if (!$.support.transition) return complete.call(this);

    var scrollSize = $.camelCase(["scroll", dimension].join("-"));

    this.$element
      .one("bsTransitionEnd", $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
      [dimension](this.$element[0][scrollSize]);
  };

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass("in")) return;

    var startEvent = $.Event("hide.bs.collapse");
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented()) return;

    var dimension = this.dimension();

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight;

    this.$element
      .addClass("collapsing")
      .removeClass("collapse in")
      .attr("aria-expanded", false);

    this.$trigger.addClass("collapsed").attr("aria-expanded", false);

    this.transitioning = 1;

    var complete = function () {
      this.transitioning = 0;
      this.$element
        .removeClass("collapsing")
        .addClass("collapse")
        .trigger("hidden.bs.collapse");
    };

    if (!$.support.transition) return complete.call(this);

    this.$element[dimension](0)
      .one("bsTransitionEnd", $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION);
  };

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass("in") ? "hide" : "show"]();
  };

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find(
        '[data-toggle="collapse"][data-parent="' + this.options.parent + '"]'
      )
      .each(
        $.proxy(function (i, element) {
          var $element = $(element);
          this.addAriaAndCollapsedClass(
            getTargetFromTrigger($element),
            $element
          );
        }, this)
      )
      .end();
  };

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass("in");

    $element.attr("aria-expanded", isOpen);
    $trigger.toggleClass("collapsed", !isOpen).attr("aria-expanded", isOpen);
  };

  function getTargetFromTrigger($trigger) {
    var href;
    var target =
      $trigger.attr("data-target") ||
      ((href = $trigger.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, "")); // strip for ie7

    return $(target);
  }

  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.collapse");
      var options = $.extend(
        {},
        Collapse.DEFAULTS,
        $this.data(),
        typeof option == "object" && option
      );

      if (!data && options.toggle && /show|hide/.test(option))
        options.toggle = false;
      if (!data)
        $this.data("bs.collapse", (data = new Collapse(this, options)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.collapse;

  $.fn.collapse = Plugin;
  $.fn.collapse.Constructor = Collapse;

  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old;
    return this;
  };

  // COLLAPSE DATA-API
  // =================

  $(document).on(
    "click.bs.collapse.data-api",
    '[data-toggle="collapse"]',
    function (e) {
      var $this = $(this);

      if (!$this.attr("data-target")) e.preventDefault();

      var $target = getTargetFromTrigger($this);
      var data = $target.data("bs.collapse");
      var option = data ? "toggle" : $this.data();

      Plugin.call($target, option);
    }
  );
})(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = ".dropdown-backdrop";
  var toggle = '[data-toggle="dropdown"]';
  var Dropdown = function (element) {
    $(element).on("click.bs.dropdown", this.toggle);
  };

  Dropdown.VERSION = "3.3.7";

  function getParent($this) {
    var selector = $this.attr("data-target");

    if (!selector) {
      selector = $this.attr("href");
      selector =
        selector &&
        /#[A-Za-z]/.test(selector) &&
        selector.replace(/.*(?=#[^\s]*$)/, ""); // strip for ie7
    }

    var $parent = selector && $(selector);

    return $parent && $parent.length ? $parent : $this.parent();
  }

  function clearMenus(e) {
    if (e && e.which === 3) return;
    $(backdrop).remove();
    $(toggle).each(function () {
      var $this = $(this);
      var $parent = getParent($this);
      var relatedTarget = { relatedTarget: this };

      if (!$parent.hasClass("open")) return;

      if (
        e &&
        e.type == "click" &&
        /input|textarea/i.test(e.target.tagName) &&
        $.contains($parent[0], e.target)
      )
        return;

      $parent.trigger((e = $.Event("hide.bs.dropdown", relatedTarget)));

      if (e.isDefaultPrevented()) return;

      $this.attr("aria-expanded", "false");
      $parent
        .removeClass("open")
        .trigger($.Event("hidden.bs.dropdown", relatedTarget));
    });
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this);

    if ($this.is(".disabled, :disabled")) return;

    var $parent = getParent($this);
    var isActive = $parent.hasClass("open");

    clearMenus();

    if (!isActive) {
      if (
        "ontouchstart" in document.documentElement &&
        !$parent.closest(".navbar-nav").length
      ) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement("div"))
          .addClass("dropdown-backdrop")
          .insertAfter($(this))
          .on("click", clearMenus);
      }

      var relatedTarget = { relatedTarget: this };
      $parent.trigger((e = $.Event("show.bs.dropdown", relatedTarget)));

      if (e.isDefaultPrevented()) return;

      $this.trigger("focus").attr("aria-expanded", "true");

      $parent
        .toggleClass("open")
        .trigger($.Event("shown.bs.dropdown", relatedTarget));
    }

    return false;
  };

  Dropdown.prototype.keydown = function (e) {
    if (
      !/(38|40|27|32)/.test(e.which) ||
      /input|textarea/i.test(e.target.tagName)
    )
      return;

    var $this = $(this);

    e.preventDefault();
    e.stopPropagation();

    if ($this.is(".disabled, :disabled")) return;

    var $parent = getParent($this);
    var isActive = $parent.hasClass("open");

    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {
      if (e.which == 27) $parent.find(toggle).trigger("focus");
      return $this.trigger("click");
    }

    var desc = " li:not(.disabled):visible a";
    var $items = $parent.find(".dropdown-menu" + desc);

    if (!$items.length) return;

    var index = $items.index(e.target);

    if (e.which == 38 && index > 0) index--; // up
    if (e.which == 40 && index < $items.length - 1) index++; // down
    if (!~index) index = 0;

    $items.eq(index).trigger("focus");
  };

  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.dropdown");

      if (!data) $this.data("bs.dropdown", (data = new Dropdown(this)));
      if (typeof option == "string") data[option].call($this);
    });
  }

  var old = $.fn.dropdown;

  $.fn.dropdown = Plugin;
  $.fn.dropdown.Constructor = Dropdown;

  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old;
    return this;
  };

  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on("click.bs.dropdown.data-api", clearMenus)
    .on("click.bs.dropdown.data-api", ".dropdown form", function (e) {
      e.stopPropagation();
    })
    .on("click.bs.dropdown.data-api", toggle, Dropdown.prototype.toggle)
    .on("keydown.bs.dropdown.data-api", toggle, Dropdown.prototype.keydown)
    .on(
      "keydown.bs.dropdown.data-api",
      ".dropdown-menu",
      Dropdown.prototype.keydown
    );
})(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options = options;
    this.$body = $(document.body);
    this.$element = $(element);
    this.$dialog = this.$element.find(".modal-dialog");
    this.$backdrop = null;
    this.isShown = null;
    this.originalBodyPad = null;
    this.scrollbarWidth = 0;
    this.ignoreBackdropClick = false;

    if (this.options.remote) {
      this.$element.find(".modal-content").load(
        this.options.remote,
        $.proxy(function () {
          this.$element.trigger("loaded.bs.modal");
        }, this)
      );
    }
  };

  Modal.VERSION = "3.3.7";

  Modal.TRANSITION_DURATION = 300;
  Modal.BACKDROP_TRANSITION_DURATION = 150;

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true,
  };

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget);
  };

  Modal.prototype.show = function (_relatedTarget) {
    var that = this;
    var e = $.Event("show.bs.modal", { relatedTarget: _relatedTarget });

    this.$element.trigger(e);

    if (this.isShown || e.isDefaultPrevented()) return;

    this.isShown = true;

    this.checkScrollbar();
    this.setScrollbar();
    this.$body.addClass("modal-open");

    this.escape();
    this.resize();

    this.$element.on(
      "click.dismiss.bs.modal",
      '[data-dismiss="modal"]',
      $.proxy(this.hide, this)
    );

    this.$dialog.on("mousedown.dismiss.bs.modal", function () {
      that.$element.one("mouseup.dismiss.bs.modal", function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;
      });
    });

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass("fade");

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body); // don't move modals dom position
      }

      that.$element.show().scrollTop(0);

      that.adjustDialog();

      if (transition) {
        that.$element[0].offsetWidth; // force reflow
      }

      that.$element.addClass("in");

      that.enforceFocus();

      var e = $.Event("shown.bs.modal", { relatedTarget: _relatedTarget });

      transition
        ? that.$dialog // wait for modal to slide in
            .one("bsTransitionEnd", function () {
              that.$element.trigger("focus").trigger(e);
            })
            .emulateTransitionEnd(Modal.TRANSITION_DURATION)
        : that.$element.trigger("focus").trigger(e);
    });
  };

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault();

    e = $.Event("hide.bs.modal");

    this.$element.trigger(e);

    if (!this.isShown || e.isDefaultPrevented()) return;

    this.isShown = false;

    this.escape();
    this.resize();

    $(document).off("focusin.bs.modal");

    this.$element
      .removeClass("in")
      .off("click.dismiss.bs.modal")
      .off("mouseup.dismiss.bs.modal");

    this.$dialog.off("mousedown.dismiss.bs.modal");

    $.support.transition && this.$element.hasClass("fade")
      ? this.$element
          .one("bsTransitionEnd", $.proxy(this.hideModal, this))
          .emulateTransitionEnd(Modal.TRANSITION_DURATION)
      : this.hideModal();
  };

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off("focusin.bs.modal") // guard against infinite focus loop
      .on(
        "focusin.bs.modal",
        $.proxy(function (e) {
          if (
            document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length
          ) {
            this.$element.trigger("focus");
          }
        }, this)
      );
  };

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on(
        "keydown.dismiss.bs.modal",
        $.proxy(function (e) {
          e.which == 27 && this.hide();
        }, this)
      );
    } else if (!this.isShown) {
      this.$element.off("keydown.dismiss.bs.modal");
    }
  };

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on("resize.bs.modal", $.proxy(this.handleUpdate, this));
    } else {
      $(window).off("resize.bs.modal");
    }
  };

  Modal.prototype.hideModal = function () {
    var that = this;
    this.$element.hide();
    this.backdrop(function () {
      that.$body.removeClass("modal-open");
      that.resetAdjustments();
      that.resetScrollbar();
      that.$element.trigger("hidden.bs.modal");
    });
  };

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove();
    this.$backdrop = null;
  };

  Modal.prototype.backdrop = function (callback) {
    var that = this;
    var animate = this.$element.hasClass("fade") ? "fade" : "";

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate;

      this.$backdrop = $(document.createElement("div"))
        .addClass("modal-backdrop " + animate)
        .appendTo(this.$body);

      this.$element.on(
        "click.dismiss.bs.modal",
        $.proxy(function (e) {
          if (this.ignoreBackdropClick) {
            this.ignoreBackdropClick = false;
            return;
          }
          if (e.target !== e.currentTarget) return;
          this.options.backdrop == "static"
            ? this.$element[0].focus()
            : this.hide();
        }, this)
      );

      if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow

      this.$backdrop.addClass("in");

      if (!callback) return;

      doAnimate
        ? this.$backdrop
            .one("bsTransitionEnd", callback)
            .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION)
        : callback();
    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass("in");

      var callbackRemove = function () {
        that.removeBackdrop();
        callback && callback();
      };
      $.support.transition && this.$element.hasClass("fade")
        ? this.$backdrop
            .one("bsTransitionEnd", callbackRemove)
            .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION)
        : callbackRemove();
    } else if (callback) {
      callback();
    }
  };

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog();
  };

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing =
      this.$element[0].scrollHeight > document.documentElement.clientHeight;

    this.$element.css({
      paddingLeft:
        !this.bodyIsOverflowing && modalIsOverflowing
          ? this.scrollbarWidth
          : "",
      paddingRight:
        this.bodyIsOverflowing && !modalIsOverflowing
          ? this.scrollbarWidth
          : "",
    });
  };

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: "",
      paddingRight: "",
    });
  };

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth;
    if (!fullWindowWidth) {
      // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect();
      fullWindowWidth =
        documentElementRect.right - Math.abs(documentElementRect.left);
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
    this.scrollbarWidth = this.measureScrollbar();
  };

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt(this.$body.css("padding-right") || 0, 10);
    this.originalBodyPad = document.body.style.paddingRight || "";
    if (this.bodyIsOverflowing)
      this.$body.css("padding-right", bodyPad + this.scrollbarWidth);
  };

  Modal.prototype.resetScrollbar = function () {
    this.$body.css("padding-right", this.originalBodyPad);
  };

  Modal.prototype.measureScrollbar = function () {
    // thx walsh
    var scrollDiv = document.createElement("div");
    scrollDiv.className = "modal-scrollbar-measure";
    this.$body.append(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    this.$body[0].removeChild(scrollDiv);
    return scrollbarWidth;
  };

  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.modal");
      var options = $.extend(
        {},
        Modal.DEFAULTS,
        $this.data(),
        typeof option == "object" && option
      );

      if (!data) $this.data("bs.modal", (data = new Modal(this, options)));
      if (typeof option == "string") data[option](_relatedTarget);
      else if (options.show) data.show(_relatedTarget);
    });
  }

  var old = $.fn.modal;

  $.fn.modal = Plugin;
  $.fn.modal.Constructor = Modal;

  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old;
    return this;
  };

  // MODAL DATA-API
  // ==============

  $(document).on(
    "click.bs.modal.data-api",
    '[data-toggle="modal"]',
    function (e) {
      var $this = $(this);
      var href = $this.attr("href");
      var $target = $(
        $this.attr("data-target") ||
          (href && href.replace(/.*(?=#[^\s]+$)/, ""))
      ); // strip for ie7
      var option = $target.data("bs.modal")
        ? "toggle"
        : $.extend(
            { remote: !/#/.test(href) && href },
            $target.data(),
            $this.data()
          );

      if ($this.is("a")) e.preventDefault();

      $target.one("show.bs.modal", function (showEvent) {
        if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown
        $target.one("hidden.bs.modal", function () {
          $this.is(":visible") && $this.trigger("focus");
        });
      });
      Plugin.call($target, option, this);
    }
  );
})(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type = null;
    this.options = null;
    this.enabled = null;
    this.timeout = null;
    this.hoverState = null;
    this.$element = null;
    this.inState = null;

    this.init("tooltip", element, options);
  };

  Tooltip.VERSION = "3.3.7";

  Tooltip.TRANSITION_DURATION = 150;

  Tooltip.DEFAULTS = {
    animation: true,
    placement: "top",
    selector: false,
    template:
      '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: "hover focus",
    title: "",
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: "body",
      padding: 0,
    },
  };

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled = true;
    this.type = type;
    this.$element = $(element);
    this.options = this.getOptions(options);
    this.$viewport =
      this.options.viewport &&
      $(
        $.isFunction(this.options.viewport)
          ? this.options.viewport.call(this, this.$element)
          : this.options.viewport.selector || this.options.viewport
      );
    this.inState = { click: false, hover: false, focus: false };

    if (
      this.$element[0] instanceof document.constructor &&
      !this.options.selector
    ) {
      throw new Error(
        "`selector` option must be specified when initializing " +
          this.type +
          " on the window.document object!"
      );
    }

    var triggers = this.options.trigger.split(" ");

    for (var i = triggers.length; i--; ) {
      var trigger = triggers[i];

      if (trigger == "click") {
        this.$element.on(
          "click." + this.type,
          this.options.selector,
          $.proxy(this.toggle, this)
        );
      } else if (trigger != "manual") {
        var eventIn = trigger == "hover" ? "mouseenter" : "focusin";
        var eventOut = trigger == "hover" ? "mouseleave" : "focusout";

        this.$element.on(
          eventIn + "." + this.type,
          this.options.selector,
          $.proxy(this.enter, this)
        );
        this.$element.on(
          eventOut + "." + this.type,
          this.options.selector,
          $.proxy(this.leave, this)
        );
      }
    }

    this.options.selector
      ? (this._options = $.extend({}, this.options, {
          trigger: "manual",
          selector: "",
        }))
      : this.fixTitle();
  };

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS;
  };

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options);

    if (options.delay && typeof options.delay == "number") {
      options.delay = {
        show: options.delay,
        hide: options.delay,
      };
    }

    return options;
  };

  Tooltip.prototype.getDelegateOptions = function () {
    var options = {};
    var defaults = this.getDefaults();

    this._options &&
      $.each(this._options, function (key, value) {
        if (defaults[key] != value) options[key] = value;
      });

    return options;
  };

  Tooltip.prototype.enter = function (obj) {
    var self =
      obj instanceof this.constructor
        ? obj
        : $(obj.currentTarget).data("bs." + this.type);

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
      $(obj.currentTarget).data("bs." + this.type, self);
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == "focusin" ? "focus" : "hover"] = true;
    }

    if (self.tip().hasClass("in") || self.hoverState == "in") {
      self.hoverState = "in";
      return;
    }

    clearTimeout(self.timeout);

    self.hoverState = "in";

    if (!self.options.delay || !self.options.delay.show) return self.show();

    self.timeout = setTimeout(function () {
      if (self.hoverState == "in") self.show();
    }, self.options.delay.show);
  };

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true;
    }

    return false;
  };

  Tooltip.prototype.leave = function (obj) {
    var self =
      obj instanceof this.constructor
        ? obj
        : $(obj.currentTarget).data("bs." + this.type);

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
      $(obj.currentTarget).data("bs." + this.type, self);
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == "focusout" ? "focus" : "hover"] = false;
    }

    if (self.isInStateTrue()) return;

    clearTimeout(self.timeout);

    self.hoverState = "out";

    if (!self.options.delay || !self.options.delay.hide) return self.hide();

    self.timeout = setTimeout(function () {
      if (self.hoverState == "out") self.hide();
    }, self.options.delay.hide);
  };

  Tooltip.prototype.show = function () {
    var e = $.Event("show.bs." + this.type);

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e);

      var inDom = $.contains(
        this.$element[0].ownerDocument.documentElement,
        this.$element[0]
      );
      if (e.isDefaultPrevented() || !inDom) return;
      var that = this;

      var $tip = this.tip();

      var tipId = this.getUID(this.type);

      this.setContent();
      $tip.attr("id", tipId);
      this.$element.attr("aria-describedby", tipId);

      if (this.options.animation) $tip.addClass("fade");

      var placement =
        typeof this.options.placement == "function"
          ? this.options.placement.call(this, $tip[0], this.$element[0])
          : this.options.placement;

      var autoToken = /\s?auto?\s?/i;
      var autoPlace = autoToken.test(placement);
      if (autoPlace) placement = placement.replace(autoToken, "") || "top";

      $tip
        .detach()
        .css({ top: 0, left: 0, display: "block" })
        .addClass(placement)
        .data("bs." + this.type, this);

      this.options.container
        ? $tip.appendTo(this.options.container)
        : $tip.insertAfter(this.$element);
      this.$element.trigger("inserted.bs." + this.type);

      var pos = this.getPosition();
      var actualWidth = $tip[0].offsetWidth;
      var actualHeight = $tip[0].offsetHeight;

      if (autoPlace) {
        var orgPlacement = placement;
        var viewportDim = this.getPosition(this.$viewport);

        placement =
          placement == "bottom" &&
          pos.bottom + actualHeight > viewportDim.bottom
            ? "top"
            : placement == "top" && pos.top - actualHeight < viewportDim.top
            ? "bottom"
            : placement == "right" &&
              pos.right + actualWidth > viewportDim.width
            ? "left"
            : placement == "left" && pos.left - actualWidth < viewportDim.left
            ? "right"
            : placement;

        $tip.removeClass(orgPlacement).addClass(placement);
      }

      var calculatedOffset = this.getCalculatedOffset(
        placement,
        pos,
        actualWidth,
        actualHeight
      );

      this.applyPlacement(calculatedOffset, placement);

      var complete = function () {
        var prevHoverState = that.hoverState;
        that.$element.trigger("shown.bs." + that.type);
        that.hoverState = null;

        if (prevHoverState == "out") that.leave(that);
      };

      $.support.transition && this.$tip.hasClass("fade")
        ? $tip
            .one("bsTransitionEnd", complete)
            .emulateTransitionEnd(Tooltip.TRANSITION_DURATION)
        : complete();
    }
  };

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip = this.tip();
    var width = $tip[0].offsetWidth;
    var height = $tip[0].offsetHeight;

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css("margin-top"), 10);
    var marginLeft = parseInt($tip.css("margin-left"), 10);

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop)) marginTop = 0;
    if (isNaN(marginLeft)) marginLeft = 0;

    offset.top += marginTop;
    offset.left += marginLeft;

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset(
      $tip[0],
      $.extend(
        {
          using: function (props) {
            $tip.css({
              top: Math.round(props.top),
              left: Math.round(props.left),
            });
          },
        },
        offset
      ),
      0
    );

    $tip.addClass("in");

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth = $tip[0].offsetWidth;
    var actualHeight = $tip[0].offsetHeight;

    if (placement == "top" && actualHeight != height) {
      offset.top = offset.top + height - actualHeight;
    }

    var delta = this.getViewportAdjustedDelta(
      placement,
      offset,
      actualWidth,
      actualHeight
    );

    if (delta.left) offset.left += delta.left;
    else offset.top += delta.top;

    var isVertical = /top|bottom/.test(placement);
    var arrowDelta = isVertical
      ? delta.left * 2 - width + actualWidth
      : delta.top * 2 - height + actualHeight;
    var arrowOffsetPosition = isVertical ? "offsetWidth" : "offsetHeight";

    $tip.offset(offset);
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);
  };

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? "left" : "top", 50 * (1 - delta / dimension) + "%")
      .css(isVertical ? "top" : "left", "");
  };

  Tooltip.prototype.setContent = function () {
    var $tip = this.tip();
    var title = this.getTitle();

    $tip.find(".tooltip-inner")[this.options.html ? "html" : "text"](title);
    $tip.removeClass("fade in top bottom left right");
  };

  Tooltip.prototype.hide = function (callback) {
    var that = this;
    var $tip = $(this.$tip);
    var e = $.Event("hide.bs." + this.type);

    function complete() {
      if (that.hoverState != "in") $tip.detach();
      if (that.$element) {
        // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr("aria-describedby")
          .trigger("hidden.bs." + that.type);
      }
      callback && callback();
    }

    this.$element.trigger(e);

    if (e.isDefaultPrevented()) return;

    $tip.removeClass("in");

    $.support.transition && $tip.hasClass("fade")
      ? $tip
          .one("bsTransitionEnd", complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION)
      : complete();

    this.hoverState = null;

    return this;
  };

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element;
    if ($e.attr("title") || typeof $e.attr("data-original-title") != "string") {
      $e.attr("data-original-title", $e.attr("title") || "").attr("title", "");
    }
  };

  Tooltip.prototype.hasContent = function () {
    return this.getTitle();
  };

  Tooltip.prototype.getPosition = function ($element) {
    $element = $element || this.$element;

    var el = $element[0];
    var isBody = el.tagName == "BODY";

    var elRect = el.getBoundingClientRect();
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, {
        width: elRect.right - elRect.left,
        height: elRect.bottom - elRect.top,
      });
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement;
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset = isBody
      ? { top: 0, left: 0 }
      : isSvg
      ? null
      : $element.offset();
    var scroll = {
      scroll: isBody
        ? document.documentElement.scrollTop || document.body.scrollTop
        : $element.scrollTop(),
    };
    var outerDims = isBody
      ? { width: $(window).width(), height: $(window).height() }
      : null;

    return $.extend({}, elRect, scroll, outerDims, elOffset);
  };

  Tooltip.prototype.getCalculatedOffset = function (
    placement,
    pos,
    actualWidth,
    actualHeight
  ) {
    return placement == "bottom"
      ? {
          top: pos.top + pos.height,
          left: pos.left + pos.width / 2 - actualWidth / 2,
        }
      : placement == "top"
      ? {
          top: pos.top - actualHeight,
          left: pos.left + pos.width / 2 - actualWidth / 2,
        }
      : placement == "left"
      ? {
          top: pos.top + pos.height / 2 - actualHeight / 2,
          left: pos.left - actualWidth,
        }
      : /* placement == 'right' */ {
          top: pos.top + pos.height / 2 - actualHeight / 2,
          left: pos.left + pos.width,
        };
  };

  Tooltip.prototype.getViewportAdjustedDelta = function (
    placement,
    pos,
    actualWidth,
    actualHeight
  ) {
    var delta = { top: 0, left: 0 };
    if (!this.$viewport) return delta;

    var viewportPadding =
      (this.options.viewport && this.options.viewport.padding) || 0;
    var viewportDimensions = this.getPosition(this.$viewport);

    if (/right|left/.test(placement)) {
      var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;
      var bottomEdgeOffset =
        pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;
      if (topEdgeOffset < viewportDimensions.top) {
        // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset;
      } else if (
        bottomEdgeOffset >
        viewportDimensions.top + viewportDimensions.height
      ) {
        // bottom overflow
        delta.top =
          viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;
      }
    } else {
      var leftEdgeOffset = pos.left - viewportPadding;
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth;
      if (leftEdgeOffset < viewportDimensions.left) {
        // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset;
      } else if (rightEdgeOffset > viewportDimensions.right) {
        // right overflow
        delta.left =
          viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;
      }
    }

    return delta;
  };

  Tooltip.prototype.getTitle = function () {
    var title;
    var $e = this.$element;
    var o = this.options;

    title =
      $e.attr("data-original-title") ||
      (typeof o.title == "function" ? o.title.call($e[0]) : o.title);

    return title;
  };

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000);
    while (document.getElementById(prefix));
    return prefix;
  };

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template);
      if (this.$tip.length != 1) {
        throw new Error(
          this.type +
            " `template` option must consist of exactly 1 top-level element!"
        );
      }
    }
    return this.$tip;
  };

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow"));
  };

  Tooltip.prototype.enable = function () {
    this.enabled = true;
  };

  Tooltip.prototype.disable = function () {
    this.enabled = false;
  };

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled;
  };

  Tooltip.prototype.toggle = function (e) {
    var self = this;
    if (e) {
      self = $(e.currentTarget).data("bs." + this.type);
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions());
        $(e.currentTarget).data("bs." + this.type, self);
      }
    }

    if (e) {
      self.inState.click = !self.inState.click;
      if (self.isInStateTrue()) self.enter(self);
      else self.leave(self);
    } else {
      self.tip().hasClass("in") ? self.leave(self) : self.enter(self);
    }
  };

  Tooltip.prototype.destroy = function () {
    var that = this;
    clearTimeout(this.timeout);
    this.hide(function () {
      that.$element.off("." + that.type).removeData("bs." + that.type);
      if (that.$tip) {
        that.$tip.detach();
      }
      that.$tip = null;
      that.$arrow = null;
      that.$viewport = null;
      that.$element = null;
    });
  };

  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.tooltip");
      var options = typeof option == "object" && option;

      if (!data && /destroy|hide/.test(option)) return;
      if (!data) $this.data("bs.tooltip", (data = new Tooltip(this, options)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.tooltip;

  $.fn.tooltip = Plugin;
  $.fn.tooltip.Constructor = Tooltip;

  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old;
    return this;
  };
})(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init("popover", element, options);
  };

  if (!$.fn.tooltip) throw new Error("Popover requires tooltip.js");

  Popover.VERSION = "3.3.7";

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: "right",
    trigger: "click",
    content: "",
    template:
      '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
  });

  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);

  Popover.prototype.constructor = Popover;

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS;
  };

  Popover.prototype.setContent = function () {
    var $tip = this.tip();
    var title = this.getTitle();
    var content = this.getContent();

    $tip.find(".popover-title")[this.options.html ? "html" : "text"](title);
    $tip
      .find(".popover-content")
      .children()
      .detach()
      .end() // we use append for html objects to maintain js events
      [
        this.options.html
          ? typeof content == "string"
            ? "html"
            : "append"
          : "text"
      ](content);

    $tip.removeClass("fade top bottom left right in");

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find(".popover-title").html()) $tip.find(".popover-title").hide();
  };

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent();
  };

  Popover.prototype.getContent = function () {
    var $e = this.$element;
    var o = this.options;

    return (
      $e.attr("data-content") ||
      (typeof o.content == "function" ? o.content.call($e[0]) : o.content)
    );
  };

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find(".arrow"));
  };

  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.popover");
      var options = typeof option == "object" && option;

      if (!data && /destroy|hide/.test(option)) return;
      if (!data) $this.data("bs.popover", (data = new Popover(this, options)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.popover;

  $.fn.popover = Plugin;
  $.fn.popover.Constructor = Popover;

  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old;
    return this;
  };
})(jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body = $(document.body);
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element);
    this.options = $.extend({}, ScrollSpy.DEFAULTS, options);
    this.selector = (this.options.target || "") + " .nav li > a";
    this.offsets = [];
    this.targets = [];
    this.activeTarget = null;
    this.scrollHeight = 0;

    this.$scrollElement.on("scroll.bs.scrollspy", $.proxy(this.process, this));
    this.refresh();
    this.process();
  }

  ScrollSpy.VERSION = "3.3.7";

  ScrollSpy.DEFAULTS = {
    offset: 10,
  };

  ScrollSpy.prototype.getScrollHeight = function () {
    return (
      this.$scrollElement[0].scrollHeight ||
      Math.max(
        this.$body[0].scrollHeight,
        document.documentElement.scrollHeight
      )
    );
  };

  ScrollSpy.prototype.refresh = function () {
    var that = this;
    var offsetMethod = "offset";
    var offsetBase = 0;

    this.offsets = [];
    this.targets = [];
    this.scrollHeight = this.getScrollHeight();

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = "position";
      offsetBase = this.$scrollElement.scrollTop();
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el = $(this);
        var href = $el.data("target") || $el.attr("href");
        var $href = /^#./.test(href) && $(href);

        return (
          ($href &&
            $href.length &&
            $href.is(":visible") && [
              [$href[offsetMethod]().top + offsetBase, href],
            ]) ||
          null
        );
      })
      .sort(function (a, b) {
        return a[0] - b[0];
      })
      .each(function () {
        that.offsets.push(this[0]);
        that.targets.push(this[1]);
      });
  };

  ScrollSpy.prototype.process = function () {
    var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;
    var scrollHeight = this.getScrollHeight();
    var maxScroll =
      this.options.offset + scrollHeight - this.$scrollElement.height();
    var offsets = this.offsets;
    var targets = this.targets;
    var activeTarget = this.activeTarget;
    var i;

    if (this.scrollHeight != scrollHeight) {
      this.refresh();
    }

    if (scrollTop >= maxScroll) {
      return (
        activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
      );
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null;
      return this.clear();
    }

    for (i = offsets.length; i--; ) {
      activeTarget != targets[i] &&
        scrollTop >= offsets[i] &&
        (offsets[i + 1] === undefined || scrollTop < offsets[i + 1]) &&
        this.activate(targets[i]);
    }
  };

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target;

    this.clear();

    var selector =
      this.selector +
      '[data-target="' +
      target +
      '"],' +
      this.selector +
      '[href="' +
      target +
      '"]';

    var active = $(selector).parents("li").addClass("active");

    if (active.parent(".dropdown-menu").length) {
      active = active.closest("li.dropdown").addClass("active");
    }

    active.trigger("activate.bs.scrollspy");
  };

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, ".active")
      .removeClass("active");
  };

  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.scrollspy");
      var options = typeof option == "object" && option;

      if (!data)
        $this.data("bs.scrollspy", (data = new ScrollSpy(this, options)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.scrollspy;

  $.fn.scrollspy = Plugin;
  $.fn.scrollspy.Constructor = ScrollSpy;

  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old;
    return this;
  };

  // SCROLLSPY DATA-API
  // ==================

  $(window).on("load.bs.scrollspy.data-api", function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this);
      Plugin.call($spy, $spy.data());
    });
  });
})(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element);
    // jscs:enable requireDollarBeforejQueryAssignment
  };

  Tab.VERSION = "3.3.7";

  Tab.TRANSITION_DURATION = 150;

  Tab.prototype.show = function () {
    var $this = this.element;
    var $ul = $this.closest("ul:not(.dropdown-menu)");
    var selector = $this.data("target");

    if (!selector) {
      selector = $this.attr("href");
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ""); // strip for ie7
    }

    if ($this.parent("li").hasClass("active")) return;

    var $previous = $ul.find(".active:last a");
    var hideEvent = $.Event("hide.bs.tab", {
      relatedTarget: $this[0],
    });
    var showEvent = $.Event("show.bs.tab", {
      relatedTarget: $previous[0],
    });

    $previous.trigger(hideEvent);
    $this.trigger(showEvent);

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented())
      return;

    var $target = $(selector);

    this.activate($this.closest("li"), $ul);
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: "hidden.bs.tab",
        relatedTarget: $this[0],
      });
      $this.trigger({
        type: "shown.bs.tab",
        relatedTarget: $previous[0],
      });
    });
  };

  Tab.prototype.activate = function (element, container, callback) {
    var $active = container.find("> .active");
    var transition =
      callback &&
      $.support.transition &&
      (($active.length && $active.hasClass("fade")) ||
        !!container.find("> .fade").length);

    function next() {
      $active
        .removeClass("active")
        .find("> .dropdown-menu > .active")
        .removeClass("active")
        .end()
        .find('[data-toggle="tab"]')
        .attr("aria-expanded", false);

      element
        .addClass("active")
        .find('[data-toggle="tab"]')
        .attr("aria-expanded", true);

      if (transition) {
        element[0].offsetWidth; // reflow for transition
        element.addClass("in");
      } else {
        element.removeClass("fade");
      }

      if (element.parent(".dropdown-menu").length) {
        element
          .closest("li.dropdown")
          .addClass("active")
          .end()
          .find('[data-toggle="tab"]')
          .attr("aria-expanded", true);
      }

      callback && callback();
    }

    $active.length && transition
      ? $active
          .one("bsTransitionEnd", next)
          .emulateTransitionEnd(Tab.TRANSITION_DURATION)
      : next();

    $active.removeClass("in");
  };

  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.tab");

      if (!data) $this.data("bs.tab", (data = new Tab(this)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.tab;

  $.fn.tab = Plugin;
  $.fn.tab.Constructor = Tab;

  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old;
    return this;
  };

  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault();
    Plugin.call($(this), "show");
  };

  $(document)
    .on("click.bs.tab.data-api", '[data-toggle="tab"]', clickHandler)
    .on("click.bs.tab.data-api", '[data-toggle="pill"]', clickHandler);
})(jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

+(function ($) {
  "use strict";

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options);

    this.$target = $(this.options.target)
      .on("scroll.bs.affix.data-api", $.proxy(this.checkPosition, this))
      .on(
        "click.bs.affix.data-api",
        $.proxy(this.checkPositionWithEventLoop, this)
      );

    this.$element = $(element);
    this.affixed = null;
    this.unpin = null;
    this.pinnedOffset = null;

    this.checkPosition();
  };

  Affix.VERSION = "3.3.7";

  Affix.RESET = "affix affix-top affix-bottom";

  Affix.DEFAULTS = {
    offset: 0,
    target: window,
  };

  Affix.prototype.getState = function (
    scrollHeight,
    height,
    offsetTop,
    offsetBottom
  ) {
    var scrollTop = this.$target.scrollTop();
    var position = this.$element.offset();
    var targetHeight = this.$target.height();

    if (offsetTop != null && this.affixed == "top")
      return scrollTop < offsetTop ? "top" : false;

    if (this.affixed == "bottom") {
      if (offsetTop != null)
        return scrollTop + this.unpin <= position.top ? false : "bottom";
      return scrollTop + targetHeight <= scrollHeight - offsetBottom
        ? false
        : "bottom";
    }

    var initializing = this.affixed == null;
    var colliderTop = initializing ? scrollTop : position.top;
    var colliderHeight = initializing ? targetHeight : height;

    if (offsetTop != null && scrollTop <= offsetTop) return "top";
    if (
      offsetBottom != null &&
      colliderTop + colliderHeight >= scrollHeight - offsetBottom
    )
      return "bottom";

    return false;
  };

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset;
    this.$element.removeClass(Affix.RESET).addClass("affix");
    var scrollTop = this.$target.scrollTop();
    var position = this.$element.offset();
    return (this.pinnedOffset = position.top - scrollTop);
  };

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1);
  };

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(":visible")) return;

    var height = this.$element.height();
    var offset = this.options.offset;
    var offsetTop = offset.top;
    var offsetBottom = offset.bottom;
    var scrollHeight = Math.max(
      $(document).height(),
      $(document.body).height()
    );

    if (typeof offset != "object") offsetBottom = offsetTop = offset;
    if (typeof offsetTop == "function") offsetTop = offset.top(this.$element);
    if (typeof offsetBottom == "function")
      offsetBottom = offset.bottom(this.$element);

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css("top", "");

      var affixType = "affix" + (affix ? "-" + affix : "");
      var e = $.Event(affixType + ".bs.affix");

      this.$element.trigger(e);

      if (e.isDefaultPrevented()) return;

      this.affixed = affix;
      this.unpin = affix == "bottom" ? this.getPinnedOffset() : null;

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace("affix", "affixed") + ".bs.affix");
    }

    if (affix == "bottom") {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom,
      });
    }
  };

  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data("bs.affix");
      var options = typeof option == "object" && option;

      if (!data) $this.data("bs.affix", (data = new Affix(this, options)));
      if (typeof option == "string") data[option]();
    });
  }

  var old = $.fn.affix;

  $.fn.affix = Plugin;
  $.fn.affix.Constructor = Affix;

  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old;
    return this;
  };

  // AFFIX DATA-API
  // ==============

  $(window).on("load", function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this);
      var data = $spy.data();

      data.offset = data.offset || {};

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;
      if (data.offsetTop != null) data.offset.top = data.offsetTop;

      Plugin.call($spy, data);
    });
  });
})(jQuery);
var _gsScope =
  "undefined" != typeof module && module.exports && "undefined" != typeof global
    ? global
    : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
  "use strict";
  _gsScope._gsDefine(
    "TweenMax",
    ["core.Animation", "core.SimpleTimeline", "TweenLite"],
    function (a, b, c) {
      var d = function (a) {
          var b,
            c = [],
            d = a.length;
          for (b = 0; b !== d; c.push(a[b++]));
          return c;
        },
        e = function (a, b, c) {
          var d,
            e,
            f = a.cycle;
          for (d in f)
            (e = f[d]),
              (a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length]);
          delete a.cycle;
        },
        f = function (a, b, d) {
          c.call(this, a, b, d),
            (this._cycle = 0),
            (this._yoyo = this.vars.yoyo === !0),
            (this._repeat = this.vars.repeat || 0),
            (this._repeatDelay = this.vars.repeatDelay || 0),
            (this._dirty = !0),
            (this.render = f.prototype.render);
        },
        g = 1e-10,
        h = c._internals,
        i = h.isSelector,
        j = h.isArray,
        k = (f.prototype = c.to({}, 0.1, {})),
        l = [];
      (f.version = "1.19.0"),
        (k.constructor = f),
        (k.kill()._gc = !1),
        (f.killTweensOf = f.killDelayedCallsTo = c.killTweensOf),
        (f.getTweensOf = c.getTweensOf),
        (f.lagSmoothing = c.lagSmoothing),
        (f.ticker = c.ticker),
        (f.render = c.render),
        (k.invalidate = function () {
          return (
            (this._yoyo = this.vars.yoyo === !0),
            (this._repeat = this.vars.repeat || 0),
            (this._repeatDelay = this.vars.repeatDelay || 0),
            this._uncache(!0),
            c.prototype.invalidate.call(this)
          );
        }),
        (k.updateTo = function (a, b) {
          var d,
            e = this.ratio,
            f = this.vars.immediateRender || a.immediateRender;
          b &&
            this._startTime < this._timeline._time &&
            ((this._startTime = this._timeline._time),
            this._uncache(!1),
            this._gc
              ? this._enabled(!0, !1)
              : this._timeline.insert(this, this._startTime - this._delay));
          for (d in a) this.vars[d] = a[d];
          if (this._initted || f)
            if (b) (this._initted = !1), f && this.render(0, !0, !0);
            else if (
              (this._gc && this._enabled(!0, !1),
              this._notifyPluginsOfEnabled &&
                this._firstPT &&
                c._onPluginEvent("_onDisable", this),
              this._time / this._duration > 0.998)
            ) {
              var g = this._totalTime;
              this.render(0, !0, !1),
                (this._initted = !1),
                this.render(g, !0, !1);
            } else if (
              ((this._initted = !1), this._init(), this._time > 0 || f)
            )
              for (var h, i = 1 / (1 - e), j = this._firstPT; j; )
                (h = j.s + j.c), (j.c *= i), (j.s = h - j.c), (j = j._next);
          return this;
        }),
        (k.render = function (a, b, c) {
          this._initted ||
            (0 === this._duration && this.vars.repeat && this.invalidate());
          var d,
            e,
            f,
            i,
            j,
            k,
            l,
            m,
            n = this._dirty ? this.totalDuration() : this._totalDuration,
            o = this._time,
            p = this._totalTime,
            q = this._cycle,
            r = this._duration,
            s = this._rawPrevTime;
          if (
            (a >= n - 1e-7
              ? ((this._totalTime = n),
                (this._cycle = this._repeat),
                this._yoyo && 0 !== (1 & this._cycle)
                  ? ((this._time = 0),
                    (this.ratio = this._ease._calcEnd
                      ? this._ease.getRatio(0)
                      : 0))
                  : ((this._time = r),
                    (this.ratio = this._ease._calcEnd
                      ? this._ease.getRatio(1)
                      : 1)),
                this._reversed ||
                  ((d = !0),
                  (e = "onComplete"),
                  (c = c || this._timeline.autoRemoveChildren)),
                0 === r &&
                  (this._initted || !this.vars.lazy || c) &&
                  (this._startTime === this._timeline._duration && (a = 0),
                  (0 > s ||
                    (0 >= a && a >= -1e-7) ||
                    (s === g && "isPause" !== this.data)) &&
                    s !== a &&
                    ((c = !0), s > g && (e = "onReverseComplete")),
                  (this._rawPrevTime = m = !b || a || s === a ? a : g)))
              : 1e-7 > a
              ? ((this._totalTime = this._time = this._cycle = 0),
                (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
                (0 !== p || (0 === r && s > 0)) &&
                  ((e = "onReverseComplete"), (d = this._reversed)),
                0 > a &&
                  ((this._active = !1),
                  0 === r &&
                    (this._initted || !this.vars.lazy || c) &&
                    (s >= 0 && (c = !0),
                    (this._rawPrevTime = m = !b || a || s === a ? a : g))),
                this._initted || (c = !0))
              : ((this._totalTime = this._time = a),
                0 !== this._repeat &&
                  ((i = r + this._repeatDelay),
                  (this._cycle = (this._totalTime / i) >> 0),
                  0 !== this._cycle &&
                    this._cycle === this._totalTime / i &&
                    a >= p &&
                    this._cycle--,
                  (this._time = this._totalTime - this._cycle * i),
                  this._yoyo &&
                    0 !== (1 & this._cycle) &&
                    (this._time = r - this._time),
                  this._time > r
                    ? (this._time = r)
                    : this._time < 0 && (this._time = 0)),
                this._easeType
                  ? ((j = this._time / r),
                    (k = this._easeType),
                    (l = this._easePower),
                    (1 === k || (3 === k && j >= 0.5)) && (j = 1 - j),
                    3 === k && (j *= 2),
                    1 === l
                      ? (j *= j)
                      : 2 === l
                      ? (j *= j * j)
                      : 3 === l
                      ? (j *= j * j * j)
                      : 4 === l && (j *= j * j * j * j),
                    1 === k
                      ? (this.ratio = 1 - j)
                      : 2 === k
                      ? (this.ratio = j)
                      : this._time / r < 0.5
                      ? (this.ratio = j / 2)
                      : (this.ratio = 1 - j / 2))
                  : (this.ratio = this._ease.getRatio(this._time / r))),
            o === this._time && !c && q === this._cycle)
          )
            return void (
              p !== this._totalTime &&
              this._onUpdate &&
              (b || this._callback("onUpdate"))
            );
          if (!this._initted) {
            if ((this._init(), !this._initted || this._gc)) return;
            if (
              !c &&
              this._firstPT &&
              ((this.vars.lazy !== !1 && this._duration) ||
                (this.vars.lazy && !this._duration))
            )
              return (
                (this._time = o),
                (this._totalTime = p),
                (this._rawPrevTime = s),
                (this._cycle = q),
                h.lazyTweens.push(this),
                void (this._lazy = [a, b])
              );
            this._time && !d
              ? (this.ratio = this._ease.getRatio(this._time / r))
              : d &&
                this._ease._calcEnd &&
                (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
          }
          for (
            this._lazy !== !1 && (this._lazy = !1),
              this._active ||
                (!this._paused &&
                  this._time !== o &&
                  a >= 0 &&
                  (this._active = !0)),
              0 === p &&
                (2 === this._initted && a > 0 && this._init(),
                this._startAt &&
                  (a >= 0
                    ? this._startAt.render(a, b, c)
                    : e || (e = "_dummyGS")),
                this.vars.onStart &&
                  (0 !== this._totalTime || 0 === r) &&
                  (b || this._callback("onStart"))),
              f = this._firstPT;
            f;

          )
            f.f
              ? f.t[f.p](f.c * this.ratio + f.s)
              : (f.t[f.p] = f.c * this.ratio + f.s),
              (f = f._next);
          this._onUpdate &&
            (0 > a &&
              this._startAt &&
              this._startTime &&
              this._startAt.render(a, b, c),
            b || ((this._totalTime !== p || e) && this._callback("onUpdate"))),
            this._cycle !== q &&
              (b ||
                this._gc ||
                (this.vars.onRepeat && this._callback("onRepeat"))),
            e &&
              (!this._gc || c) &&
              (0 > a &&
                this._startAt &&
                !this._onUpdate &&
                this._startTime &&
                this._startAt.render(a, b, c),
              d &&
                (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                (this._active = !1)),
              !b && this.vars[e] && this._callback(e),
              0 === r &&
                this._rawPrevTime === g &&
                m !== g &&
                (this._rawPrevTime = 0));
        }),
        (f.to = function (a, b, c) {
          return new f(a, b, c);
        }),
        (f.from = function (a, b, c) {
          return (
            (c.runBackwards = !0),
            (c.immediateRender = 0 != c.immediateRender),
            new f(a, b, c)
          );
        }),
        (f.fromTo = function (a, b, c, d) {
          return (
            (d.startAt = c),
            (d.immediateRender =
              0 != d.immediateRender && 0 != c.immediateRender),
            new f(a, b, d)
          );
        }),
        (f.staggerTo = f.allTo = function (a, b, g, h, k, m, n) {
          h = h || 0;
          var o,
            p,
            q,
            r,
            s = 0,
            t = [],
            u = function () {
              g.onComplete &&
                g.onComplete.apply(g.onCompleteScope || this, arguments),
                k.apply(n || g.callbackScope || this, m || l);
            },
            v = g.cycle,
            w = g.startAt && g.startAt.cycle;
          for (
            j(a) ||
              ("string" == typeof a && (a = c.selector(a) || a),
              i(a) && (a = d(a))),
              a = a || [],
              0 > h && ((a = d(a)), a.reverse(), (h *= -1)),
              o = a.length - 1,
              q = 0;
            o >= q;
            q++
          ) {
            p = {};
            for (r in g) p[r] = g[r];
            if (
              (v &&
                (e(p, a, q),
                null != p.duration && ((b = p.duration), delete p.duration)),
              w)
            ) {
              w = p.startAt = {};
              for (r in g.startAt) w[r] = g.startAt[r];
              e(p.startAt, a, q);
            }
            (p.delay = s + (p.delay || 0)),
              q === o && k && (p.onComplete = u),
              (t[q] = new f(a[q], b, p)),
              (s += h);
          }
          return t;
        }),
        (f.staggerFrom = f.allFrom = function (a, b, c, d, e, g, h) {
          return (
            (c.runBackwards = !0),
            (c.immediateRender = 0 != c.immediateRender),
            f.staggerTo(a, b, c, d, e, g, h)
          );
        }),
        (f.staggerFromTo = f.allFromTo = function (a, b, c, d, e, g, h, i) {
          return (
            (d.startAt = c),
            (d.immediateRender =
              0 != d.immediateRender && 0 != c.immediateRender),
            f.staggerTo(a, b, d, e, g, h, i)
          );
        }),
        (f.delayedCall = function (a, b, c, d, e) {
          return new f(b, 0, {
            delay: a,
            onComplete: b,
            onCompleteParams: c,
            callbackScope: d,
            onReverseComplete: b,
            onReverseCompleteParams: c,
            immediateRender: !1,
            useFrames: e,
            overwrite: 0,
          });
        }),
        (f.set = function (a, b) {
          return new f(a, 0, b);
        }),
        (f.isTweening = function (a) {
          return c.getTweensOf(a, !0).length > 0;
        });
      var m = function (a, b) {
          for (var d = [], e = 0, f = a._first; f; )
            f instanceof c
              ? (d[e++] = f)
              : (b && (d[e++] = f), (d = d.concat(m(f, b))), (e = d.length)),
              (f = f._next);
          return d;
        },
        n = (f.getAllTweens = function (b) {
          return m(a._rootTimeline, b).concat(m(a._rootFramesTimeline, b));
        });
      (f.killAll = function (a, c, d, e) {
        null == c && (c = !0), null == d && (d = !0);
        var f,
          g,
          h,
          i = n(0 != e),
          j = i.length,
          k = c && d && e;
        for (h = 0; j > h; h++)
          (g = i[h]),
            (k ||
              g instanceof b ||
              ((f = g.target === g.vars.onComplete) && d) ||
              (c && !f)) &&
              (a
                ? g.totalTime(g._reversed ? 0 : g.totalDuration())
                : g._enabled(!1, !1));
      }),
        (f.killChildTweensOf = function (a, b) {
          if (null != a) {
            var e,
              g,
              k,
              l,
              m,
              n = h.tweenLookup;
            if (
              ("string" == typeof a && (a = c.selector(a) || a),
              i(a) && (a = d(a)),
              j(a))
            )
              for (l = a.length; --l > -1; ) f.killChildTweensOf(a[l], b);
            else {
              e = [];
              for (k in n)
                for (g = n[k].target.parentNode; g; )
                  g === a && (e = e.concat(n[k].tweens)), (g = g.parentNode);
              for (m = e.length, l = 0; m > l; l++)
                b && e[l].totalTime(e[l].totalDuration()),
                  e[l]._enabled(!1, !1);
            }
          }
        });
      var o = function (a, c, d, e) {
        (c = c !== !1), (d = d !== !1), (e = e !== !1);
        for (var f, g, h = n(e), i = c && d && e, j = h.length; --j > -1; )
          (g = h[j]),
            (i ||
              g instanceof b ||
              ((f = g.target === g.vars.onComplete) && d) ||
              (c && !f)) &&
              g.paused(a);
      };
      return (
        (f.pauseAll = function (a, b, c) {
          o(!0, a, b, c);
        }),
        (f.resumeAll = function (a, b, c) {
          o(!1, a, b, c);
        }),
        (f.globalTimeScale = function (b) {
          var d = a._rootTimeline,
            e = c.ticker.time;
          return arguments.length
            ? ((b = b || g),
              (d._startTime = e - ((e - d._startTime) * d._timeScale) / b),
              (d = a._rootFramesTimeline),
              (e = c.ticker.frame),
              (d._startTime = e - ((e - d._startTime) * d._timeScale) / b),
              (d._timeScale = a._rootTimeline._timeScale = b),
              b)
            : d._timeScale;
        }),
        (k.progress = function (a, b) {
          return arguments.length
            ? this.totalTime(
                this.duration() *
                  (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) +
                  this._cycle * (this._duration + this._repeatDelay),
                b
              )
            : this._time / this.duration();
        }),
        (k.totalProgress = function (a, b) {
          return arguments.length
            ? this.totalTime(this.totalDuration() * a, b)
            : this._totalTime / this.totalDuration();
        }),
        (k.time = function (a, b) {
          return arguments.length
            ? (this._dirty && this.totalDuration(),
              a > this._duration && (a = this._duration),
              this._yoyo && 0 !== (1 & this._cycle)
                ? (a =
                    this._duration -
                    a +
                    this._cycle * (this._duration + this._repeatDelay))
                : 0 !== this._repeat &&
                  (a += this._cycle * (this._duration + this._repeatDelay)),
              this.totalTime(a, b))
            : this._time;
        }),
        (k.duration = function (b) {
          return arguments.length
            ? a.prototype.duration.call(this, b)
            : this._duration;
        }),
        (k.totalDuration = function (a) {
          return arguments.length
            ? -1 === this._repeat
              ? this
              : this.duration(
                  (a - this._repeat * this._repeatDelay) / (this._repeat + 1)
                )
            : (this._dirty &&
                ((this._totalDuration =
                  -1 === this._repeat
                    ? 999999999999
                    : this._duration * (this._repeat + 1) +
                      this._repeatDelay * this._repeat),
                (this._dirty = !1)),
              this._totalDuration);
        }),
        (k.repeat = function (a) {
          return arguments.length
            ? ((this._repeat = a), this._uncache(!0))
            : this._repeat;
        }),
        (k.repeatDelay = function (a) {
          return arguments.length
            ? ((this._repeatDelay = a), this._uncache(!0))
            : this._repeatDelay;
        }),
        (k.yoyo = function (a) {
          return arguments.length ? ((this._yoyo = a), this) : this._yoyo;
        }),
        f
      );
    },
    !0
  ),
    _gsScope._gsDefine(
      "TimelineLite",
      ["core.Animation", "core.SimpleTimeline", "TweenLite"],
      function (a, b, c) {
        var d = function (a) {
            b.call(this, a),
              (this._labels = {}),
              (this.autoRemoveChildren = this.vars.autoRemoveChildren === !0),
              (this.smoothChildTiming = this.vars.smoothChildTiming === !0),
              (this._sortChildren = !0),
              (this._onUpdate = this.vars.onUpdate);
            var c,
              d,
              e = this.vars;
            for (d in e)
              (c = e[d]),
                i(c) &&
                  -1 !== c.join("").indexOf("{self}") &&
                  (e[d] = this._swapSelfInParams(c));
            i(e.tweens) && this.add(e.tweens, 0, e.align, e.stagger);
          },
          e = 1e-10,
          f = c._internals,
          g = (d._internals = {}),
          h = f.isSelector,
          i = f.isArray,
          j = f.lazyTweens,
          k = f.lazyRender,
          l = _gsScope._gsDefine.globals,
          m = function (a) {
            var b,
              c = {};
            for (b in a) c[b] = a[b];
            return c;
          },
          n = function (a, b, c) {
            var d,
              e,
              f = a.cycle;
            for (d in f)
              (e = f[d]),
                (a[d] =
                  "function" == typeof e ? e.call(b[c], c) : e[c % e.length]);
            delete a.cycle;
          },
          o = (g.pauseCallback = function () {}),
          p = function (a) {
            var b,
              c = [],
              d = a.length;
            for (b = 0; b !== d; c.push(a[b++]));
            return c;
          },
          q = (d.prototype = new b());
        return (
          (d.version = "1.19.0"),
          (q.constructor = d),
          (q.kill()._gc = q._forcingPlayhead = q._hasPause = !1),
          (q.to = function (a, b, d, e) {
            var f = (d.repeat && l.TweenMax) || c;
            return b ? this.add(new f(a, b, d), e) : this.set(a, d, e);
          }),
          (q.from = function (a, b, d, e) {
            return this.add(((d.repeat && l.TweenMax) || c).from(a, b, d), e);
          }),
          (q.fromTo = function (a, b, d, e, f) {
            var g = (e.repeat && l.TweenMax) || c;
            return b ? this.add(g.fromTo(a, b, d, e), f) : this.set(a, e, f);
          }),
          (q.staggerTo = function (a, b, e, f, g, i, j, k) {
            var l,
              o,
              q = new d({
                onComplete: i,
                onCompleteParams: j,
                callbackScope: k,
                smoothChildTiming: this.smoothChildTiming,
              }),
              r = e.cycle;
            for (
              "string" == typeof a && (a = c.selector(a) || a),
                a = a || [],
                h(a) && (a = p(a)),
                f = f || 0,
                0 > f && ((a = p(a)), a.reverse(), (f *= -1)),
                o = 0;
              o < a.length;
              o++
            )
              (l = m(e)),
                l.startAt &&
                  ((l.startAt = m(l.startAt)),
                  l.startAt.cycle && n(l.startAt, a, o)),
                r &&
                  (n(l, a, o),
                  null != l.duration && ((b = l.duration), delete l.duration)),
                q.to(a[o], b, l, o * f);
            return this.add(q, g);
          }),
          (q.staggerFrom = function (a, b, c, d, e, f, g, h) {
            return (
              (c.immediateRender = 0 != c.immediateRender),
              (c.runBackwards = !0),
              this.staggerTo(a, b, c, d, e, f, g, h)
            );
          }),
          (q.staggerFromTo = function (a, b, c, d, e, f, g, h, i) {
            return (
              (d.startAt = c),
              (d.immediateRender =
                0 != d.immediateRender && 0 != c.immediateRender),
              this.staggerTo(a, b, d, e, f, g, h, i)
            );
          }),
          (q.call = function (a, b, d, e) {
            return this.add(c.delayedCall(0, a, b, d), e);
          }),
          (q.set = function (a, b, d) {
            return (
              (d = this._parseTimeOrLabel(d, 0, !0)),
              null == b.immediateRender &&
                (b.immediateRender = d === this._time && !this._paused),
              this.add(new c(a, 0, b), d)
            );
          }),
          (d.exportRoot = function (a, b) {
            (a = a || {}),
              null == a.smoothChildTiming && (a.smoothChildTiming = !0);
            var e,
              f,
              g = new d(a),
              h = g._timeline;
            for (
              null == b && (b = !0),
                h._remove(g, !0),
                g._startTime = 0,
                g._rawPrevTime = g._time = g._totalTime = h._time,
                e = h._first;
              e;

            )
              (f = e._next),
                (b && e instanceof c && e.target === e.vars.onComplete) ||
                  g.add(e, e._startTime - e._delay),
                (e = f);
            return h.add(g, 0), g;
          }),
          (q.add = function (e, f, g, h) {
            var j, k, l, m, n, o;
            if (
              ("number" != typeof f &&
                (f = this._parseTimeOrLabel(f, 0, !0, e)),
              !(e instanceof a))
            ) {
              if (e instanceof Array || (e && e.push && i(e))) {
                for (
                  g = g || "normal", h = h || 0, j = f, k = e.length, l = 0;
                  k > l;
                  l++
                )
                  i((m = e[l])) && (m = new d({ tweens: m })),
                    this.add(m, j),
                    "string" != typeof m &&
                      "function" != typeof m &&
                      ("sequence" === g
                        ? (j = m._startTime + m.totalDuration() / m._timeScale)
                        : "start" === g && (m._startTime -= m.delay())),
                    (j += h);
                return this._uncache(!0);
              }
              if ("string" == typeof e) return this.addLabel(e, f);
              if ("function" != typeof e)
                throw (
                  "Cannot add " +
                  e +
                  " into the timeline; it is not a tween, timeline, function, or string."
                );
              e = c.delayedCall(0, e);
            }
            if (
              (b.prototype.add.call(this, e, f),
              (this._gc || this._time === this._duration) &&
                !this._paused &&
                this._duration < this.duration())
            )
              for (n = this, o = n.rawTime() > e._startTime; n._timeline; )
                o && n._timeline.smoothChildTiming
                  ? n.totalTime(n._totalTime, !0)
                  : n._gc && n._enabled(!0, !1),
                  (n = n._timeline);
            return this;
          }),
          (q.remove = function (b) {
            if (b instanceof a) {
              this._remove(b, !1);
              var c = (b._timeline = b.vars.useFrames
                ? a._rootFramesTimeline
                : a._rootTimeline);
              return (
                (b._startTime =
                  (b._paused ? b._pauseTime : c._time) -
                  (b._reversed
                    ? b.totalDuration() - b._totalTime
                    : b._totalTime) /
                    b._timeScale),
                this
              );
            }
            if (b instanceof Array || (b && b.push && i(b))) {
              for (var d = b.length; --d > -1; ) this.remove(b[d]);
              return this;
            }
            return "string" == typeof b
              ? this.removeLabel(b)
              : this.kill(null, b);
          }),
          (q._remove = function (a, c) {
            b.prototype._remove.call(this, a, c);
            var d = this._last;
            return (
              d
                ? this._time > d._startTime + d._totalDuration / d._timeScale &&
                  ((this._time = this.duration()),
                  (this._totalTime = this._totalDuration))
                : (this._time = this._totalTime = this._duration = this._totalDuration = 0),
              this
            );
          }),
          (q.append = function (a, b) {
            return this.add(a, this._parseTimeOrLabel(null, b, !0, a));
          }),
          (q.insert = q.insertMultiple = function (a, b, c, d) {
            return this.add(a, b || 0, c, d);
          }),
          (q.appendMultiple = function (a, b, c, d) {
            return this.add(a, this._parseTimeOrLabel(null, b, !0, a), c, d);
          }),
          (q.addLabel = function (a, b) {
            return (this._labels[a] = this._parseTimeOrLabel(b)), this;
          }),
          (q.addPause = function (a, b, d, e) {
            var f = c.delayedCall(0, o, d, e || this);
            return (
              (f.vars.onComplete = f.vars.onReverseComplete = b),
              (f.data = "isPause"),
              (this._hasPause = !0),
              this.add(f, a)
            );
          }),
          (q.removeLabel = function (a) {
            return delete this._labels[a], this;
          }),
          (q.getLabelTime = function (a) {
            return null != this._labels[a] ? this._labels[a] : -1;
          }),
          (q._parseTimeOrLabel = function (b, c, d, e) {
            var f;
            if (e instanceof a && e.timeline === this) this.remove(e);
            else if (e && (e instanceof Array || (e.push && i(e))))
              for (f = e.length; --f > -1; )
                e[f] instanceof a &&
                  e[f].timeline === this &&
                  this.remove(e[f]);
            if ("string" == typeof c)
              return this._parseTimeOrLabel(
                c,
                d && "number" == typeof b && null == this._labels[c]
                  ? b - this.duration()
                  : 0,
                d
              );
            if (
              ((c = c || 0),
              "string" != typeof b || (!isNaN(b) && null == this._labels[b]))
            )
              null == b && (b = this.duration());
            else {
              if (((f = b.indexOf("=")), -1 === f))
                return null == this._labels[b]
                  ? d
                    ? (this._labels[b] = this.duration() + c)
                    : c
                  : this._labels[b] + c;
              (c =
                parseInt(b.charAt(f - 1) + "1", 10) * Number(b.substr(f + 1))),
                (b =
                  f > 1
                    ? this._parseTimeOrLabel(b.substr(0, f - 1), 0, d)
                    : this.duration());
            }
            return Number(b) + c;
          }),
          (q.seek = function (a, b) {
            return this.totalTime(
              "number" == typeof a ? a : this._parseTimeOrLabel(a),
              b !== !1
            );
          }),
          (q.stop = function () {
            return this.paused(!0);
          }),
          (q.gotoAndPlay = function (a, b) {
            return this.play(a, b);
          }),
          (q.gotoAndStop = function (a, b) {
            return this.pause(a, b);
          }),
          (q.render = function (a, b, c) {
            this._gc && this._enabled(!0, !1);
            var d,
              f,
              g,
              h,
              i,
              l,
              m,
              n = this._dirty ? this.totalDuration() : this._totalDuration,
              o = this._time,
              p = this._startTime,
              q = this._timeScale,
              r = this._paused;
            if (a >= n - 1e-7)
              (this._totalTime = this._time = n),
                this._reversed ||
                  this._hasPausedChild() ||
                  ((f = !0),
                  (h = "onComplete"),
                  (i = !!this._timeline.autoRemoveChildren),
                  0 === this._duration &&
                    ((0 >= a && a >= -1e-7) ||
                      this._rawPrevTime < 0 ||
                      this._rawPrevTime === e) &&
                    this._rawPrevTime !== a &&
                    this._first &&
                    ((i = !0),
                    this._rawPrevTime > e && (h = "onReverseComplete"))),
                (this._rawPrevTime =
                  this._duration || !b || a || this._rawPrevTime === a ? a : e),
                (a = n + 1e-4);
            else if (1e-7 > a)
              if (
                ((this._totalTime = this._time = 0),
                (0 !== o ||
                  (0 === this._duration &&
                    this._rawPrevTime !== e &&
                    (this._rawPrevTime > 0 ||
                      (0 > a && this._rawPrevTime >= 0)))) &&
                  ((h = "onReverseComplete"), (f = this._reversed)),
                0 > a)
              )
                (this._active = !1),
                  this._timeline.autoRemoveChildren && this._reversed
                    ? ((i = f = !0), (h = "onReverseComplete"))
                    : this._rawPrevTime >= 0 && this._first && (i = !0),
                  (this._rawPrevTime = a);
              else {
                if (
                  ((this._rawPrevTime =
                    this._duration || !b || a || this._rawPrevTime === a
                      ? a
                      : e),
                  0 === a && f)
                )
                  for (d = this._first; d && 0 === d._startTime; )
                    d._duration || (f = !1), (d = d._next);
                (a = 0), this._initted || (i = !0);
              }
            else {
              if (this._hasPause && !this._forcingPlayhead && !b) {
                if (a >= o)
                  for (d = this._first; d && d._startTime <= a && !l; )
                    d._duration ||
                      "isPause" !== d.data ||
                      d.ratio ||
                      (0 === d._startTime && 0 === this._rawPrevTime) ||
                      (l = d),
                      (d = d._next);
                else
                  for (d = this._last; d && d._startTime >= a && !l; )
                    d._duration ||
                      ("isPause" === d.data && d._rawPrevTime > 0 && (l = d)),
                      (d = d._prev);
                l &&
                  ((this._time = a = l._startTime),
                  (this._totalTime =
                    a +
                    this._cycle * (this._totalDuration + this._repeatDelay)));
              }
              this._totalTime = this._time = this._rawPrevTime = a;
            }
            if ((this._time !== o && this._first) || c || i || l) {
              if (
                (this._initted || (this._initted = !0),
                this._active ||
                  (!this._paused &&
                    this._time !== o &&
                    a > 0 &&
                    (this._active = !0)),
                0 === o &&
                  this.vars.onStart &&
                  ((0 === this._time && this._duration) ||
                    b ||
                    this._callback("onStart")),
                (m = this._time),
                m >= o)
              )
                for (
                  d = this._first;
                  d &&
                  ((g = d._next), m === this._time && (!this._paused || r));

                )
                  (d._active || (d._startTime <= m && !d._paused && !d._gc)) &&
                    (l === d && this.pause(),
                    d._reversed
                      ? d.render(
                          (d._dirty ? d.totalDuration() : d._totalDuration) -
                            (a - d._startTime) * d._timeScale,
                          b,
                          c
                        )
                      : d.render((a - d._startTime) * d._timeScale, b, c)),
                    (d = g);
              else
                for (
                  d = this._last;
                  d &&
                  ((g = d._prev), m === this._time && (!this._paused || r));

                ) {
                  if (
                    d._active ||
                    (d._startTime <= o && !d._paused && !d._gc)
                  ) {
                    if (l === d) {
                      for (l = d._prev; l && l.endTime() > this._time; )
                        l.render(
                          l._reversed
                            ? l.totalDuration() -
                                (a - l._startTime) * l._timeScale
                            : (a - l._startTime) * l._timeScale,
                          b,
                          c
                        ),
                          (l = l._prev);
                      (l = null), this.pause();
                    }
                    d._reversed
                      ? d.render(
                          (d._dirty ? d.totalDuration() : d._totalDuration) -
                            (a - d._startTime) * d._timeScale,
                          b,
                          c
                        )
                      : d.render((a - d._startTime) * d._timeScale, b, c);
                  }
                  d = g;
                }
              this._onUpdate &&
                (b || (j.length && k(), this._callback("onUpdate"))),
                h &&
                  (this._gc ||
                    ((p === this._startTime || q !== this._timeScale) &&
                      (0 === this._time || n >= this.totalDuration()) &&
                      (f &&
                        (j.length && k(),
                        this._timeline.autoRemoveChildren &&
                          this._enabled(!1, !1),
                        (this._active = !1)),
                      !b && this.vars[h] && this._callback(h))));
            }
          }),
          (q._hasPausedChild = function () {
            for (var a = this._first; a; ) {
              if (a._paused || (a instanceof d && a._hasPausedChild()))
                return !0;
              a = a._next;
            }
            return !1;
          }),
          (q.getChildren = function (a, b, d, e) {
            e = e || -9999999999;
            for (var f = [], g = this._first, h = 0; g; )
              g._startTime < e ||
                (g instanceof c
                  ? b !== !1 && (f[h++] = g)
                  : (d !== !1 && (f[h++] = g),
                    a !== !1 &&
                      ((f = f.concat(g.getChildren(!0, b, d))),
                      (h = f.length)))),
                (g = g._next);
            return f;
          }),
          (q.getTweensOf = function (a, b) {
            var d,
              e,
              f = this._gc,
              g = [],
              h = 0;
            for (
              f && this._enabled(!0, !0), d = c.getTweensOf(a), e = d.length;
              --e > -1;

            )
              (d[e].timeline === this || (b && this._contains(d[e]))) &&
                (g[h++] = d[e]);
            return f && this._enabled(!1, !0), g;
          }),
          (q.recent = function () {
            return this._recent;
          }),
          (q._contains = function (a) {
            for (var b = a.timeline; b; ) {
              if (b === this) return !0;
              b = b.timeline;
            }
            return !1;
          }),
          (q.shiftChildren = function (a, b, c) {
            c = c || 0;
            for (var d, e = this._first, f = this._labels; e; )
              e._startTime >= c && (e._startTime += a), (e = e._next);
            if (b) for (d in f) f[d] >= c && (f[d] += a);
            return this._uncache(!0);
          }),
          (q._kill = function (a, b) {
            if (!a && !b) return this._enabled(!1, !1);
            for (
              var c = b ? this.getTweensOf(b) : this.getChildren(!0, !0, !1),
                d = c.length,
                e = !1;
              --d > -1;

            )
              c[d]._kill(a, b) && (e = !0);
            return e;
          }),
          (q.clear = function (a) {
            var b = this.getChildren(!1, !0, !0),
              c = b.length;
            for (this._time = this._totalTime = 0; --c > -1; )
              b[c]._enabled(!1, !1);
            return a !== !1 && (this._labels = {}), this._uncache(!0);
          }),
          (q.invalidate = function () {
            for (var b = this._first; b; ) b.invalidate(), (b = b._next);
            return a.prototype.invalidate.call(this);
          }),
          (q._enabled = function (a, c) {
            if (a === this._gc)
              for (var d = this._first; d; ) d._enabled(a, !0), (d = d._next);
            return b.prototype._enabled.call(this, a, c);
          }),
          (q.totalTime = function (b, c, d) {
            this._forcingPlayhead = !0;
            var e = a.prototype.totalTime.apply(this, arguments);
            return (this._forcingPlayhead = !1), e;
          }),
          (q.duration = function (a) {
            return arguments.length
              ? (0 !== this.duration() &&
                  0 !== a &&
                  this.timeScale(this._duration / a),
                this)
              : (this._dirty && this.totalDuration(), this._duration);
          }),
          (q.totalDuration = function (a) {
            if (!arguments.length) {
              if (this._dirty) {
                for (var b, c, d = 0, e = this._last, f = 999999999999; e; )
                  (b = e._prev),
                    e._dirty && e.totalDuration(),
                    e._startTime > f && this._sortChildren && !e._paused
                      ? this.add(e, e._startTime - e._delay)
                      : (f = e._startTime),
                    e._startTime < 0 &&
                      !e._paused &&
                      ((d -= e._startTime),
                      this._timeline.smoothChildTiming &&
                        (this._startTime += e._startTime / this._timeScale),
                      this.shiftChildren(-e._startTime, !1, -9999999999),
                      (f = 0)),
                    (c = e._startTime + e._totalDuration / e._timeScale),
                    c > d && (d = c),
                    (e = b);
                (this._duration = this._totalDuration = d), (this._dirty = !1);
              }
              return this._totalDuration;
            }
            return a && this.totalDuration()
              ? this.timeScale(this._totalDuration / a)
              : this;
          }),
          (q.paused = function (b) {
            if (!b)
              for (var c = this._first, d = this._time; c; )
                c._startTime === d &&
                  "isPause" === c.data &&
                  (c._rawPrevTime = 0),
                  (c = c._next);
            return a.prototype.paused.apply(this, arguments);
          }),
          (q.usesFrames = function () {
            for (var b = this._timeline; b._timeline; ) b = b._timeline;
            return b === a._rootFramesTimeline;
          }),
          (q.rawTime = function () {
            return this._paused
              ? this._totalTime
              : (this._timeline.rawTime() - this._startTime) * this._timeScale;
          }),
          d
        );
      },
      !0
    ),
    _gsScope._gsDefine(
      "TimelineMax",
      ["TimelineLite", "TweenLite", "easing.Ease"],
      function (a, b, c) {
        var d = function (b) {
            a.call(this, b),
              (this._repeat = this.vars.repeat || 0),
              (this._repeatDelay = this.vars.repeatDelay || 0),
              (this._cycle = 0),
              (this._yoyo = this.vars.yoyo === !0),
              (this._dirty = !0);
          },
          e = 1e-10,
          f = b._internals,
          g = f.lazyTweens,
          h = f.lazyRender,
          i = _gsScope._gsDefine.globals,
          j = new c(null, null, 1, 0),
          k = (d.prototype = new a());
        return (
          (k.constructor = d),
          (k.kill()._gc = !1),
          (d.version = "1.19.0"),
          (k.invalidate = function () {
            return (
              (this._yoyo = this.vars.yoyo === !0),
              (this._repeat = this.vars.repeat || 0),
              (this._repeatDelay = this.vars.repeatDelay || 0),
              this._uncache(!0),
              a.prototype.invalidate.call(this)
            );
          }),
          (k.addCallback = function (a, c, d, e) {
            return this.add(b.delayedCall(0, a, d, e), c);
          }),
          (k.removeCallback = function (a, b) {
            if (a)
              if (null == b) this._kill(null, a);
              else
                for (
                  var c = this.getTweensOf(a, !1),
                    d = c.length,
                    e = this._parseTimeOrLabel(b);
                  --d > -1;

                )
                  c[d]._startTime === e && c[d]._enabled(!1, !1);
            return this;
          }),
          (k.removePause = function (b) {
            return this.removeCallback(a._internals.pauseCallback, b);
          }),
          (k.tweenTo = function (a, c) {
            c = c || {};
            var d,
              e,
              f,
              g = {
                ease: j,
                useFrames: this.usesFrames(),
                immediateRender: !1,
              },
              h = (c.repeat && i.TweenMax) || b;
            for (e in c) g[e] = c[e];
            return (
              (g.time = this._parseTimeOrLabel(a)),
              (d =
                Math.abs(Number(g.time) - this._time) / this._timeScale ||
                0.001),
              (f = new h(this, d, g)),
              (g.onStart = function () {
                f.target.paused(!0),
                  f.vars.time !== f.target.time() &&
                    d === f.duration() &&
                    f.duration(
                      Math.abs(f.vars.time - f.target.time()) /
                        f.target._timeScale
                    ),
                  c.onStart && f._callback("onStart");
              }),
              f
            );
          }),
          (k.tweenFromTo = function (a, b, c) {
            (c = c || {}),
              (a = this._parseTimeOrLabel(a)),
              (c.startAt = {
                onComplete: this.seek,
                onCompleteParams: [a],
                callbackScope: this,
              }),
              (c.immediateRender = c.immediateRender !== !1);
            var d = this.tweenTo(b, c);
            return d.duration(
              Math.abs(d.vars.time - a) / this._timeScale || 0.001
            );
          }),
          (k.render = function (a, b, c) {
            this._gc && this._enabled(!0, !1);
            var d,
              f,
              i,
              j,
              k,
              l,
              m,
              n,
              o = this._dirty ? this.totalDuration() : this._totalDuration,
              p = this._duration,
              q = this._time,
              r = this._totalTime,
              s = this._startTime,
              t = this._timeScale,
              u = this._rawPrevTime,
              v = this._paused,
              w = this._cycle;
            if (a >= o - 1e-7)
              this._locked ||
                ((this._totalTime = o), (this._cycle = this._repeat)),
                this._reversed ||
                  this._hasPausedChild() ||
                  ((f = !0),
                  (j = "onComplete"),
                  (k = !!this._timeline.autoRemoveChildren),
                  0 === this._duration &&
                    ((0 >= a && a >= -1e-7) || 0 > u || u === e) &&
                    u !== a &&
                    this._first &&
                    ((k = !0), u > e && (j = "onReverseComplete"))),
                (this._rawPrevTime =
                  this._duration || !b || a || this._rawPrevTime === a ? a : e),
                this._yoyo && 0 !== (1 & this._cycle)
                  ? (this._time = a = 0)
                  : ((this._time = p), (a = p + 1e-4));
            else if (1e-7 > a)
              if (
                (this._locked || (this._totalTime = this._cycle = 0),
                (this._time = 0),
                (0 !== q ||
                  (0 === p &&
                    u !== e &&
                    (u > 0 || (0 > a && u >= 0)) &&
                    !this._locked)) &&
                  ((j = "onReverseComplete"), (f = this._reversed)),
                0 > a)
              )
                (this._active = !1),
                  this._timeline.autoRemoveChildren && this._reversed
                    ? ((k = f = !0), (j = "onReverseComplete"))
                    : u >= 0 && this._first && (k = !0),
                  (this._rawPrevTime = a);
              else {
                if (
                  ((this._rawPrevTime =
                    p || !b || a || this._rawPrevTime === a ? a : e),
                  0 === a && f)
                )
                  for (d = this._first; d && 0 === d._startTime; )
                    d._duration || (f = !1), (d = d._next);
                (a = 0), this._initted || (k = !0);
              }
            else if (
              (0 === p && 0 > u && (k = !0),
              (this._time = this._rawPrevTime = a),
              this._locked ||
                ((this._totalTime = a),
                0 !== this._repeat &&
                  ((l = p + this._repeatDelay),
                  (this._cycle = (this._totalTime / l) >> 0),
                  0 !== this._cycle &&
                    this._cycle === this._totalTime / l &&
                    a >= r &&
                    this._cycle--,
                  (this._time = this._totalTime - this._cycle * l),
                  this._yoyo &&
                    0 !== (1 & this._cycle) &&
                    (this._time = p - this._time),
                  this._time > p
                    ? ((this._time = p), (a = p + 1e-4))
                    : this._time < 0
                    ? (this._time = a = 0)
                    : (a = this._time))),
              this._hasPause && !this._forcingPlayhead && !b)
            ) {
              if (((a = this._time), a >= q))
                for (d = this._first; d && d._startTime <= a && !m; )
                  d._duration ||
                    "isPause" !== d.data ||
                    d.ratio ||
                    (0 === d._startTime && 0 === this._rawPrevTime) ||
                    (m = d),
                    (d = d._next);
              else
                for (d = this._last; d && d._startTime >= a && !m; )
                  d._duration ||
                    ("isPause" === d.data && d._rawPrevTime > 0 && (m = d)),
                    (d = d._prev);
              m &&
                ((this._time = a = m._startTime),
                (this._totalTime =
                  a + this._cycle * (this._totalDuration + this._repeatDelay)));
            }
            if (this._cycle !== w && !this._locked) {
              var x = this._yoyo && 0 !== (1 & w),
                y = x === (this._yoyo && 0 !== (1 & this._cycle)),
                z = this._totalTime,
                A = this._cycle,
                B = this._rawPrevTime,
                C = this._time;
              if (
                ((this._totalTime = w * p),
                this._cycle < w ? (x = !x) : (this._totalTime += p),
                (this._time = q),
                (this._rawPrevTime = 0 === p ? u - 1e-4 : u),
                (this._cycle = w),
                (this._locked = !0),
                (q = x ? 0 : p),
                this.render(q, b, 0 === p),
                b ||
                  this._gc ||
                  (this.vars.onRepeat && this._callback("onRepeat")),
                q !== this._time)
              )
                return;
              if (
                (y && ((q = x ? p + 1e-4 : -1e-4), this.render(q, !0, !1)),
                (this._locked = !1),
                this._paused && !v)
              )
                return;
              (this._time = C),
                (this._totalTime = z),
                (this._cycle = A),
                (this._rawPrevTime = B);
            }
            if (!((this._time !== q && this._first) || c || k || m))
              return void (
                r !== this._totalTime &&
                this._onUpdate &&
                (b || this._callback("onUpdate"))
              );
            if (
              (this._initted || (this._initted = !0),
              this._active ||
                (!this._paused &&
                  this._totalTime !== r &&
                  a > 0 &&
                  (this._active = !0)),
              0 === r &&
                this.vars.onStart &&
                ((0 === this._totalTime && this._totalDuration) ||
                  b ||
                  this._callback("onStart")),
              (n = this._time),
              n >= q)
            )
              for (
                d = this._first;
                d && ((i = d._next), n === this._time && (!this._paused || v));

              )
                (d._active ||
                  (d._startTime <= this._time && !d._paused && !d._gc)) &&
                  (m === d && this.pause(),
                  d._reversed
                    ? d.render(
                        (d._dirty ? d.totalDuration() : d._totalDuration) -
                          (a - d._startTime) * d._timeScale,
                        b,
                        c
                      )
                    : d.render((a - d._startTime) * d._timeScale, b, c)),
                  (d = i);
            else
              for (
                d = this._last;
                d && ((i = d._prev), n === this._time && (!this._paused || v));

              ) {
                if (d._active || (d._startTime <= q && !d._paused && !d._gc)) {
                  if (m === d) {
                    for (m = d._prev; m && m.endTime() > this._time; )
                      m.render(
                        m._reversed
                          ? m.totalDuration() -
                              (a - m._startTime) * m._timeScale
                          : (a - m._startTime) * m._timeScale,
                        b,
                        c
                      ),
                        (m = m._prev);
                    (m = null), this.pause();
                  }
                  d._reversed
                    ? d.render(
                        (d._dirty ? d.totalDuration() : d._totalDuration) -
                          (a - d._startTime) * d._timeScale,
                        b,
                        c
                      )
                    : d.render((a - d._startTime) * d._timeScale, b, c);
                }
                d = i;
              }
            this._onUpdate &&
              (b || (g.length && h(), this._callback("onUpdate"))),
              j &&
                (this._locked ||
                  this._gc ||
                  ((s === this._startTime || t !== this._timeScale) &&
                    (0 === this._time || o >= this.totalDuration()) &&
                    (f &&
                      (g.length && h(),
                      this._timeline.autoRemoveChildren &&
                        this._enabled(!1, !1),
                      (this._active = !1)),
                    !b && this.vars[j] && this._callback(j))));
          }),
          (k.getActive = function (a, b, c) {
            null == a && (a = !0), null == b && (b = !0), null == c && (c = !1);
            var d,
              e,
              f = [],
              g = this.getChildren(a, b, c),
              h = 0,
              i = g.length;
            for (d = 0; i > d; d++) (e = g[d]), e.isActive() && (f[h++] = e);
            return f;
          }),
          (k.getLabelAfter = function (a) {
            a || (0 !== a && (a = this._time));
            var b,
              c = this.getLabelsArray(),
              d = c.length;
            for (b = 0; d > b; b++) if (c[b].time > a) return c[b].name;
            return null;
          }),
          (k.getLabelBefore = function (a) {
            null == a && (a = this._time);
            for (var b = this.getLabelsArray(), c = b.length; --c > -1; )
              if (b[c].time < a) return b[c].name;
            return null;
          }),
          (k.getLabelsArray = function () {
            var a,
              b = [],
              c = 0;
            for (a in this._labels) b[c++] = { time: this._labels[a], name: a };
            return (
              b.sort(function (a, b) {
                return a.time - b.time;
              }),
              b
            );
          }),
          (k.progress = function (a, b) {
            return arguments.length
              ? this.totalTime(
                  this.duration() *
                    (this._yoyo && 0 !== (1 & this._cycle) ? 1 - a : a) +
                    this._cycle * (this._duration + this._repeatDelay),
                  b
                )
              : this._time / this.duration();
          }),
          (k.totalProgress = function (a, b) {
            return arguments.length
              ? this.totalTime(this.totalDuration() * a, b)
              : this._totalTime / this.totalDuration();
          }),
          (k.totalDuration = function (b) {
            return arguments.length
              ? -1 !== this._repeat && b
                ? this.timeScale(this.totalDuration() / b)
                : this
              : (this._dirty &&
                  (a.prototype.totalDuration.call(this),
                  (this._totalDuration =
                    -1 === this._repeat
                      ? 999999999999
                      : this._duration * (this._repeat + 1) +
                        this._repeatDelay * this._repeat)),
                this._totalDuration);
          }),
          (k.time = function (a, b) {
            return arguments.length
              ? (this._dirty && this.totalDuration(),
                a > this._duration && (a = this._duration),
                this._yoyo && 0 !== (1 & this._cycle)
                  ? (a =
                      this._duration -
                      a +
                      this._cycle * (this._duration + this._repeatDelay))
                  : 0 !== this._repeat &&
                    (a += this._cycle * (this._duration + this._repeatDelay)),
                this.totalTime(a, b))
              : this._time;
          }),
          (k.repeat = function (a) {
            return arguments.length
              ? ((this._repeat = a), this._uncache(!0))
              : this._repeat;
          }),
          (k.repeatDelay = function (a) {
            return arguments.length
              ? ((this._repeatDelay = a), this._uncache(!0))
              : this._repeatDelay;
          }),
          (k.yoyo = function (a) {
            return arguments.length ? ((this._yoyo = a), this) : this._yoyo;
          }),
          (k.currentLabel = function (a) {
            return arguments.length
              ? this.seek(a, !0)
              : this.getLabelBefore(this._time + 1e-8);
          }),
          d
        );
      },
      !0
    ),
    (function () {
      var a = 180 / Math.PI,
        b = [],
        c = [],
        d = [],
        e = {},
        f = _gsScope._gsDefine.globals,
        g = function (a, b, c, d) {
          c === d && (c = d - (d - b) / 1e6),
            a === b && (b = a + (c - a) / 1e6),
            (this.a = a),
            (this.b = b),
            (this.c = c),
            (this.d = d),
            (this.da = d - a),
            (this.ca = c - a),
            (this.ba = b - a);
        },
        h =
          ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
        i = function (a, b, c, d) {
          var e = { a: a },
            f = {},
            g = {},
            h = { c: d },
            i = (a + b) / 2,
            j = (b + c) / 2,
            k = (c + d) / 2,
            l = (i + j) / 2,
            m = (j + k) / 2,
            n = (m - l) / 8;
          return (
            (e.b = i + (a - i) / 4),
            (f.b = l + n),
            (e.c = f.a = (e.b + f.b) / 2),
            (f.c = g.a = (l + m) / 2),
            (g.b = m - n),
            (h.b = k + (d - k) / 4),
            (g.c = h.a = (g.b + h.b) / 2),
            [e, f, g, h]
          );
        },
        j = function (a, e, f, g, h) {
          var j,
            k,
            l,
            m,
            n,
            o,
            p,
            q,
            r,
            s,
            t,
            u,
            v,
            w = a.length - 1,
            x = 0,
            y = a[0].a;
          for (j = 0; w > j; j++)
            (n = a[x]),
              (k = n.a),
              (l = n.d),
              (m = a[x + 1].d),
              h
                ? ((t = b[j]),
                  (u = c[j]),
                  (v = ((u + t) * e * 0.25) / (g ? 0.5 : d[j] || 0.5)),
                  (o = l - (l - k) * (g ? 0.5 * e : 0 !== t ? v / t : 0)),
                  (p = l + (m - l) * (g ? 0.5 * e : 0 !== u ? v / u : 0)),
                  (q =
                    l - (o + (((p - o) * ((3 * t) / (t + u) + 0.5)) / 4 || 0))))
                : ((o = l - (l - k) * e * 0.5),
                  (p = l + (m - l) * e * 0.5),
                  (q = l - (o + p) / 2)),
              (o += q),
              (p += q),
              (n.c = r = o),
              0 !== j ? (n.b = y) : (n.b = y = n.a + 0.6 * (n.c - n.a)),
              (n.da = l - k),
              (n.ca = r - k),
              (n.ba = y - k),
              f
                ? ((s = i(k, y, r, l)),
                  a.splice(x, 1, s[0], s[1], s[2], s[3]),
                  (x += 4))
                : x++,
              (y = p);
          (n = a[x]),
            (n.b = y),
            (n.c = y + 0.4 * (n.d - y)),
            (n.da = n.d - n.a),
            (n.ca = n.c - n.a),
            (n.ba = y - n.a),
            f &&
              ((s = i(n.a, y, n.c, n.d)),
              a.splice(x, 1, s[0], s[1], s[2], s[3]));
        },
        k = function (a, d, e, f) {
          var h,
            i,
            j,
            k,
            l,
            m,
            n = [];
          if (f)
            for (a = [f].concat(a), i = a.length; --i > -1; )
              "string" == typeof (m = a[i][d]) &&
                "=" === m.charAt(1) &&
                (a[i][d] = f[d] + Number(m.charAt(0) + m.substr(2)));
          if (((h = a.length - 2), 0 > h))
            return (n[0] = new g(a[0][d], 0, 0, a[-1 > h ? 0 : 1][d])), n;
          for (i = 0; h > i; i++)
            (j = a[i][d]),
              (k = a[i + 1][d]),
              (n[i] = new g(j, 0, 0, k)),
              e &&
                ((l = a[i + 2][d]),
                (b[i] = (b[i] || 0) + (k - j) * (k - j)),
                (c[i] = (c[i] || 0) + (l - k) * (l - k)));
          return (n[i] = new g(a[i][d], 0, 0, a[i + 1][d])), n;
        },
        l = function (a, f, g, i, l, m) {
          var n,
            o,
            p,
            q,
            r,
            s,
            t,
            u,
            v = {},
            w = [],
            x = m || a[0];
          (l = "string" == typeof l ? "," + l + "," : h), null == f && (f = 1);
          for (o in a[0]) w.push(o);
          if (a.length > 1) {
            for (u = a[a.length - 1], t = !0, n = w.length; --n > -1; )
              if (((o = w[n]), Math.abs(x[o] - u[o]) > 0.05)) {
                t = !1;
                break;
              }
            t &&
              ((a = a.concat()),
              m && a.unshift(m),
              a.push(a[1]),
              (m = a[a.length - 3]));
          }
          for (b.length = c.length = d.length = 0, n = w.length; --n > -1; )
            (o = w[n]),
              (e[o] = -1 !== l.indexOf("," + o + ",")),
              (v[o] = k(a, o, e[o], m));
          for (n = b.length; --n > -1; )
            (b[n] = Math.sqrt(b[n])), (c[n] = Math.sqrt(c[n]));
          if (!i) {
            for (n = w.length; --n > -1; )
              if (e[o])
                for (p = v[w[n]], s = p.length - 1, q = 0; s > q; q++)
                  (r = p[q + 1].da / c[q] + p[q].da / b[q] || 0),
                    (d[q] = (d[q] || 0) + r * r);
            for (n = d.length; --n > -1; ) d[n] = Math.sqrt(d[n]);
          }
          for (n = w.length, q = g ? 4 : 1; --n > -1; )
            (o = w[n]),
              (p = v[o]),
              j(p, f, g, i, e[o]),
              t && (p.splice(0, q), p.splice(p.length - q, q));
          return v;
        },
        m = function (a, b, c) {
          b = b || "soft";
          var d,
            e,
            f,
            h,
            i,
            j,
            k,
            l,
            m,
            n,
            o,
            p = {},
            q = "cubic" === b ? 3 : 2,
            r = "soft" === b,
            s = [];
          if ((r && c && (a = [c].concat(a)), null == a || a.length < q + 1))
            throw "invalid Bezier data";
          for (m in a[0]) s.push(m);
          for (j = s.length; --j > -1; ) {
            for (
              m = s[j], p[m] = i = [], n = 0, l = a.length, k = 0;
              l > k;
              k++
            )
              (d =
                null == c
                  ? a[k][m]
                  : "string" == typeof (o = a[k][m]) && "=" === o.charAt(1)
                  ? c[m] + Number(o.charAt(0) + o.substr(2))
                  : Number(o)),
                r && k > 1 && l - 1 > k && (i[n++] = (d + i[n - 2]) / 2),
                (i[n++] = d);
            for (l = n - q + 1, n = 0, k = 0; l > k; k += q)
              (d = i[k]),
                (e = i[k + 1]),
                (f = i[k + 2]),
                (h = 2 === q ? 0 : i[k + 3]),
                (i[n++] = o =
                  3 === q
                    ? new g(d, e, f, h)
                    : new g(d, (2 * e + d) / 3, (2 * e + f) / 3, f));
            i.length = n;
          }
          return p;
        },
        n = function (a, b, c) {
          for (
            var d, e, f, g, h, i, j, k, l, m, n, o = 1 / c, p = a.length;
            --p > -1;

          )
            for (
              m = a[p],
                f = m.a,
                g = m.d - f,
                h = m.c - f,
                i = m.b - f,
                d = e = 0,
                k = 1;
              c >= k;
              k++
            )
              (j = o * k),
                (l = 1 - j),
                (d = e - (e = (j * j * g + 3 * l * (j * h + l * i)) * j)),
                (n = p * c + k - 1),
                (b[n] = (b[n] || 0) + d * d);
        },
        o = function (a, b) {
          b = b >> 0 || 6;
          var c,
            d,
            e,
            f,
            g = [],
            h = [],
            i = 0,
            j = 0,
            k = b - 1,
            l = [],
            m = [];
          for (c in a) n(a[c], g, b);
          for (e = g.length, d = 0; e > d; d++)
            (i += Math.sqrt(g[d])),
              (f = d % b),
              (m[f] = i),
              f === k &&
                ((j += i),
                (f = (d / b) >> 0),
                (l[f] = m),
                (h[f] = j),
                (i = 0),
                (m = []));
          return { length: j, lengths: h, segments: l };
        },
        p = _gsScope._gsDefine.plugin({
          propName: "bezier",
          priority: -1,
          version: "1.3.7",
          API: 2,
          global: !0,
          init: function (a, b, c) {
            (this._target = a),
              b instanceof Array && (b = { values: b }),
              (this._func = {}),
              (this._mod = {}),
              (this._props = []),
              (this._timeRes =
                null == b.timeResolution ? 6 : parseInt(b.timeResolution, 10));
            var d,
              e,
              f,
              g,
              h,
              i = b.values || [],
              j = {},
              k = i[0],
              n = b.autoRotate || c.vars.orientToBezier;
            this._autoRotate = n
              ? n instanceof Array
                ? n
                : [["x", "y", "rotation", n === !0 ? 0 : Number(n) || 0]]
              : null;
            for (d in k) this._props.push(d);
            for (f = this._props.length; --f > -1; )
              (d = this._props[f]),
                this._overwriteProps.push(d),
                (e = this._func[d] = "function" == typeof a[d]),
                (j[d] = e
                  ? a[
                      d.indexOf("set") ||
                      "function" != typeof a["get" + d.substr(3)]
                        ? d
                        : "get" + d.substr(3)
                    ]()
                  : parseFloat(a[d])),
                h || (j[d] !== i[0][d] && (h = j));
            if (
              ((this._beziers =
                "cubic" !== b.type &&
                "quadratic" !== b.type &&
                "soft" !== b.type
                  ? l(
                      i,
                      isNaN(b.curviness) ? 1 : b.curviness,
                      !1,
                      "thruBasic" === b.type,
                      b.correlate,
                      h
                    )
                  : m(i, b.type, j)),
              (this._segCount = this._beziers[d].length),
              this._timeRes)
            ) {
              var p = o(this._beziers, this._timeRes);
              (this._length = p.length),
                (this._lengths = p.lengths),
                (this._segments = p.segments),
                (this._l1 = this._li = this._s1 = this._si = 0),
                (this._l2 = this._lengths[0]),
                (this._curSeg = this._segments[0]),
                (this._s2 = this._curSeg[0]),
                (this._prec = 1 / this._curSeg.length);
            }
            if ((n = this._autoRotate))
              for (
                this._initialRotations = [],
                  n[0] instanceof Array || (this._autoRotate = n = [n]),
                  f = n.length;
                --f > -1;

              ) {
                for (g = 0; 3 > g; g++)
                  (d = n[f][g]),
                    (this._func[d] =
                      "function" == typeof a[d]
                        ? a[
                            d.indexOf("set") ||
                            "function" != typeof a["get" + d.substr(3)]
                              ? d
                              : "get" + d.substr(3)
                          ]
                        : !1);
                (d = n[f][2]),
                  (this._initialRotations[f] =
                    (this._func[d]
                      ? this._func[d].call(this._target)
                      : this._target[d]) || 0),
                  this._overwriteProps.push(d);
              }
            return (this._startRatio = c.vars.runBackwards ? 1 : 0), !0;
          },
          set: function (b) {
            var c,
              d,
              e,
              f,
              g,
              h,
              i,
              j,
              k,
              l,
              m = this._segCount,
              n = this._func,
              o = this._target,
              p = b !== this._startRatio;
            if (this._timeRes) {
              if (
                ((k = this._lengths),
                (l = this._curSeg),
                (b *= this._length),
                (e = this._li),
                b > this._l2 && m - 1 > e)
              ) {
                for (j = m - 1; j > e && (this._l2 = k[++e]) <= b; );
                (this._l1 = k[e - 1]),
                  (this._li = e),
                  (this._curSeg = l = this._segments[e]),
                  (this._s2 = l[(this._s1 = this._si = 0)]);
              } else if (b < this._l1 && e > 0) {
                for (; e > 0 && (this._l1 = k[--e]) >= b; );
                0 === e && b < this._l1 ? (this._l1 = 0) : e++,
                  (this._l2 = k[e]),
                  (this._li = e),
                  (this._curSeg = l = this._segments[e]),
                  (this._s1 = l[(this._si = l.length - 1) - 1] || 0),
                  (this._s2 = l[this._si]);
              }
              if (
                ((c = e),
                (b -= this._l1),
                (e = this._si),
                b > this._s2 && e < l.length - 1)
              ) {
                for (j = l.length - 1; j > e && (this._s2 = l[++e]) <= b; );
                (this._s1 = l[e - 1]), (this._si = e);
              } else if (b < this._s1 && e > 0) {
                for (; e > 0 && (this._s1 = l[--e]) >= b; );
                0 === e && b < this._s1 ? (this._s1 = 0) : e++,
                  (this._s2 = l[e]),
                  (this._si = e);
              }
              h =
                (e + (b - this._s1) / (this._s2 - this._s1)) * this._prec || 0;
            } else
              (c = 0 > b ? 0 : b >= 1 ? m - 1 : (m * b) >> 0),
                (h = (b - c * (1 / m)) * m);
            for (d = 1 - h, e = this._props.length; --e > -1; )
              (f = this._props[e]),
                (g = this._beziers[f][c]),
                (i = (h * h * g.da + 3 * d * (h * g.ca + d * g.ba)) * h + g.a),
                this._mod[f] && (i = this._mod[f](i, o)),
                n[f] ? o[f](i) : (o[f] = i);
            if (this._autoRotate) {
              var q,
                r,
                s,
                t,
                u,
                v,
                w,
                x = this._autoRotate;
              for (e = x.length; --e > -1; )
                (f = x[e][2]),
                  (v = x[e][3] || 0),
                  (w = x[e][4] === !0 ? 1 : a),
                  (g = this._beziers[x[e][0]]),
                  (q = this._beziers[x[e][1]]),
                  g &&
                    q &&
                    ((g = g[c]),
                    (q = q[c]),
                    (r = g.a + (g.b - g.a) * h),
                    (t = g.b + (g.c - g.b) * h),
                    (r += (t - r) * h),
                    (t += (g.c + (g.d - g.c) * h - t) * h),
                    (s = q.a + (q.b - q.a) * h),
                    (u = q.b + (q.c - q.b) * h),
                    (s += (u - s) * h),
                    (u += (q.c + (q.d - q.c) * h - u) * h),
                    (i = p
                      ? Math.atan2(u - s, t - r) * w + v
                      : this._initialRotations[e]),
                    this._mod[f] && (i = this._mod[f](i, o)),
                    n[f] ? o[f](i) : (o[f] = i));
            }
          },
        }),
        q = p.prototype;
      (p.bezierThrough = l),
        (p.cubicToQuadratic = i),
        (p._autoCSS = !0),
        (p.quadraticToCubic = function (a, b, c) {
          return new g(a, (2 * b + a) / 3, (2 * b + c) / 3, c);
        }),
        (p._cssRegister = function () {
          var a = f.CSSPlugin;
          if (a) {
            var b = a._internals,
              c = b._parseToProxy,
              d = b._setPluginRatio,
              e = b.CSSPropTween;
            b._registerComplexSpecialProp("bezier", {
              parser: function (a, b, f, g, h, i) {
                b instanceof Array && (b = { values: b }), (i = new p());
                var j,
                  k,
                  l,
                  m = b.values,
                  n = m.length - 1,
                  o = [],
                  q = {};
                if (0 > n) return h;
                for (j = 0; n >= j; j++)
                  (l = c(a, m[j], g, h, i, n !== j)), (o[j] = l.end);
                for (k in b) q[k] = b[k];
                return (
                  (q.values = o),
                  (h = new e(a, "bezier", 0, 0, l.pt, 2)),
                  (h.data = l),
                  (h.plugin = i),
                  (h.setRatio = d),
                  0 === q.autoRotate && (q.autoRotate = !0),
                  !q.autoRotate ||
                    q.autoRotate instanceof Array ||
                    ((j = q.autoRotate === !0 ? 0 : Number(q.autoRotate)),
                    (q.autoRotate =
                      null != l.end.left
                        ? [["left", "top", "rotation", j, !1]]
                        : null != l.end.x
                        ? [["x", "y", "rotation", j, !1]]
                        : !1)),
                  q.autoRotate &&
                    (g._transform || g._enableTransforms(!1),
                    (l.autoRotate = g._target._gsTransform),
                    (l.proxy.rotation = l.autoRotate.rotation || 0),
                    g._overwriteProps.push("rotation")),
                  i._onInitTween(l.proxy, q, g._tween),
                  h
                );
              },
            });
          }
        }),
        (q._mod = function (a) {
          for (var b, c = this._overwriteProps, d = c.length; --d > -1; )
            (b = a[c[d]]), b && "function" == typeof b && (this._mod[c[d]] = b);
        }),
        (q._kill = function (a) {
          var b,
            c,
            d = this._props;
          for (b in this._beziers)
            if (b in a)
              for (
                delete this._beziers[b], delete this._func[b], c = d.length;
                --c > -1;

              )
                d[c] === b && d.splice(c, 1);
          if ((d = this._autoRotate))
            for (c = d.length; --c > -1; ) a[d[c][2]] && d.splice(c, 1);
          return this._super._kill.call(this, a);
        });
    })(),
    _gsScope._gsDefine(
      "plugins.CSSPlugin",
      ["plugins.TweenPlugin", "TweenLite"],
      function (a, b) {
        var c,
          d,
          e,
          f,
          g = function () {
            a.call(this, "css"),
              (this._overwriteProps.length = 0),
              (this.setRatio = g.prototype.setRatio);
          },
          h = _gsScope._gsDefine.globals,
          i = {},
          j = (g.prototype = new a("css"));
        (j.constructor = g),
          (g.version = "1.19.0"),
          (g.API = 2),
          (g.defaultTransformPerspective = 0),
          (g.defaultSkewType = "compensated"),
          (g.defaultSmoothOrigin = !0),
          (j = "px"),
          (g.suffixMap = {
            top: j,
            right: j,
            bottom: j,
            left: j,
            width: j,
            height: j,
            fontSize: j,
            padding: j,
            margin: j,
            perspective: j,
            lineHeight: "",
          });
        var k,
          l,
          m,
          n,
          o,
          p,
          q,
          r,
          s = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
          t = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
          u = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
          v = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
          w = /(?:\d|\-|\+|=|#|\.)*/g,
          x = /opacity *= *([^)]*)/i,
          y = /opacity:([^;]*)/i,
          z = /alpha\(opacity *=.+?\)/i,
          A = /^(rgb|hsl)/,
          B = /([A-Z])/g,
          C = /-([a-z])/gi,
          D = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
          E = function (a, b) {
            return b.toUpperCase();
          },
          F = /(?:Left|Right|Width)/i,
          G = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
          H = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
          I = /,(?=[^\)]*(?:\(|$))/gi,
          J = /[\s,\(]/i,
          K = Math.PI / 180,
          L = 180 / Math.PI,
          M = {},
          N = document,
          O = function (a) {
            return N.createElementNS
              ? N.createElementNS("http://www.w3.org/1999/xhtml", a)
              : N.createElement(a);
          },
          P = O("div"),
          Q = O("img"),
          R = (g._internals = { _specialProps: i }),
          S = navigator.userAgent,
          T = (function () {
            var a = S.indexOf("Android"),
              b = O("a");
            return (
              (m =
                -1 !== S.indexOf("Safari") &&
                -1 === S.indexOf("Chrome") &&
                (-1 === a || Number(S.substr(a + 8, 1)) > 3)),
              (o = m && Number(S.substr(S.indexOf("Version/") + 8, 1)) < 6),
              (n = -1 !== S.indexOf("Firefox")),
              (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(S) ||
                /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(S)) &&
                (p = parseFloat(RegExp.$1)),
              b
                ? ((b.style.cssText = "top:1px;opacity:.55;"),
                  /^0.55/.test(b.style.opacity))
                : !1
            );
          })(),
          U = function (a) {
            return x.test(
              "string" == typeof a
                ? a
                : (a.currentStyle ? a.currentStyle.filter : a.style.filter) ||
                    ""
            )
              ? parseFloat(RegExp.$1) / 100
              : 1;
          },
          V = function (a) {
            window.console && console.log(a);
          },
          W = "",
          X = "",
          Y = function (a, b) {
            b = b || P;
            var c,
              d,
              e = b.style;
            if (void 0 !== e[a]) return a;
            for (
              a = a.charAt(0).toUpperCase() + a.substr(1),
                c = ["O", "Moz", "ms", "Ms", "Webkit"],
                d = 5;
              --d > -1 && void 0 === e[c[d] + a];

            );
            return d >= 0
              ? ((X = 3 === d ? "ms" : c[d]),
                (W = "-" + X.toLowerCase() + "-"),
                X + a)
              : null;
          },
          Z = N.defaultView ? N.defaultView.getComputedStyle : function () {},
          $ = (g.getStyle = function (a, b, c, d, e) {
            var f;
            return T || "opacity" !== b
              ? (!d && a.style[b]
                  ? (f = a.style[b])
                  : (c = c || Z(a))
                  ? (f =
                      c[b] ||
                      c.getPropertyValue(b) ||
                      c.getPropertyValue(b.replace(B, "-$1").toLowerCase()))
                  : a.currentStyle && (f = a.currentStyle[b]),
                null == e ||
                (f && "none" !== f && "auto" !== f && "auto auto" !== f)
                  ? f
                  : e)
              : U(a);
          }),
          _ = (R.convertToPixels = function (a, c, d, e, f) {
            if ("px" === e || !e) return d;
            if ("auto" === e || !d) return 0;
            var h,
              i,
              j,
              k = F.test(c),
              l = a,
              m = P.style,
              n = 0 > d,
              o = 1 === d;
            if (
              (n && (d = -d),
              o && (d *= 100),
              "%" === e && -1 !== c.indexOf("border"))
            )
              h = (d / 100) * (k ? a.clientWidth : a.clientHeight);
            else {
              if (
                ((m.cssText =
                  "border:0 solid red;position:" +
                  $(a, "position") +
                  ";line-height:0;"),
                "%" !== e &&
                  l.appendChild &&
                  "v" !== e.charAt(0) &&
                  "rem" !== e)
              )
                m[k ? "borderLeftWidth" : "borderTopWidth"] = d + e;
              else {
                if (
                  ((l = a.parentNode || N.body),
                  (i = l._gsCache),
                  (j = b.ticker.frame),
                  i && k && i.time === j)
                )
                  return (i.width * d) / 100;
                m[k ? "width" : "height"] = d + e;
              }
              l.appendChild(P),
                (h = parseFloat(P[k ? "offsetWidth" : "offsetHeight"])),
                l.removeChild(P),
                k &&
                  "%" === e &&
                  g.cacheWidths !== !1 &&
                  ((i = l._gsCache = l._gsCache || {}),
                  (i.time = j),
                  (i.width = (h / d) * 100)),
                0 !== h || f || (h = _(a, c, d, e, !0));
            }
            return o && (h /= 100), n ? -h : h;
          }),
          aa = (R.calculateOffset = function (a, b, c) {
            if ("absolute" !== $(a, "position", c)) return 0;
            var d = "left" === b ? "Left" : "Top",
              e = $(a, "margin" + d, c);
            return (
              a["offset" + d] - (_(a, b, parseFloat(e), e.replace(w, "")) || 0)
            );
          }),
          ba = function (a, b) {
            var c,
              d,
              e,
              f = {};
            if ((b = b || Z(a, null)))
              if ((c = b.length))
                for (; --c > -1; )
                  (e = b[c]),
                    (-1 === e.indexOf("-transform") || Ca === e) &&
                      (f[e.replace(C, E)] = b.getPropertyValue(e));
              else
                for (c in b)
                  (-1 === c.indexOf("Transform") || Ba === c) && (f[c] = b[c]);
            else if ((b = a.currentStyle || a.style))
              for (c in b)
                "string" == typeof c &&
                  void 0 === f[c] &&
                  (f[c.replace(C, E)] = b[c]);
            return (
              T || (f.opacity = U(a)),
              (d = Pa(a, b, !1)),
              (f.rotation = d.rotation),
              (f.skewX = d.skewX),
              (f.scaleX = d.scaleX),
              (f.scaleY = d.scaleY),
              (f.x = d.x),
              (f.y = d.y),
              Ea &&
                ((f.z = d.z),
                (f.rotationX = d.rotationX),
                (f.rotationY = d.rotationY),
                (f.scaleZ = d.scaleZ)),
              f.filters && delete f.filters,
              f
            );
          },
          ca = function (a, b, c, d, e) {
            var f,
              g,
              h,
              i = {},
              j = a.style;
            for (g in c)
              "cssText" !== g &&
                "length" !== g &&
                isNaN(g) &&
                (b[g] !== (f = c[g]) || (e && e[g])) &&
                -1 === g.indexOf("Origin") &&
                ("number" == typeof f || "string" == typeof f) &&
                ((i[g] =
                  "auto" !== f || ("left" !== g && "top" !== g)
                    ? ("" !== f && "auto" !== f && "none" !== f) ||
                      "string" != typeof b[g] ||
                      "" === b[g].replace(v, "")
                      ? f
                      : 0
                    : aa(a, g)),
                void 0 !== j[g] && (h = new ra(j, g, j[g], h)));
            if (d) for (g in d) "className" !== g && (i[g] = d[g]);
            return { difs: i, firstMPT: h };
          },
          da = { width: ["Left", "Right"], height: ["Top", "Bottom"] },
          ea = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
          fa = function (a, b, c) {
            if ("svg" === (a.nodeName + "").toLowerCase())
              return (c || Z(a))[b] || 0;
            if (a.getBBox && Ma(a)) return a.getBBox()[b] || 0;
            var d = parseFloat("width" === b ? a.offsetWidth : a.offsetHeight),
              e = da[b],
              f = e.length;
            for (c = c || Z(a, null); --f > -1; )
              (d -= parseFloat($(a, "padding" + e[f], c, !0)) || 0),
                (d -= parseFloat($(a, "border" + e[f] + "Width", c, !0)) || 0);
            return d;
          },
          ga = function (a, b) {
            if ("contain" === a || "auto" === a || "auto auto" === a)
              return a + " ";
            (null == a || "" === a) && (a = "0 0");
            var c,
              d = a.split(" "),
              e =
                -1 !== a.indexOf("left")
                  ? "0%"
                  : -1 !== a.indexOf("right")
                  ? "100%"
                  : d[0],
              f =
                -1 !== a.indexOf("top")
                  ? "0%"
                  : -1 !== a.indexOf("bottom")
                  ? "100%"
                  : d[1];
            if (d.length > 3 && !b) {
              for (
                d = a.split(", ").join(",").split(","), a = [], c = 0;
                c < d.length;
                c++
              )
                a.push(ga(d[c]));
              return a.join(",");
            }
            return (
              null == f
                ? (f = "center" === e ? "50%" : "0")
                : "center" === f && (f = "50%"),
              ("center" === e ||
                (isNaN(parseFloat(e)) && -1 === (e + "").indexOf("="))) &&
                (e = "50%"),
              (a = e + " " + f + (d.length > 2 ? " " + d[2] : "")),
              b &&
                ((b.oxp = -1 !== e.indexOf("%")),
                (b.oyp = -1 !== f.indexOf("%")),
                (b.oxr = "=" === e.charAt(1)),
                (b.oyr = "=" === f.charAt(1)),
                (b.ox = parseFloat(e.replace(v, ""))),
                (b.oy = parseFloat(f.replace(v, ""))),
                (b.v = a)),
              b || a
            );
          },
          ha = function (a, b) {
            return (
              "function" == typeof a && (a = a(r, q)),
              "string" == typeof a && "=" === a.charAt(1)
                ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2))
                : parseFloat(a) - parseFloat(b) || 0
            );
          },
          ia = function (a, b) {
            return (
              "function" == typeof a && (a = a(r, q)),
              null == a
                ? b
                : "string" == typeof a && "=" === a.charAt(1)
                ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) + b
                : parseFloat(a) || 0
            );
          },
          ja = function (a, b, c, d) {
            var e,
              f,
              g,
              h,
              i,
              j = 1e-6;
            return (
              "function" == typeof a && (a = a(r, q)),
              null == a
                ? (h = b)
                : "number" == typeof a
                ? (h = a)
                : ((e = 360),
                  (f = a.split("_")),
                  (i = "=" === a.charAt(1)),
                  (g =
                    (i
                      ? parseInt(a.charAt(0) + "1", 10) *
                        parseFloat(f[0].substr(2))
                      : parseFloat(f[0])) *
                      (-1 === a.indexOf("rad") ? 1 : L) -
                    (i ? 0 : b)),
                  f.length &&
                    (d && (d[c] = b + g),
                    -1 !== a.indexOf("short") &&
                      ((g %= e),
                      g !== g % (e / 2) && (g = 0 > g ? g + e : g - e)),
                    -1 !== a.indexOf("_cw") && 0 > g
                      ? (g = ((g + 9999999999 * e) % e) - ((g / e) | 0) * e)
                      : -1 !== a.indexOf("ccw") &&
                        g > 0 &&
                        (g = ((g - 9999999999 * e) % e) - ((g / e) | 0) * e)),
                  (h = b + g)),
              j > h && h > -j && (h = 0),
              h
            );
          },
          ka = {
            aqua: [0, 255, 255],
            lime: [0, 255, 0],
            silver: [192, 192, 192],
            black: [0, 0, 0],
            maroon: [128, 0, 0],
            teal: [0, 128, 128],
            blue: [0, 0, 255],
            navy: [0, 0, 128],
            white: [255, 255, 255],
            fuchsia: [255, 0, 255],
            olive: [128, 128, 0],
            yellow: [255, 255, 0],
            orange: [255, 165, 0],
            gray: [128, 128, 128],
            purple: [128, 0, 128],
            green: [0, 128, 0],
            red: [255, 0, 0],
            pink: [255, 192, 203],
            cyan: [0, 255, 255],
            transparent: [255, 255, 255, 0],
          },
          la = function (a, b, c) {
            return (
              (a = 0 > a ? a + 1 : a > 1 ? a - 1 : a),
              (255 *
                (1 > 6 * a
                  ? b + (c - b) * a * 6
                  : 0.5 > a
                  ? c
                  : 2 > 3 * a
                  ? b + (c - b) * (2 / 3 - a) * 6
                  : b) +
                0.5) |
                0
            );
          },
          ma = (g.parseColor = function (a, b) {
            var c, d, e, f, g, h, i, j, k, l, m;
            if (a)
              if ("number" == typeof a) c = [a >> 16, (a >> 8) & 255, 255 & a];
              else {
                if (
                  ("," === a.charAt(a.length - 1) &&
                    (a = a.substr(0, a.length - 1)),
                  ka[a])
                )
                  c = ka[a];
                else if ("#" === a.charAt(0))
                  4 === a.length &&
                    ((d = a.charAt(1)),
                    (e = a.charAt(2)),
                    (f = a.charAt(3)),
                    (a = "#" + d + d + e + e + f + f)),
                    (a = parseInt(a.substr(1), 16)),
                    (c = [a >> 16, (a >> 8) & 255, 255 & a]);
                else if ("hsl" === a.substr(0, 3))
                  if (((c = m = a.match(s)), b)) {
                    if (-1 !== a.indexOf("=")) return a.match(t);
                  } else
                    (g = (Number(c[0]) % 360) / 360),
                      (h = Number(c[1]) / 100),
                      (i = Number(c[2]) / 100),
                      (e = 0.5 >= i ? i * (h + 1) : i + h - i * h),
                      (d = 2 * i - e),
                      c.length > 3 && (c[3] = Number(a[3])),
                      (c[0] = la(g + 1 / 3, d, e)),
                      (c[1] = la(g, d, e)),
                      (c[2] = la(g - 1 / 3, d, e));
                else c = a.match(s) || ka.transparent;
                (c[0] = Number(c[0])),
                  (c[1] = Number(c[1])),
                  (c[2] = Number(c[2])),
                  c.length > 3 && (c[3] = Number(c[3]));
              }
            else c = ka.black;
            return (
              b &&
                !m &&
                ((d = c[0] / 255),
                (e = c[1] / 255),
                (f = c[2] / 255),
                (j = Math.max(d, e, f)),
                (k = Math.min(d, e, f)),
                (i = (j + k) / 2),
                j === k
                  ? (g = h = 0)
                  : ((l = j - k),
                    (h = i > 0.5 ? l / (2 - j - k) : l / (j + k)),
                    (g =
                      j === d
                        ? (e - f) / l + (f > e ? 6 : 0)
                        : j === e
                        ? (f - d) / l + 2
                        : (d - e) / l + 4),
                    (g *= 60)),
                (c[0] = (g + 0.5) | 0),
                (c[1] = (100 * h + 0.5) | 0),
                (c[2] = (100 * i + 0.5) | 0)),
              c
            );
          }),
          na = function (a, b) {
            var c,
              d,
              e,
              f = a.match(oa) || [],
              g = 0,
              h = f.length ? "" : a;
            for (c = 0; c < f.length; c++)
              (d = f[c]),
                (e = a.substr(g, a.indexOf(d, g) - g)),
                (g += e.length + d.length),
                (d = ma(d, b)),
                3 === d.length && d.push(1),
                (h +=
                  e +
                  (b
                    ? "hsla(" + d[0] + "," + d[1] + "%," + d[2] + "%," + d[3]
                    : "rgba(" + d.join(",")) +
                  ")");
            return h + a.substr(g);
          },
          oa =
            "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
        for (j in ka) oa += "|" + j + "\\b";
        (oa = new RegExp(oa + ")", "gi")),
          (g.colorStringFilter = function (a) {
            var b,
              c = a[0] + a[1];
            oa.test(c) &&
              ((b = -1 !== c.indexOf("hsl(") || -1 !== c.indexOf("hsla(")),
              (a[0] = na(a[0], b)),
              (a[1] = na(a[1], b))),
              (oa.lastIndex = 0);
          }),
          b.defaultStringFilter ||
            (b.defaultStringFilter = g.colorStringFilter);
        var pa = function (a, b, c, d) {
            if (null == a)
              return function (a) {
                return a;
              };
            var e,
              f = b ? (a.match(oa) || [""])[0] : "",
              g = a.split(f).join("").match(u) || [],
              h = a.substr(0, a.indexOf(g[0])),
              i = ")" === a.charAt(a.length - 1) ? ")" : "",
              j = -1 !== a.indexOf(" ") ? " " : ",",
              k = g.length,
              l = k > 0 ? g[0].replace(s, "") : "";
            return k
              ? (e = b
                  ? function (a) {
                      var b, m, n, o;
                      if ("number" == typeof a) a += l;
                      else if (d && I.test(a)) {
                        for (
                          o = a.replace(I, "|").split("|"), n = 0;
                          n < o.length;
                          n++
                        )
                          o[n] = e(o[n]);
                        return o.join(",");
                      }
                      if (
                        ((b = (a.match(oa) || [f])[0]),
                        (m = a.split(b).join("").match(u) || []),
                        (n = m.length),
                        k > n--)
                      )
                        for (; ++n < k; )
                          m[n] = c ? m[((n - 1) / 2) | 0] : g[n];
                      return (
                        h +
                        m.join(j) +
                        j +
                        b +
                        i +
                        (-1 !== a.indexOf("inset") ? " inset" : "")
                      );
                    }
                  : function (a) {
                      var b, f, m;
                      if ("number" == typeof a) a += l;
                      else if (d && I.test(a)) {
                        for (
                          f = a.replace(I, "|").split("|"), m = 0;
                          m < f.length;
                          m++
                        )
                          f[m] = e(f[m]);
                        return f.join(",");
                      }
                      if (((b = a.match(u) || []), (m = b.length), k > m--))
                        for (; ++m < k; )
                          b[m] = c ? b[((m - 1) / 2) | 0] : g[m];
                      return h + b.join(j) + i;
                    })
              : function (a) {
                  return a;
                };
          },
          qa = function (a) {
            return (
              (a = a.split(",")),
              function (b, c, d, e, f, g, h) {
                var i,
                  j = (c + "").split(" ");
                for (h = {}, i = 0; 4 > i; i++)
                  h[a[i]] = j[i] = j[i] || j[((i - 1) / 2) >> 0];
                return e.parse(b, h, f, g);
              }
            );
          },
          ra =
            ((R._setPluginRatio = function (a) {
              this.plugin.setRatio(a);
              for (
                var b,
                  c,
                  d,
                  e,
                  f,
                  g = this.data,
                  h = g.proxy,
                  i = g.firstMPT,
                  j = 1e-6;
                i;

              )
                (b = h[i.v]),
                  i.r ? (b = Math.round(b)) : j > b && b > -j && (b = 0),
                  (i.t[i.p] = b),
                  (i = i._next);
              if (
                (g.autoRotate &&
                  (g.autoRotate.rotation = g.mod
                    ? g.mod(h.rotation, this.t)
                    : h.rotation),
                1 === a || 0 === a)
              )
                for (i = g.firstMPT, f = 1 === a ? "e" : "b"; i; ) {
                  if (((c = i.t), c.type)) {
                    if (1 === c.type) {
                      for (e = c.xs0 + c.s + c.xs1, d = 1; d < c.l; d++)
                        e += c["xn" + d] + c["xs" + (d + 1)];
                      c[f] = e;
                    }
                  } else c[f] = c.s + c.xs0;
                  i = i._next;
                }
            }),
            function (a, b, c, d, e) {
              (this.t = a),
                (this.p = b),
                (this.v = c),
                (this.r = e),
                d && ((d._prev = this), (this._next = d));
            }),
          sa =
            ((R._parseToProxy = function (a, b, c, d, e, f) {
              var g,
                h,
                i,
                j,
                k,
                l = d,
                m = {},
                n = {},
                o = c._transform,
                p = M;
              for (
                c._transform = null,
                  M = b,
                  d = k = c.parse(a, b, d, e),
                  M = p,
                  f &&
                    ((c._transform = o),
                    l && ((l._prev = null), l._prev && (l._prev._next = null)));
                d && d !== l;

              ) {
                if (
                  d.type <= 1 &&
                  ((h = d.p),
                  (n[h] = d.s + d.c),
                  (m[h] = d.s),
                  f || ((j = new ra(d, "s", h, j, d.r)), (d.c = 0)),
                  1 === d.type)
                )
                  for (g = d.l; --g > 0; )
                    (i = "xn" + g),
                      (h = d.p + "_" + i),
                      (n[h] = d.data[i]),
                      (m[h] = d[i]),
                      f || (j = new ra(d, i, h, j, d.rxp[i]));
                d = d._next;
              }
              return { proxy: m, end: n, firstMPT: j, pt: k };
            }),
            (R.CSSPropTween = function (a, b, d, e, g, h, i, j, k, l, m) {
              (this.t = a),
                (this.p = b),
                (this.s = d),
                (this.c = e),
                (this.n = i || b),
                a instanceof sa || f.push(this.n),
                (this.r = j),
                (this.type = h || 0),
                k && ((this.pr = k), (c = !0)),
                (this.b = void 0 === l ? d : l),
                (this.e = void 0 === m ? d + e : m),
                g && ((this._next = g), (g._prev = this));
            })),
          ta = function (a, b, c, d, e, f) {
            var g = new sa(a, b, c, d - c, e, -1, f);
            return (g.b = c), (g.e = g.xs0 = d), g;
          },
          ua = (g.parseComplex = function (a, b, c, d, e, f, h, i, j, l) {
            (c = c || f || ""),
              "function" == typeof d && (d = d(r, q)),
              (h = new sa(a, b, 0, 0, h, l ? 2 : 1, null, !1, i, c, d)),
              (d += ""),
              e &&
                oa.test(d + c) &&
                ((d = [c, d]), g.colorStringFilter(d), (c = d[0]), (d = d[1]));
            var m,
              n,
              o,
              p,
              u,
              v,
              w,
              x,
              y,
              z,
              A,
              B,
              C,
              D = c.split(", ").join(",").split(" "),
              E = d.split(", ").join(",").split(" "),
              F = D.length,
              G = k !== !1;
            for (
              (-1 !== d.indexOf(",") || -1 !== c.indexOf(",")) &&
                ((D = D.join(" ").replace(I, ", ").split(" ")),
                (E = E.join(" ").replace(I, ", ").split(" ")),
                (F = D.length)),
                F !== E.length && ((D = (f || "").split(" ")), (F = D.length)),
                h.plugin = j,
                h.setRatio = l,
                oa.lastIndex = 0,
                m = 0;
              F > m;
              m++
            )
              if (((p = D[m]), (u = E[m]), (x = parseFloat(p)), x || 0 === x))
                h.appendXtra(
                  "",
                  x,
                  ha(u, x),
                  u.replace(t, ""),
                  G && -1 !== u.indexOf("px"),
                  !0
                );
              else if (e && oa.test(p))
                (B = u.indexOf(")") + 1),
                  (B = ")" + (B ? u.substr(B) : "")),
                  (C = -1 !== u.indexOf("hsl") && T),
                  (p = ma(p, C)),
                  (u = ma(u, C)),
                  (y = p.length + u.length > 6),
                  y && !T && 0 === u[3]
                    ? ((h["xs" + h.l] += h.l ? " transparent" : "transparent"),
                      (h.e = h.e.split(E[m]).join("transparent")))
                    : (T || (y = !1),
                      C
                        ? h
                            .appendXtra(
                              y ? "hsla(" : "hsl(",
                              p[0],
                              ha(u[0], p[0]),
                              ",",
                              !1,
                              !0
                            )
                            .appendXtra("", p[1], ha(u[1], p[1]), "%,", !1)
                            .appendXtra(
                              "",
                              p[2],
                              ha(u[2], p[2]),
                              y ? "%," : "%" + B,
                              !1
                            )
                        : h
                            .appendXtra(
                              y ? "rgba(" : "rgb(",
                              p[0],
                              u[0] - p[0],
                              ",",
                              !0,
                              !0
                            )
                            .appendXtra("", p[1], u[1] - p[1], ",", !0)
                            .appendXtra("", p[2], u[2] - p[2], y ? "," : B, !0),
                      y &&
                        ((p = p.length < 4 ? 1 : p[3]),
                        h.appendXtra(
                          "",
                          p,
                          (u.length < 4 ? 1 : u[3]) - p,
                          B,
                          !1
                        ))),
                  (oa.lastIndex = 0);
              else if ((v = p.match(s))) {
                if (((w = u.match(t)), !w || w.length !== v.length)) return h;
                for (o = 0, n = 0; n < v.length; n++)
                  (A = v[n]),
                    (z = p.indexOf(A, o)),
                    h.appendXtra(
                      p.substr(o, z - o),
                      Number(A),
                      ha(w[n], A),
                      "",
                      G && "px" === p.substr(z + A.length, 2),
                      0 === n
                    ),
                    (o = z + A.length);
                h["xs" + h.l] += p.substr(o);
              } else h["xs" + h.l] += h.l || h["xs" + h.l] ? " " + u : u;
            if (-1 !== d.indexOf("=") && h.data) {
              for (B = h.xs0 + h.data.s, m = 1; m < h.l; m++)
                B += h["xs" + m] + h.data["xn" + m];
              h.e = B + h["xs" + m];
            }
            return h.l || ((h.type = -1), (h.xs0 = h.e)), h.xfirst || h;
          }),
          va = 9;
        for (j = sa.prototype, j.l = j.pr = 0; --va > 0; )
          (j["xn" + va] = 0), (j["xs" + va] = "");
        (j.xs0 = ""),
          (j._next = j._prev = j.xfirst = j.data = j.plugin = j.setRatio = j.rxp = null),
          (j.appendXtra = function (a, b, c, d, e, f) {
            var g = this,
              h = g.l;
            return (
              (g["xs" + h] += f && (h || g["xs" + h]) ? " " + a : a || ""),
              c || 0 === h || g.plugin
                ? (g.l++,
                  (g.type = g.setRatio ? 2 : 1),
                  (g["xs" + g.l] = d || ""),
                  h > 0
                    ? ((g.data["xn" + h] = b + c),
                      (g.rxp["xn" + h] = e),
                      (g["xn" + h] = b),
                      g.plugin ||
                        ((g.xfirst = new sa(
                          g,
                          "xn" + h,
                          b,
                          c,
                          g.xfirst || g,
                          0,
                          g.n,
                          e,
                          g.pr
                        )),
                        (g.xfirst.xs0 = 0)),
                      g)
                    : ((g.data = { s: b + c }),
                      (g.rxp = {}),
                      (g.s = b),
                      (g.c = c),
                      (g.r = e),
                      g))
                : ((g["xs" + h] += b + (d || "")), g)
            );
          });
        var wa = function (a, b) {
            (b = b || {}),
              (this.p = b.prefix ? Y(a) || a : a),
              (i[a] = i[this.p] = this),
              (this.format =
                b.formatter ||
                pa(b.defaultValue, b.color, b.collapsible, b.multi)),
              b.parser && (this.parse = b.parser),
              (this.clrs = b.color),
              (this.multi = b.multi),
              (this.keyword = b.keyword),
              (this.dflt = b.defaultValue),
              (this.pr = b.priority || 0);
          },
          xa = (R._registerComplexSpecialProp = function (a, b, c) {
            "object" != typeof b && (b = { parser: c });
            var d,
              e,
              f = a.split(","),
              g = b.defaultValue;
            for (c = c || [g], d = 0; d < f.length; d++)
              (b.prefix = 0 === d && b.prefix),
                (b.defaultValue = c[d] || g),
                (e = new wa(f[d], b));
          }),
          ya = (R._registerPluginProp = function (a) {
            if (!i[a]) {
              var b = a.charAt(0).toUpperCase() + a.substr(1) + "Plugin";
              xa(a, {
                parser: function (a, c, d, e, f, g, j) {
                  return k
                    ? (k._cssRegister(), i[d].parse(a, c, d, e, f, g, j))
                    : (V("Error: " + b + " js file not loaded."), f);
                },
              });
            }
          });
        (j = wa.prototype),
          (j.parseComplex = function (a, b, c, d, e, f) {
            var g,
              h,
              i,
              j,
              k,
              l,
              m = this.keyword;
            if (
              (this.multi &&
                (I.test(c) || I.test(b)
                  ? ((h = b.replace(I, "|").split("|")),
                    (i = c.replace(I, "|").split("|")))
                  : m && ((h = [b]), (i = [c]))),
              i)
            ) {
              for (
                j = i.length > h.length ? i.length : h.length, g = 0;
                j > g;
                g++
              )
                (b = h[g] = h[g] || this.dflt),
                  (c = i[g] = i[g] || this.dflt),
                  m &&
                    ((k = b.indexOf(m)),
                    (l = c.indexOf(m)),
                    k !== l &&
                      (-1 === l
                        ? (h[g] = h[g].split(m).join(""))
                        : -1 === k && (h[g] += " " + m)));
              (b = h.join(", ")), (c = i.join(", "));
            }
            return ua(a, this.p, b, c, this.clrs, this.dflt, d, this.pr, e, f);
          }),
          (j.parse = function (a, b, c, d, f, g, h) {
            return this.parseComplex(
              a.style,
              this.format($(a, this.p, e, !1, this.dflt)),
              this.format(b),
              f,
              g
            );
          }),
          (g.registerSpecialProp = function (a, b, c) {
            xa(a, {
              parser: function (a, d, e, f, g, h, i) {
                var j = new sa(a, e, 0, 0, g, 2, e, !1, c);
                return (j.plugin = h), (j.setRatio = b(a, d, f._tween, e)), j;
              },
              priority: c,
            });
          }),
          (g.useSVGTransformAttr = m || n);
        var za,
          Aa = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(
            ","
          ),
          Ba = Y("transform"),
          Ca = W + "transform",
          Da = Y("transformOrigin"),
          Ea = null !== Y("perspective"),
          Fa = (R.Transform = function () {
            (this.perspective = parseFloat(g.defaultTransformPerspective) || 0),
              (this.force3D =
                g.defaultForce3D !== !1 && Ea
                  ? g.defaultForce3D || "auto"
                  : !1);
          }),
          Ga = window.SVGElement,
          Ha = function (a, b, c) {
            var d,
              e = N.createElementNS("http://www.w3.org/2000/svg", a),
              f = /([a-z])([A-Z])/g;
            for (d in c)
              e.setAttributeNS(null, d.replace(f, "$1-$2").toLowerCase(), c[d]);
            return b.appendChild(e), e;
          },
          Ia = N.documentElement,
          Ja = (function () {
            var a,
              b,
              c,
              d = p || (/Android/i.test(S) && !window.chrome);
            return (
              N.createElementNS &&
                !d &&
                ((a = Ha("svg", Ia)),
                (b = Ha("rect", a, { width: 100, height: 50, x: 100 })),
                (c = b.getBoundingClientRect().width),
                (b.style[Da] = "50% 50%"),
                (b.style[Ba] = "scaleX(0.5)"),
                (d = c === b.getBoundingClientRect().width && !(n && Ea)),
                Ia.removeChild(a)),
              d
            );
          })(),
          Ka = function (a, b, c, d, e, f) {
            var h,
              i,
              j,
              k,
              l,
              m,
              n,
              o,
              p,
              q,
              r,
              s,
              t,
              u,
              v = a._gsTransform,
              w = Oa(a, !0);
            v && ((t = v.xOrigin), (u = v.yOrigin)),
              (!d || (h = d.split(" ")).length < 2) &&
                ((n = a.getBBox()),
                (b = ga(b).split(" ")),
                (h = [
                  (-1 !== b[0].indexOf("%")
                    ? (parseFloat(b[0]) / 100) * n.width
                    : parseFloat(b[0])) + n.x,
                  (-1 !== b[1].indexOf("%")
                    ? (parseFloat(b[1]) / 100) * n.height
                    : parseFloat(b[1])) + n.y,
                ])),
              (c.xOrigin = k = parseFloat(h[0])),
              (c.yOrigin = l = parseFloat(h[1])),
              d &&
                w !== Na &&
                ((m = w[0]),
                (n = w[1]),
                (o = w[2]),
                (p = w[3]),
                (q = w[4]),
                (r = w[5]),
                (s = m * p - n * o),
                (i = k * (p / s) + l * (-o / s) + (o * r - p * q) / s),
                (j = k * (-n / s) + l * (m / s) - (m * r - n * q) / s),
                (k = c.xOrigin = h[0] = i),
                (l = c.yOrigin = h[1] = j)),
              v &&
                (f &&
                  ((c.xOffset = v.xOffset), (c.yOffset = v.yOffset), (v = c)),
                e || (e !== !1 && g.defaultSmoothOrigin !== !1)
                  ? ((i = k - t),
                    (j = l - u),
                    (v.xOffset += i * w[0] + j * w[2] - i),
                    (v.yOffset += i * w[1] + j * w[3] - j))
                  : (v.xOffset = v.yOffset = 0)),
              f || a.setAttribute("data-svg-origin", h.join(" "));
          },
          La = function (a) {
            try {
              return a.getBBox();
            } catch (a) {}
          },
          Ma = function (a) {
            return !!(
              Ga &&
              a.getBBox &&
              a.getCTM &&
              La(a) &&
              (!a.parentNode || (a.parentNode.getBBox && a.parentNode.getCTM))
            );
          },
          Na = [1, 0, 0, 1, 0, 0],
          Oa = function (a, b) {
            var c,
              d,
              e,
              f,
              g,
              h,
              i = a._gsTransform || new Fa(),
              j = 1e5,
              k = a.style;
            if (
              (Ba
                ? (d = $(a, Ca, null, !0))
                : a.currentStyle &&
                  ((d = a.currentStyle.filter.match(G)),
                  (d =
                    d && 4 === d.length
                      ? [
                          d[0].substr(4),
                          Number(d[2].substr(4)),
                          Number(d[1].substr(4)),
                          d[3].substr(4),
                          i.x || 0,
                          i.y || 0,
                        ].join(",")
                      : "")),
              (c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d),
              c &&
                Ba &&
                ((h = "none" === Z(a).display) || !a.parentNode) &&
                (h && ((f = k.display), (k.display = "block")),
                a.parentNode || ((g = 1), Ia.appendChild(a)),
                (d = $(a, Ca, null, !0)),
                (c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d),
                f ? (k.display = f) : h && Ta(k, "display"),
                g && Ia.removeChild(a)),
              (i.svg || (a.getBBox && Ma(a))) &&
                (c &&
                  -1 !== (k[Ba] + "").indexOf("matrix") &&
                  ((d = k[Ba]), (c = 0)),
                (e = a.getAttribute("transform")),
                c &&
                  e &&
                  (-1 !== e.indexOf("matrix")
                    ? ((d = e), (c = 0))
                    : -1 !== e.indexOf("translate") &&
                      ((d =
                        "matrix(1,0,0,1," +
                        e.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") +
                        ")"),
                      (c = 0)))),
              c)
            )
              return Na;
            for (e = (d || "").match(s) || [], va = e.length; --va > -1; )
              (f = Number(e[va])),
                (e[va] = (g = f - (f |= 0))
                  ? ((g * j + (0 > g ? -0.5 : 0.5)) | 0) / j + f
                  : f);
            return b && e.length > 6
              ? [e[0], e[1], e[4], e[5], e[12], e[13]]
              : e;
          },
          Pa = (R.getTransform = function (a, c, d, e) {
            if (a._gsTransform && d && !e) return a._gsTransform;
            var f,
              h,
              i,
              j,
              k,
              l,
              m = d ? a._gsTransform || new Fa() : new Fa(),
              n = m.scaleX < 0,
              o = 2e-5,
              p = 1e5,
              q = Ea
                ? parseFloat($(a, Da, c, !1, "0 0 0").split(" ")[2]) ||
                  m.zOrigin ||
                  0
                : 0,
              r = parseFloat(g.defaultTransformPerspective) || 0;
            if (
              ((m.svg = !(!a.getBBox || !Ma(a))),
              m.svg &&
                (Ka(
                  a,
                  $(a, Da, c, !1, "50% 50%") + "",
                  m,
                  a.getAttribute("data-svg-origin")
                ),
                (za = g.useSVGTransformAttr || Ja)),
              (f = Oa(a)),
              f !== Na)
            ) {
              if (16 === f.length) {
                var s,
                  t,
                  u,
                  v,
                  w,
                  x = f[0],
                  y = f[1],
                  z = f[2],
                  A = f[3],
                  B = f[4],
                  C = f[5],
                  D = f[6],
                  E = f[7],
                  F = f[8],
                  G = f[9],
                  H = f[10],
                  I = f[12],
                  J = f[13],
                  K = f[14],
                  M = f[11],
                  N = Math.atan2(D, H);
                m.zOrigin &&
                  ((K = -m.zOrigin),
                  (I = F * K - f[12]),
                  (J = G * K - f[13]),
                  (K = H * K + m.zOrigin - f[14])),
                  (m.rotationX = N * L),
                  N &&
                    ((v = Math.cos(-N)),
                    (w = Math.sin(-N)),
                    (s = B * v + F * w),
                    (t = C * v + G * w),
                    (u = D * v + H * w),
                    (F = B * -w + F * v),
                    (G = C * -w + G * v),
                    (H = D * -w + H * v),
                    (M = E * -w + M * v),
                    (B = s),
                    (C = t),
                    (D = u)),
                  (N = Math.atan2(-z, H)),
                  (m.rotationY = N * L),
                  N &&
                    ((v = Math.cos(-N)),
                    (w = Math.sin(-N)),
                    (s = x * v - F * w),
                    (t = y * v - G * w),
                    (u = z * v - H * w),
                    (G = y * w + G * v),
                    (H = z * w + H * v),
                    (M = A * w + M * v),
                    (x = s),
                    (y = t),
                    (z = u)),
                  (N = Math.atan2(y, x)),
                  (m.rotation = N * L),
                  N &&
                    ((v = Math.cos(-N)),
                    (w = Math.sin(-N)),
                    (x = x * v + B * w),
                    (t = y * v + C * w),
                    (C = y * -w + C * v),
                    (D = z * -w + D * v),
                    (y = t)),
                  m.rotationX &&
                    Math.abs(m.rotationX) + Math.abs(m.rotation) > 359.9 &&
                    ((m.rotationX = m.rotation = 0),
                    (m.rotationY = 180 - m.rotationY)),
                  (m.scaleX = ((Math.sqrt(x * x + y * y) * p + 0.5) | 0) / p),
                  (m.scaleY = ((Math.sqrt(C * C + G * G) * p + 0.5) | 0) / p),
                  (m.scaleZ = ((Math.sqrt(D * D + H * H) * p + 0.5) | 0) / p),
                  m.rotationX || m.rotationY
                    ? (m.skewX = 0)
                    : ((m.skewX =
                        B || C
                          ? Math.atan2(B, C) * L + m.rotation
                          : m.skewX || 0),
                      Math.abs(m.skewX) > 90 &&
                        Math.abs(m.skewX) < 270 &&
                        (n
                          ? ((m.scaleX *= -1),
                            (m.skewX += m.rotation <= 0 ? 180 : -180),
                            (m.rotation += m.rotation <= 0 ? 180 : -180))
                          : ((m.scaleY *= -1),
                            (m.skewX += m.skewX <= 0 ? 180 : -180)))),
                  (m.perspective = M ? 1 / (0 > M ? -M : M) : 0),
                  (m.x = I),
                  (m.y = J),
                  (m.z = K),
                  m.svg &&
                    ((m.x -= m.xOrigin - (m.xOrigin * x - m.yOrigin * B)),
                    (m.y -= m.yOrigin - (m.yOrigin * y - m.xOrigin * C)));
              } else if (
                !Ea ||
                e ||
                !f.length ||
                m.x !== f[4] ||
                m.y !== f[5] ||
                (!m.rotationX && !m.rotationY)
              ) {
                var O = f.length >= 6,
                  P = O ? f[0] : 1,
                  Q = f[1] || 0,
                  R = f[2] || 0,
                  S = O ? f[3] : 1;
                (m.x = f[4] || 0),
                  (m.y = f[5] || 0),
                  (i = Math.sqrt(P * P + Q * Q)),
                  (j = Math.sqrt(S * S + R * R)),
                  (k = P || Q ? Math.atan2(Q, P) * L : m.rotation || 0),
                  (l = R || S ? Math.atan2(R, S) * L + k : m.skewX || 0),
                  Math.abs(l) > 90 &&
                    Math.abs(l) < 270 &&
                    (n
                      ? ((i *= -1),
                        (l += 0 >= k ? 180 : -180),
                        (k += 0 >= k ? 180 : -180))
                      : ((j *= -1), (l += 0 >= l ? 180 : -180))),
                  (m.scaleX = i),
                  (m.scaleY = j),
                  (m.rotation = k),
                  (m.skewX = l),
                  Ea &&
                    ((m.rotationX = m.rotationY = m.z = 0),
                    (m.perspective = r),
                    (m.scaleZ = 1)),
                  m.svg &&
                    ((m.x -= m.xOrigin - (m.xOrigin * P + m.yOrigin * R)),
                    (m.y -= m.yOrigin - (m.xOrigin * Q + m.yOrigin * S)));
              }
              m.zOrigin = q;
              for (h in m) m[h] < o && m[h] > -o && (m[h] = 0);
            }
            return (
              d &&
                ((a._gsTransform = m),
                m.svg &&
                  (za && a.style[Ba]
                    ? b.delayedCall(0.001, function () {
                        Ta(a.style, Ba);
                      })
                    : !za &&
                      a.getAttribute("transform") &&
                      b.delayedCall(0.001, function () {
                        a.removeAttribute("transform");
                      }))),
              m
            );
          }),
          Qa = function (a) {
            var b,
              c,
              d = this.data,
              e = -d.rotation * K,
              f = e + d.skewX * K,
              g = 1e5,
              h = ((Math.cos(e) * d.scaleX * g) | 0) / g,
              i = ((Math.sin(e) * d.scaleX * g) | 0) / g,
              j = ((Math.sin(f) * -d.scaleY * g) | 0) / g,
              k = ((Math.cos(f) * d.scaleY * g) | 0) / g,
              l = this.t.style,
              m = this.t.currentStyle;
            if (m) {
              (c = i), (i = -j), (j = -c), (b = m.filter), (l.filter = "");
              var n,
                o,
                q = this.t.offsetWidth,
                r = this.t.offsetHeight,
                s = "absolute" !== m.position,
                t =
                  "progid:DXImageTransform.Microsoft.Matrix(M11=" +
                  h +
                  ", M12=" +
                  i +
                  ", M21=" +
                  j +
                  ", M22=" +
                  k,
                u = d.x + (q * d.xPercent) / 100,
                v = d.y + (r * d.yPercent) / 100;
              if (
                (null != d.ox &&
                  ((n = (d.oxp ? q * d.ox * 0.01 : d.ox) - q / 2),
                  (o = (d.oyp ? r * d.oy * 0.01 : d.oy) - r / 2),
                  (u += n - (n * h + o * i)),
                  (v += o - (n * j + o * k))),
                s
                  ? ((n = q / 2),
                    (o = r / 2),
                    (t +=
                      ", Dx=" +
                      (n - (n * h + o * i) + u) +
                      ", Dy=" +
                      (o - (n * j + o * k) + v) +
                      ")"))
                  : (t += ", sizingMethod='auto expand')"),
                -1 !== b.indexOf("DXImageTransform.Microsoft.Matrix(")
                  ? (l.filter = b.replace(H, t))
                  : (l.filter = t + " " + b),
                (0 === a || 1 === a) &&
                  1 === h &&
                  0 === i &&
                  0 === j &&
                  1 === k &&
                  ((s && -1 === t.indexOf("Dx=0, Dy=0")) ||
                    (x.test(b) && 100 !== parseFloat(RegExp.$1)) ||
                    (-1 === b.indexOf(b.indexOf("Alpha")) &&
                      l.removeAttribute("filter"))),
                !s)
              ) {
                var y,
                  z,
                  A,
                  B = 8 > p ? 1 : -1;
                for (
                  n = d.ieOffsetX || 0,
                    o = d.ieOffsetY || 0,
                    d.ieOffsetX = Math.round(
                      (q - ((0 > h ? -h : h) * q + (0 > i ? -i : i) * r)) / 2 +
                        u
                    ),
                    d.ieOffsetY = Math.round(
                      (r - ((0 > k ? -k : k) * r + (0 > j ? -j : j) * q)) / 2 +
                        v
                    ),
                    va = 0;
                  4 > va;
                  va++
                )
                  (z = ea[va]),
                    (y = m[z]),
                    (c =
                      -1 !== y.indexOf("px")
                        ? parseFloat(y)
                        : _(this.t, z, parseFloat(y), y.replace(w, "")) || 0),
                    (A =
                      c !== d[z]
                        ? 2 > va
                          ? -d.ieOffsetX
                          : -d.ieOffsetY
                        : 2 > va
                        ? n - d.ieOffsetX
                        : o - d.ieOffsetY),
                    (l[z] =
                      (d[z] = Math.round(
                        c - A * (0 === va || 2 === va ? 1 : B)
                      )) + "px");
              }
            }
          },
          Ra = (R.set3DTransformRatio = R.setTransformRatio = function (a) {
            var b,
              c,
              d,
              e,
              f,
              g,
              h,
              i,
              j,
              k,
              l,
              m,
              o,
              p,
              q,
              r,
              s,
              t,
              u,
              v,
              w,
              x,
              y,
              z = this.data,
              A = this.t.style,
              B = z.rotation,
              C = z.rotationX,
              D = z.rotationY,
              E = z.scaleX,
              F = z.scaleY,
              G = z.scaleZ,
              H = z.x,
              I = z.y,
              J = z.z,
              L = z.svg,
              M = z.perspective,
              N = z.force3D;
            if (
              ((((1 === a || 0 === a) &&
                "auto" === N &&
                (this.tween._totalTime === this.tween._totalDuration ||
                  !this.tween._totalTime)) ||
                !N) &&
                !J &&
                !M &&
                !D &&
                !C &&
                1 === G) ||
              (za && L) ||
              !Ea
            )
              return void (B || z.skewX || L
                ? ((B *= K),
                  (x = z.skewX * K),
                  (y = 1e5),
                  (b = Math.cos(B) * E),
                  (e = Math.sin(B) * E),
                  (c = Math.sin(B - x) * -F),
                  (f = Math.cos(B - x) * F),
                  x &&
                    "simple" === z.skewType &&
                    ((s = Math.tan(x - z.skewY * K)),
                    (s = Math.sqrt(1 + s * s)),
                    (c *= s),
                    (f *= s),
                    z.skewY &&
                      ((s = Math.tan(z.skewY * K)),
                      (s = Math.sqrt(1 + s * s)),
                      (b *= s),
                      (e *= s))),
                  L &&
                    ((H +=
                      z.xOrigin - (z.xOrigin * b + z.yOrigin * c) + z.xOffset),
                    (I +=
                      z.yOrigin - (z.xOrigin * e + z.yOrigin * f) + z.yOffset),
                    za &&
                      (z.xPercent || z.yPercent) &&
                      ((p = this.t.getBBox()),
                      (H += 0.01 * z.xPercent * p.width),
                      (I += 0.01 * z.yPercent * p.height)),
                    (p = 1e-6),
                    p > H && H > -p && (H = 0),
                    p > I && I > -p && (I = 0)),
                  (u =
                    ((b * y) | 0) / y +
                    "," +
                    ((e * y) | 0) / y +
                    "," +
                    ((c * y) | 0) / y +
                    "," +
                    ((f * y) | 0) / y +
                    "," +
                    H +
                    "," +
                    I +
                    ")"),
                  L && za
                    ? this.t.setAttribute("transform", "matrix(" + u)
                    : (A[Ba] =
                        (z.xPercent || z.yPercent
                          ? "translate(" +
                            z.xPercent +
                            "%," +
                            z.yPercent +
                            "%) matrix("
                          : "matrix(") + u))
                : (A[Ba] =
                    (z.xPercent || z.yPercent
                      ? "translate(" +
                        z.xPercent +
                        "%," +
                        z.yPercent +
                        "%) matrix("
                      : "matrix(") +
                    E +
                    ",0,0," +
                    F +
                    "," +
                    H +
                    "," +
                    I +
                    ")"));
            if (
              (n &&
                ((p = 1e-4),
                p > E && E > -p && (E = G = 2e-5),
                p > F && F > -p && (F = G = 2e-5),
                !M || z.z || z.rotationX || z.rotationY || (M = 0)),
              B || z.skewX)
            )
              (B *= K),
                (q = b = Math.cos(B)),
                (r = e = Math.sin(B)),
                z.skewX &&
                  ((B -= z.skewX * K),
                  (q = Math.cos(B)),
                  (r = Math.sin(B)),
                  "simple" === z.skewType &&
                    ((s = Math.tan((z.skewX - z.skewY) * K)),
                    (s = Math.sqrt(1 + s * s)),
                    (q *= s),
                    (r *= s),
                    z.skewY &&
                      ((s = Math.tan(z.skewY * K)),
                      (s = Math.sqrt(1 + s * s)),
                      (b *= s),
                      (e *= s)))),
                (c = -r),
                (f = q);
            else {
              if (!(D || C || 1 !== G || M || L))
                return void (A[Ba] =
                  (z.xPercent || z.yPercent
                    ? "translate(" +
                      z.xPercent +
                      "%," +
                      z.yPercent +
                      "%) translate3d("
                    : "translate3d(") +
                  H +
                  "px," +
                  I +
                  "px," +
                  J +
                  "px)" +
                  (1 !== E || 1 !== F ? " scale(" + E + "," + F + ")" : ""));
              (b = f = 1), (c = e = 0);
            }
            (j = 1),
              (d = g = h = i = k = l = 0),
              (m = M ? -1 / M : 0),
              (o = z.zOrigin),
              (p = 1e-6),
              (v = ","),
              (w = "0"),
              (B = D * K),
              B &&
                ((q = Math.cos(B)),
                (r = Math.sin(B)),
                (h = -r),
                (k = m * -r),
                (d = b * r),
                (g = e * r),
                (j = q),
                (m *= q),
                (b *= q),
                (e *= q)),
              (B = C * K),
              B &&
                ((q = Math.cos(B)),
                (r = Math.sin(B)),
                (s = c * q + d * r),
                (t = f * q + g * r),
                (i = j * r),
                (l = m * r),
                (d = c * -r + d * q),
                (g = f * -r + g * q),
                (j *= q),
                (m *= q),
                (c = s),
                (f = t)),
              1 !== G && ((d *= G), (g *= G), (j *= G), (m *= G)),
              1 !== F && ((c *= F), (f *= F), (i *= F), (l *= F)),
              1 !== E && ((b *= E), (e *= E), (h *= E), (k *= E)),
              (o || L) &&
                (o && ((H += d * -o), (I += g * -o), (J += j * -o + o)),
                L &&
                  ((H +=
                    z.xOrigin - (z.xOrigin * b + z.yOrigin * c) + z.xOffset),
                  (I +=
                    z.yOrigin - (z.xOrigin * e + z.yOrigin * f) + z.yOffset)),
                p > H && H > -p && (H = w),
                p > I && I > -p && (I = w),
                p > J && J > -p && (J = 0)),
              (u =
                z.xPercent || z.yPercent
                  ? "translate(" +
                    z.xPercent +
                    "%," +
                    z.yPercent +
                    "%) matrix3d("
                  : "matrix3d("),
              (u +=
                (p > b && b > -p ? w : b) +
                v +
                (p > e && e > -p ? w : e) +
                v +
                (p > h && h > -p ? w : h)),
              (u +=
                v +
                (p > k && k > -p ? w : k) +
                v +
                (p > c && c > -p ? w : c) +
                v +
                (p > f && f > -p ? w : f)),
              C || D || 1 !== G
                ? ((u +=
                    v +
                    (p > i && i > -p ? w : i) +
                    v +
                    (p > l && l > -p ? w : l) +
                    v +
                    (p > d && d > -p ? w : d)),
                  (u +=
                    v +
                    (p > g && g > -p ? w : g) +
                    v +
                    (p > j && j > -p ? w : j) +
                    v +
                    (p > m && m > -p ? w : m) +
                    v))
                : (u += ",0,0,0,0,1,0,"),
              (u += H + v + I + v + J + v + (M ? 1 + -J / M : 1) + ")"),
              (A[Ba] = u);
          });
        (j = Fa.prototype),
          (j.x = j.y = j.z = j.skewX = j.skewY = j.rotation = j.rotationX = j.rotationY = j.zOrigin = j.xPercent = j.yPercent = j.xOffset = j.yOffset = 0),
          (j.scaleX = j.scaleY = j.scaleZ = 1),
          xa(
            "transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",
            {
              parser: function (a, b, c, d, f, h, i) {
                if (d._lastParsedTransform === i) return f;
                d._lastParsedTransform = i;
                var j;
                "function" == typeof i[c] && ((j = i[c]), (i[c] = b));
                var k,
                  l,
                  m,
                  n,
                  o,
                  p,
                  s,
                  t,
                  u,
                  v = a._gsTransform,
                  w = a.style,
                  x = 1e-6,
                  y = Aa.length,
                  z = i,
                  A = {},
                  B = "transformOrigin",
                  C = Pa(a, e, !0, z.parseTransform),
                  D =
                    z.transform &&
                    ("function" == typeof z.transform
                      ? z.transform(r, q)
                      : z.transform);
                if (((d._transform = C), D && "string" == typeof D && Ba))
                  (l = P.style),
                    (l[Ba] = D),
                    (l.display = "block"),
                    (l.position = "absolute"),
                    N.body.appendChild(P),
                    (k = Pa(P, null, !1)),
                    C.svg &&
                      ((p = C.xOrigin),
                      (s = C.yOrigin),
                      (k.x -= C.xOffset),
                      (k.y -= C.yOffset),
                      (z.transformOrigin || z.svgOrigin) &&
                        ((D = {}),
                        Ka(
                          a,
                          ga(z.transformOrigin),
                          D,
                          z.svgOrigin,
                          z.smoothOrigin,
                          !0
                        ),
                        (p = D.xOrigin),
                        (s = D.yOrigin),
                        (k.x -= D.xOffset - C.xOffset),
                        (k.y -= D.yOffset - C.yOffset)),
                      (p || s) &&
                        ((t = Oa(P, !0)),
                        (k.x -= p - (p * t[0] + s * t[2])),
                        (k.y -= s - (p * t[1] + s * t[3])))),
                    N.body.removeChild(P),
                    k.perspective || (k.perspective = C.perspective),
                    null != z.xPercent &&
                      (k.xPercent = ia(z.xPercent, C.xPercent)),
                    null != z.yPercent &&
                      (k.yPercent = ia(z.yPercent, C.yPercent));
                else if ("object" == typeof z) {
                  if (
                    ((k = {
                      scaleX: ia(
                        null != z.scaleX ? z.scaleX : z.scale,
                        C.scaleX
                      ),
                      scaleY: ia(
                        null != z.scaleY ? z.scaleY : z.scale,
                        C.scaleY
                      ),
                      scaleZ: ia(z.scaleZ, C.scaleZ),
                      x: ia(z.x, C.x),
                      y: ia(z.y, C.y),
                      z: ia(z.z, C.z),
                      xPercent: ia(z.xPercent, C.xPercent),
                      yPercent: ia(z.yPercent, C.yPercent),
                      perspective: ia(z.transformPerspective, C.perspective),
                    }),
                    (o = z.directionalRotation),
                    null != o)
                  )
                    if ("object" == typeof o) for (l in o) z[l] = o[l];
                    else z.rotation = o;
                  "string" == typeof z.x &&
                    -1 !== z.x.indexOf("%") &&
                    ((k.x = 0), (k.xPercent = ia(z.x, C.xPercent))),
                    "string" == typeof z.y &&
                      -1 !== z.y.indexOf("%") &&
                      ((k.y = 0), (k.yPercent = ia(z.y, C.yPercent))),
                    (k.rotation = ja(
                      "rotation" in z
                        ? z.rotation
                        : "shortRotation" in z
                        ? z.shortRotation + "_short"
                        : "rotationZ" in z
                        ? z.rotationZ
                        : C.rotation - C.skewY,
                      C.rotation - C.skewY,
                      "rotation",
                      A
                    )),
                    Ea &&
                      ((k.rotationX = ja(
                        "rotationX" in z
                          ? z.rotationX
                          : "shortRotationX" in z
                          ? z.shortRotationX + "_short"
                          : C.rotationX || 0,
                        C.rotationX,
                        "rotationX",
                        A
                      )),
                      (k.rotationY = ja(
                        "rotationY" in z
                          ? z.rotationY
                          : "shortRotationY" in z
                          ? z.shortRotationY + "_short"
                          : C.rotationY || 0,
                        C.rotationY,
                        "rotationY",
                        A
                      ))),
                    (k.skewX = ja(z.skewX, C.skewX - C.skewY)),
                    (k.skewY = ja(z.skewY, C.skewY)) &&
                      ((k.skewX += k.skewY), (k.rotation += k.skewY));
                }
                for (
                  Ea &&
                    null != z.force3D &&
                    ((C.force3D = z.force3D), (n = !0)),
                    C.skewType = z.skewType || C.skewType || g.defaultSkewType,
                    m =
                      C.force3D ||
                      C.z ||
                      C.rotationX ||
                      C.rotationY ||
                      k.z ||
                      k.rotationX ||
                      k.rotationY ||
                      k.perspective,
                    m || null == z.scale || (k.scaleZ = 1);
                  --y > -1;

                )
                  (u = Aa[y]),
                    (D = k[u] - C[u]),
                    (D > x || -x > D || null != z[u] || null != M[u]) &&
                      ((n = !0),
                      (f = new sa(C, u, C[u], D, f)),
                      u in A && (f.e = A[u]),
                      (f.xs0 = 0),
                      (f.plugin = h),
                      d._overwriteProps.push(f.n));
                return (
                  (D = z.transformOrigin),
                  C.svg &&
                    (D || z.svgOrigin) &&
                    ((p = C.xOffset),
                    (s = C.yOffset),
                    Ka(a, ga(D), k, z.svgOrigin, z.smoothOrigin),
                    (f = ta(
                      C,
                      "xOrigin",
                      (v ? C : k).xOrigin,
                      k.xOrigin,
                      f,
                      B
                    )),
                    (f = ta(
                      C,
                      "yOrigin",
                      (v ? C : k).yOrigin,
                      k.yOrigin,
                      f,
                      B
                    )),
                    (p !== C.xOffset || s !== C.yOffset) &&
                      ((f = ta(
                        C,
                        "xOffset",
                        v ? p : C.xOffset,
                        C.xOffset,
                        f,
                        B
                      )),
                      (f = ta(
                        C,
                        "yOffset",
                        v ? s : C.yOffset,
                        C.yOffset,
                        f,
                        B
                      ))),
                    (D = za ? null : "0px 0px")),
                  (D || (Ea && m && C.zOrigin)) &&
                    (Ba
                      ? ((n = !0),
                        (u = Da),
                        (D = (D || $(a, u, e, !1, "50% 50%")) + ""),
                        (f = new sa(w, u, 0, 0, f, -1, B)),
                        (f.b = w[u]),
                        (f.plugin = h),
                        Ea
                          ? ((l = C.zOrigin),
                            (D = D.split(" ")),
                            (C.zOrigin =
                              (D.length > 2 && (0 === l || "0px" !== D[2])
                                ? parseFloat(D[2])
                                : l) || 0),
                            (f.xs0 = f.e =
                              D[0] + " " + (D[1] || "50%") + " 0px"),
                            (f = new sa(C, "zOrigin", 0, 0, f, -1, f.n)),
                            (f.b = l),
                            (f.xs0 = f.e = C.zOrigin))
                          : (f.xs0 = f.e = D))
                      : ga(D + "", C)),
                  n &&
                    (d._transformType =
                      (C.svg && za) || (!m && 3 !== this._transformType)
                        ? 2
                        : 3),
                  j && (i[c] = j),
                  f
                );
              },
              prefix: !0,
            }
          ),
          xa("boxShadow", {
            defaultValue: "0px 0px 0px 0px #999",
            prefix: !0,
            color: !0,
            multi: !0,
            keyword: "inset",
          }),
          xa("borderRadius", {
            defaultValue: "0px",
            parser: function (a, b, c, f, g, h) {
              b = this.format(b);
              var i,
                j,
                k,
                l,
                m,
                n,
                o,
                p,
                q,
                r,
                s,
                t,
                u,
                v,
                w,
                x,
                y = [
                  "borderTopLeftRadius",
                  "borderTopRightRadius",
                  "borderBottomRightRadius",
                  "borderBottomLeftRadius",
                ],
                z = a.style;
              for (
                q = parseFloat(a.offsetWidth),
                  r = parseFloat(a.offsetHeight),
                  i = b.split(" "),
                  j = 0;
                j < y.length;
                j++
              )
                this.p.indexOf("border") && (y[j] = Y(y[j])),
                  (m = l = $(a, y[j], e, !1, "0px")),
                  -1 !== m.indexOf(" ") &&
                    ((l = m.split(" ")), (m = l[0]), (l = l[1])),
                  (n = k = i[j]),
                  (o = parseFloat(m)),
                  (t = m.substr((o + "").length)),
                  (u = "=" === n.charAt(1)),
                  u
                    ? ((p = parseInt(n.charAt(0) + "1", 10)),
                      (n = n.substr(2)),
                      (p *= parseFloat(n)),
                      (s = n.substr((p + "").length - (0 > p ? 1 : 0)) || ""))
                    : ((p = parseFloat(n)), (s = n.substr((p + "").length))),
                  "" === s && (s = d[c] || t),
                  s !== t &&
                    ((v = _(a, "borderLeft", o, t)),
                    (w = _(a, "borderTop", o, t)),
                    "%" === s
                      ? ((m = (v / q) * 100 + "%"), (l = (w / r) * 100 + "%"))
                      : "em" === s
                      ? ((x = _(a, "borderLeft", 1, "em")),
                        (m = v / x + "em"),
                        (l = w / x + "em"))
                      : ((m = v + "px"), (l = w + "px")),
                    u &&
                      ((n = parseFloat(m) + p + s),
                      (k = parseFloat(l) + p + s))),
                  (g = ua(z, y[j], m + " " + l, n + " " + k, !1, "0px", g));
              return g;
            },
            prefix: !0,
            formatter: pa("0px 0px 0px 0px", !1, !0),
          }),
          xa(
            "borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",
            {
              defaultValue: "0px",
              parser: function (a, b, c, d, f, g) {
                return ua(
                  a.style,
                  c,
                  this.format($(a, c, e, !1, "0px 0px")),
                  this.format(b),
                  !1,
                  "0px",
                  f
                );
              },
              prefix: !0,
              formatter: pa("0px 0px", !1, !0),
            }
          ),
          xa("backgroundPosition", {
            defaultValue: "0 0",
            parser: function (a, b, c, d, f, g) {
              var h,
                i,
                j,
                k,
                l,
                m,
                n = "background-position",
                o = e || Z(a, null),
                q = this.format(
                  (o
                    ? p
                      ? o.getPropertyValue(n + "-x") +
                        " " +
                        o.getPropertyValue(n + "-y")
                      : o.getPropertyValue(n)
                    : a.currentStyle.backgroundPositionX +
                      " " +
                      a.currentStyle.backgroundPositionY) || "0 0"
                ),
                r = this.format(b);
              if (
                (-1 !== q.indexOf("%")) != (-1 !== r.indexOf("%")) &&
                r.split(",").length < 2 &&
                ((m = $(a, "backgroundImage").replace(D, "")),
                m && "none" !== m)
              ) {
                for (
                  h = q.split(" "),
                    i = r.split(" "),
                    Q.setAttribute("src", m),
                    j = 2;
                  --j > -1;

                )
                  (q = h[j]),
                    (k = -1 !== q.indexOf("%")),
                    k !== (-1 !== i[j].indexOf("%")) &&
                      ((l =
                        0 === j
                          ? a.offsetWidth - Q.width
                          : a.offsetHeight - Q.height),
                      (h[j] = k
                        ? (parseFloat(q) / 100) * l + "px"
                        : (parseFloat(q) / l) * 100 + "%"));
                q = h.join(" ");
              }
              return this.parseComplex(a.style, q, r, f, g);
            },
            formatter: ga,
          }),
          xa("backgroundSize", {
            defaultValue: "0 0",
            formatter: function (a) {
              return (a += ""), ga(-1 === a.indexOf(" ") ? a + " " + a : a);
            },
          }),
          xa("perspective", { defaultValue: "0px", prefix: !0 }),
          xa("perspectiveOrigin", { defaultValue: "50% 50%", prefix: !0 }),
          xa("transformStyle", { prefix: !0 }),
          xa("backfaceVisibility", { prefix: !0 }),
          xa("userSelect", { prefix: !0 }),
          xa("margin", {
            parser: qa("marginTop,marginRight,marginBottom,marginLeft"),
          }),
          xa("padding", {
            parser: qa("paddingTop,paddingRight,paddingBottom,paddingLeft"),
          }),
          xa("clip", {
            defaultValue: "rect(0px,0px,0px,0px)",
            parser: function (a, b, c, d, f, g) {
              var h, i, j;
              return (
                9 > p
                  ? ((i = a.currentStyle),
                    (j = 8 > p ? " " : ","),
                    (h =
                      "rect(" +
                      i.clipTop +
                      j +
                      i.clipRight +
                      j +
                      i.clipBottom +
                      j +
                      i.clipLeft +
                      ")"),
                    (b = this.format(b).split(",").join(j)))
                  : ((h = this.format($(a, this.p, e, !1, this.dflt))),
                    (b = this.format(b))),
                this.parseComplex(a.style, h, b, f, g)
              );
            },
          }),
          xa("textShadow", {
            defaultValue: "0px 0px 0px #999",
            color: !0,
            multi: !0,
          }),
          xa("autoRound,strictUnits", {
            parser: function (a, b, c, d, e) {
              return e;
            },
          }),
          xa("border", {
            defaultValue: "0px solid #000",
            parser: function (a, b, c, d, f, g) {
              var h = $(a, "borderTopWidth", e, !1, "0px"),
                i = this.format(b).split(" "),
                j = i[0].replace(w, "");
              return (
                "px" !== j &&
                  (h = parseFloat(h) / _(a, "borderTopWidth", 1, j) + j),
                this.parseComplex(
                  a.style,
                  this.format(
                    h +
                      " " +
                      $(a, "borderTopStyle", e, !1, "solid") +
                      " " +
                      $(a, "borderTopColor", e, !1, "#000")
                  ),
                  i.join(" "),
                  f,
                  g
                )
              );
            },
            color: !0,
            formatter: function (a) {
              var b = a.split(" ");
              return (
                b[0] +
                " " +
                (b[1] || "solid") +
                " " +
                (a.match(oa) || ["#000"])[0]
              );
            },
          }),
          xa("borderWidth", {
            parser: qa(
              "borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth"
            ),
          }),
          xa("float,cssFloat,styleFloat", {
            parser: function (a, b, c, d, e, f) {
              var g = a.style,
                h = "cssFloat" in g ? "cssFloat" : "styleFloat";
              return new sa(g, h, 0, 0, e, -1, c, !1, 0, g[h], b);
            },
          });
        var Sa = function (a) {
          var b,
            c = this.t,
            d = c.filter || $(this.data, "filter") || "",
            e = (this.s + this.c * a) | 0;
          100 === e &&
            (-1 === d.indexOf("atrix(") &&
            -1 === d.indexOf("radient(") &&
            -1 === d.indexOf("oader(")
              ? (c.removeAttribute("filter"), (b = !$(this.data, "filter")))
              : ((c.filter = d.replace(z, "")), (b = !0))),
            b ||
              (this.xn1 && (c.filter = d = d || "alpha(opacity=" + e + ")"),
              -1 === d.indexOf("pacity")
                ? (0 === e && this.xn1) ||
                  (c.filter = d + " alpha(opacity=" + e + ")")
                : (c.filter = d.replace(x, "opacity=" + e)));
        };
        xa("opacity,alpha,autoAlpha", {
          defaultValue: "1",
          parser: function (a, b, c, d, f, g) {
            var h = parseFloat($(a, "opacity", e, !1, "1")),
              i = a.style,
              j = "autoAlpha" === c;
            return (
              "string" == typeof b &&
                "=" === b.charAt(1) &&
                (b =
                  ("-" === b.charAt(0) ? -1 : 1) * parseFloat(b.substr(2)) + h),
              j &&
                1 === h &&
                "hidden" === $(a, "visibility", e) &&
                0 !== b &&
                (h = 0),
              T
                ? (f = new sa(i, "opacity", h, b - h, f))
                : ((f = new sa(i, "opacity", 100 * h, 100 * (b - h), f)),
                  (f.xn1 = j ? 1 : 0),
                  (i.zoom = 1),
                  (f.type = 2),
                  (f.b = "alpha(opacity=" + f.s + ")"),
                  (f.e = "alpha(opacity=" + (f.s + f.c) + ")"),
                  (f.data = a),
                  (f.plugin = g),
                  (f.setRatio = Sa)),
              j &&
                ((f = new sa(
                  i,
                  "visibility",
                  0,
                  0,
                  f,
                  -1,
                  null,
                  !1,
                  0,
                  0 !== h ? "inherit" : "hidden",
                  0 === b ? "hidden" : "inherit"
                )),
                (f.xs0 = "inherit"),
                d._overwriteProps.push(f.n),
                d._overwriteProps.push(c)),
              f
            );
          },
        });
        var Ta = function (a, b) {
            b &&
              (a.removeProperty
                ? (("ms" === b.substr(0, 2) || "webkit" === b.substr(0, 6)) &&
                    (b = "-" + b),
                  a.removeProperty(b.replace(B, "-$1").toLowerCase()))
                : a.removeAttribute(b));
          },
          Ua = function (a) {
            if (((this.t._gsClassPT = this), 1 === a || 0 === a)) {
              this.t.setAttribute("class", 0 === a ? this.b : this.e);
              for (var b = this.data, c = this.t.style; b; )
                b.v ? (c[b.p] = b.v) : Ta(c, b.p), (b = b._next);
              1 === a &&
                this.t._gsClassPT === this &&
                (this.t._gsClassPT = null);
            } else
              this.t.getAttribute("class") !== this.e &&
                this.t.setAttribute("class", this.e);
          };
        xa("className", {
          parser: function (a, b, d, f, g, h, i) {
            var j,
              k,
              l,
              m,
              n,
              o = a.getAttribute("class") || "",
              p = a.style.cssText;
            if (
              ((g = f._classNamePT = new sa(a, d, 0, 0, g, 2)),
              (g.setRatio = Ua),
              (g.pr = -11),
              (c = !0),
              (g.b = o),
              (k = ba(a, e)),
              (l = a._gsClassPT))
            ) {
              for (m = {}, n = l.data; n; ) (m[n.p] = 1), (n = n._next);
              l.setRatio(1);
            }
            return (
              (a._gsClassPT = g),
              (g.e =
                "=" !== b.charAt(1)
                  ? b
                  : o.replace(
                      new RegExp("(?:\\s|^)" + b.substr(2) + "(?![\\w-])"),
                      ""
                    ) + ("+" === b.charAt(0) ? " " + b.substr(2) : "")),
              a.setAttribute("class", g.e),
              (j = ca(a, k, ba(a), i, m)),
              a.setAttribute("class", o),
              (g.data = j.firstMPT),
              (a.style.cssText = p),
              (g = g.xfirst = f.parse(a, j.difs, g, h))
            );
          },
        });
        var Va = function (a) {
          if (
            (1 === a || 0 === a) &&
            this.data._totalTime === this.data._totalDuration &&
            "isFromStart" !== this.data.data
          ) {
            var b,
              c,
              d,
              e,
              f,
              g = this.t.style,
              h = i.transform.parse;
            if ("all" === this.e) (g.cssText = ""), (e = !0);
            else
              for (
                b = this.e.split(" ").join("").split(","), d = b.length;
                --d > -1;

              )
                (c = b[d]),
                  i[c] &&
                    (i[c].parse === h
                      ? (e = !0)
                      : (c = "transformOrigin" === c ? Da : i[c].p)),
                  Ta(g, c);
            e &&
              (Ta(g, Ba),
              (f = this.t._gsTransform),
              f &&
                (f.svg &&
                  (this.t.removeAttribute("data-svg-origin"),
                  this.t.removeAttribute("transform")),
                delete this.t._gsTransform));
          }
        };
        for (
          xa("clearProps", {
            parser: function (a, b, d, e, f) {
              return (
                (f = new sa(a, d, 0, 0, f, 2)),
                (f.setRatio = Va),
                (f.e = b),
                (f.pr = -10),
                (f.data = e._tween),
                (c = !0),
                f
              );
            },
          }),
            j = "bezier,throwProps,physicsProps,physics2D".split(","),
            va = j.length;
          va--;

        )
          ya(j[va]);
        (j = g.prototype),
          (j._firstPT = j._lastParsedTransform = j._transform = null),
          (j._onInitTween = function (a, b, h, j) {
            if (!a.nodeType) return !1;
            (this._target = q = a),
              (this._tween = h),
              (this._vars = b),
              (r = j),
              (k = b.autoRound),
              (c = !1),
              (d = b.suffixMap || g.suffixMap),
              (e = Z(a, "")),
              (f = this._overwriteProps);
            var n,
              p,
              s,
              t,
              u,
              v,
              w,
              x,
              z,
              A = a.style;
            if (
              (l &&
                "" === A.zIndex &&
                ((n = $(a, "zIndex", e)),
                ("auto" === n || "" === n) && this._addLazySet(A, "zIndex", 0)),
              "string" == typeof b &&
                ((t = A.cssText),
                (n = ba(a, e)),
                (A.cssText = t + ";" + b),
                (n = ca(a, n, ba(a)).difs),
                !T && y.test(b) && (n.opacity = parseFloat(RegExp.$1)),
                (b = n),
                (A.cssText = t)),
              b.className
                ? (this._firstPT = p = i.className.parse(
                    a,
                    b.className,
                    "className",
                    this,
                    null,
                    null,
                    b
                  ))
                : (this._firstPT = p = this.parse(a, b, null)),
              this._transformType)
            ) {
              for (
                z = 3 === this._transformType,
                  Ba
                    ? m &&
                      ((l = !0),
                      "" === A.zIndex &&
                        ((w = $(a, "zIndex", e)),
                        ("auto" === w || "" === w) &&
                          this._addLazySet(A, "zIndex", 0)),
                      o &&
                        this._addLazySet(
                          A,
                          "WebkitBackfaceVisibility",
                          this._vars.WebkitBackfaceVisibility ||
                            (z ? "visible" : "hidden")
                        ))
                    : (A.zoom = 1),
                  s = p;
                s && s._next;

              )
                s = s._next;
              (x = new sa(a, "transform", 0, 0, null, 2)),
                this._linkCSSP(x, null, s),
                (x.setRatio = Ba ? Ra : Qa),
                (x.data = this._transform || Pa(a, e, !0)),
                (x.tween = h),
                (x.pr = -1),
                f.pop();
            }
            if (c) {
              for (; p; ) {
                for (v = p._next, s = t; s && s.pr > p.pr; ) s = s._next;
                (p._prev = s ? s._prev : u) ? (p._prev._next = p) : (t = p),
                  (p._next = s) ? (s._prev = p) : (u = p),
                  (p = v);
              }
              this._firstPT = t;
            }
            return !0;
          }),
          (j.parse = function (a, b, c, f) {
            var g,
              h,
              j,
              l,
              m,
              n,
              o,
              p,
              s,
              t,
              u = a.style;
            for (g in b)
              (n = b[g]),
                "function" == typeof n && (n = n(r, q)),
                (h = i[g]),
                h
                  ? (c = h.parse(a, n, g, this, c, f, b))
                  : ((m = $(a, g, e) + ""),
                    (s = "string" == typeof n),
                    "color" === g ||
                    "fill" === g ||
                    "stroke" === g ||
                    -1 !== g.indexOf("Color") ||
                    (s && A.test(n))
                      ? (s ||
                          ((n = ma(n)),
                          (n =
                            (n.length > 3 ? "rgba(" : "rgb(") +
                            n.join(",") +
                            ")")),
                        (c = ua(u, g, m, n, !0, "transparent", c, 0, f)))
                      : s && J.test(n)
                      ? (c = ua(u, g, m, n, !0, null, c, 0, f))
                      : ((j = parseFloat(m)),
                        (o = j || 0 === j ? m.substr((j + "").length) : ""),
                        ("" === m || "auto" === m) &&
                          ("width" === g || "height" === g
                            ? ((j = fa(a, g, e)), (o = "px"))
                            : "left" === g || "top" === g
                            ? ((j = aa(a, g, e)), (o = "px"))
                            : ((j = "opacity" !== g ? 0 : 1), (o = ""))),
                        (t = s && "=" === n.charAt(1)),
                        t
                          ? ((l = parseInt(n.charAt(0) + "1", 10)),
                            (n = n.substr(2)),
                            (l *= parseFloat(n)),
                            (p = n.replace(w, "")))
                          : ((l = parseFloat(n)),
                            (p = s ? n.replace(w, "") : "")),
                        "" === p && (p = g in d ? d[g] : o),
                        (n = l || 0 === l ? (t ? l + j : l) + p : b[g]),
                        o !== p &&
                          "" !== p &&
                          (l || 0 === l) &&
                          j &&
                          ((j = _(a, g, j, o)),
                          "%" === p
                            ? ((j /= _(a, g, 100, "%") / 100),
                              b.strictUnits !== !0 && (m = j + "%"))
                            : "em" === p ||
                              "rem" === p ||
                              "vw" === p ||
                              "vh" === p
                            ? (j /= _(a, g, 1, p))
                            : "px" !== p && ((l = _(a, g, l, p)), (p = "px")),
                          t && (l || 0 === l) && (n = l + j + p)),
                        t && (l += j),
                        (!j && 0 !== j) || (!l && 0 !== l)
                          ? void 0 !== u[g] &&
                            (n || (n + "" != "NaN" && null != n))
                            ? ((c = new sa(
                                u,
                                g,
                                l || j || 0,
                                0,
                                c,
                                -1,
                                g,
                                !1,
                                0,
                                m,
                                n
                              )),
                              (c.xs0 =
                                "none" !== n ||
                                ("display" !== g && -1 === g.indexOf("Style"))
                                  ? n
                                  : m))
                            : V("invalid " + g + " tween value: " + b[g])
                          : ((c = new sa(
                              u,
                              g,
                              j,
                              l - j,
                              c,
                              0,
                              g,
                              k !== !1 && ("px" === p || "zIndex" === g),
                              0,
                              m,
                              n
                            )),
                            (c.xs0 = p)))),
                f && c && !c.plugin && (c.plugin = f);
            return c;
          }),
          (j.setRatio = function (a) {
            var b,
              c,
              d,
              e = this._firstPT,
              f = 1e-6;
            if (
              1 !== a ||
              (this._tween._time !== this._tween._duration &&
                0 !== this._tween._time)
            )
              if (
                a ||
                (this._tween._time !== this._tween._duration &&
                  0 !== this._tween._time) ||
                this._tween._rawPrevTime === -1e-6
              )
                for (; e; ) {
                  if (
                    ((b = e.c * a + e.s),
                    e.r ? (b = Math.round(b)) : f > b && b > -f && (b = 0),
                    e.type)
                  )
                    if (1 === e.type)
                      if (((d = e.l), 2 === d))
                        e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2;
                      else if (3 === d)
                        e.t[e.p] =
                          e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3;
                      else if (4 === d)
                        e.t[e.p] =
                          e.xs0 +
                          b +
                          e.xs1 +
                          e.xn1 +
                          e.xs2 +
                          e.xn2 +
                          e.xs3 +
                          e.xn3 +
                          e.xs4;
                      else if (5 === d)
                        e.t[e.p] =
                          e.xs0 +
                          b +
                          e.xs1 +
                          e.xn1 +
                          e.xs2 +
                          e.xn2 +
                          e.xs3 +
                          e.xn3 +
                          e.xs4 +
                          e.xn4 +
                          e.xs5;
                      else {
                        for (c = e.xs0 + b + e.xs1, d = 1; d < e.l; d++)
                          c += e["xn" + d] + e["xs" + (d + 1)];
                        e.t[e.p] = c;
                      }
                    else
                      -1 === e.type
                        ? (e.t[e.p] = e.xs0)
                        : e.setRatio && e.setRatio(a);
                  else e.t[e.p] = b + e.xs0;
                  e = e._next;
                }
              else
                for (; e; )
                  2 !== e.type ? (e.t[e.p] = e.b) : e.setRatio(a),
                    (e = e._next);
            else
              for (; e; ) {
                if (2 !== e.type)
                  if (e.r && -1 !== e.type)
                    if (((b = Math.round(e.s + e.c)), e.type)) {
                      if (1 === e.type) {
                        for (
                          d = e.l, c = e.xs0 + b + e.xs1, d = 1;
                          d < e.l;
                          d++
                        )
                          c += e["xn" + d] + e["xs" + (d + 1)];
                        e.t[e.p] = c;
                      }
                    } else e.t[e.p] = b + e.xs0;
                  else e.t[e.p] = e.e;
                else e.setRatio(a);
                e = e._next;
              }
          }),
          (j._enableTransforms = function (a) {
            (this._transform = this._transform || Pa(this._target, e, !0)),
              (this._transformType =
                (this._transform.svg && za) || (!a && 3 !== this._transformType)
                  ? 2
                  : 3);
          });
        var Wa = function (a) {
          (this.t[this.p] = this.e),
            this.data._linkCSSP(this, this._next, null, !0);
        };
        (j._addLazySet = function (a, b, c) {
          var d = (this._firstPT = new sa(a, b, 0, 0, this._firstPT, 2));
          (d.e = c), (d.setRatio = Wa), (d.data = this);
        }),
          (j._linkCSSP = function (a, b, c, d) {
            return (
              a &&
                (b && (b._prev = a),
                a._next && (a._next._prev = a._prev),
                a._prev
                  ? (a._prev._next = a._next)
                  : this._firstPT === a &&
                    ((this._firstPT = a._next), (d = !0)),
                c
                  ? (c._next = a)
                  : d || null !== this._firstPT || (this._firstPT = a),
                (a._next = b),
                (a._prev = c)),
              a
            );
          }),
          (j._mod = function (a) {
            for (var b = this._firstPT; b; )
              "function" == typeof a[b.p] && a[b.p] === Math.round && (b.r = 1),
                (b = b._next);
          }),
          (j._kill = function (b) {
            var c,
              d,
              e,
              f = b;
            if (b.autoAlpha || b.alpha) {
              f = {};
              for (d in b) f[d] = b[d];
              (f.opacity = 1), f.autoAlpha && (f.visibility = 1);
            }
            for (
              b.className &&
                (c = this._classNamePT) &&
                ((e = c.xfirst),
                e && e._prev
                  ? this._linkCSSP(e._prev, c._next, e._prev._prev)
                  : e === this._firstPT && (this._firstPT = c._next),
                c._next && this._linkCSSP(c._next, c._next._next, e._prev),
                (this._classNamePT = null)),
                c = this._firstPT;
              c;

            )
              c.plugin &&
                c.plugin !== d &&
                c.plugin._kill &&
                (c.plugin._kill(b), (d = c.plugin)),
                (c = c._next);
            return a.prototype._kill.call(this, f);
          });
        var Xa = function (a, b, c) {
          var d, e, f, g;
          if (a.slice) for (e = a.length; --e > -1; ) Xa(a[e], b, c);
          else
            for (d = a.childNodes, e = d.length; --e > -1; )
              (f = d[e]),
                (g = f.type),
                f.style && (b.push(ba(f)), c && c.push(f)),
                (1 !== g && 9 !== g && 11 !== g) ||
                  !f.childNodes.length ||
                  Xa(f, b, c);
        };
        return (
          (g.cascadeTo = function (a, c, d) {
            var e,
              f,
              g,
              h,
              i = b.to(a, c, d),
              j = [i],
              k = [],
              l = [],
              m = [],
              n = b._internals.reservedProps;
            for (
              a = i._targets || i.target,
                Xa(a, k, m),
                i.render(c, !0, !0),
                Xa(a, l),
                i.render(0, !0, !0),
                i._enabled(!0),
                e = m.length;
              --e > -1;

            )
              if (((f = ca(m[e], k[e], l[e])), f.firstMPT)) {
                f = f.difs;
                for (g in d) n[g] && (f[g] = d[g]);
                h = {};
                for (g in f) h[g] = k[e][g];
                j.push(b.fromTo(m[e], c, h, f));
              }
            return j;
          }),
          a.activate([g]),
          g
        );
      },
      !0
    ),
    (function () {
      var a = _gsScope._gsDefine.plugin({
          propName: "roundProps",
          version: "1.6.0",
          priority: -1,
          API: 2,
          init: function (a, b, c) {
            return (this._tween = c), !0;
          },
        }),
        b = function (a) {
          for (; a; ) a.f || a.blob || (a.m = Math.round), (a = a._next);
        },
        c = a.prototype;
      (c._onInitAllProps = function () {
        for (
          var a,
            c,
            d,
            e = this._tween,
            f = e.vars.roundProps.join
              ? e.vars.roundProps
              : e.vars.roundProps.split(","),
            g = f.length,
            h = {},
            i = e._propLookup.roundProps;
          --g > -1;

        )
          h[f[g]] = Math.round;
        for (g = f.length; --g > -1; )
          for (a = f[g], c = e._firstPT; c; )
            (d = c._next),
              c.pg
                ? c.t._mod(h)
                : c.n === a &&
                  (2 === c.f && c.t
                    ? b(c.t._firstPT)
                    : (this._add(c.t, a, c.s, c.c),
                      d && (d._prev = c._prev),
                      c._prev
                        ? (c._prev._next = d)
                        : e._firstPT === c && (e._firstPT = d),
                      (c._next = c._prev = null),
                      (e._propLookup[a] = i))),
              (c = d);
        return !1;
      }),
        (c._add = function (a, b, c, d) {
          this._addTween(a, b, c, c + d, b, Math.round),
            this._overwriteProps.push(b);
        });
    })(),
    (function () {
      _gsScope._gsDefine.plugin({
        propName: "attr",
        API: 2,
        version: "0.6.0",
        init: function (a, b, c, d) {
          var e, f;
          if ("function" != typeof a.setAttribute) return !1;
          for (e in b)
            (f = b[e]),
              "function" == typeof f && (f = f(d, a)),
              this._addTween(
                a,
                "setAttribute",
                a.getAttribute(e) + "",
                f + "",
                e,
                !1,
                e
              ),
              this._overwriteProps.push(e);
          return !0;
        },
      });
    })(),
    (_gsScope._gsDefine.plugin({
      propName: "directionalRotation",
      version: "0.3.0",
      API: 2,
      init: function (a, b, c, d) {
        "object" != typeof b && (b = { rotation: b }), (this.finals = {});
        var e,
          f,
          g,
          h,
          i,
          j,
          k = b.useRadians === !0 ? 2 * Math.PI : 360,
          l = 1e-6;
        for (e in b)
          "useRadians" !== e &&
            ((h = b[e]),
            "function" == typeof h && (h = h(d, a)),
            (j = (h + "").split("_")),
            (f = j[0]),
            (g = parseFloat(
              "function" != typeof a[e]
                ? a[e]
                : a[
                    e.indexOf("set") ||
                    "function" != typeof a["get" + e.substr(3)]
                      ? e
                      : "get" + e.substr(3)
                  ]()
            )),
            (h = this.finals[e] =
              "string" == typeof f && "=" === f.charAt(1)
                ? g + parseInt(f.charAt(0) + "1", 10) * Number(f.substr(2))
                : Number(f) || 0),
            (i = h - g),
            j.length &&
              ((f = j.join("_")),
              -1 !== f.indexOf("short") &&
                ((i %= k), i !== i % (k / 2) && (i = 0 > i ? i + k : i - k)),
              -1 !== f.indexOf("_cw") && 0 > i
                ? (i = ((i + 9999999999 * k) % k) - ((i / k) | 0) * k)
                : -1 !== f.indexOf("ccw") &&
                  i > 0 &&
                  (i = ((i - 9999999999 * k) % k) - ((i / k) | 0) * k)),
            (i > l || -l > i) &&
              (this._addTween(a, e, g, g + i, e),
              this._overwriteProps.push(e)));
        return !0;
      },
      set: function (a) {
        var b;
        if (1 !== a) this._super.setRatio.call(this, a);
        else
          for (b = this._firstPT; b; )
            b.f ? b.t[b.p](this.finals[b.p]) : (b.t[b.p] = this.finals[b.p]),
              (b = b._next);
      },
    })._autoCSS = !0),
    _gsScope._gsDefine(
      "easing.Back",
      ["easing.Ease"],
      function (a) {
        var b,
          c,
          d,
          g = 2 * Math.PI,
          h = Math.PI / 2,
          i = f._class,
          j = function (b, c) {
            var d = i("easing." + b, function () {}, !0),
              e = (d.prototype = new a());
            return (e.constructor = d), (e.getRatio = c), d;
          },
          k = a.register || function () {},
          l = function (a, b, c, d, e) {
            var f = i(
              "easing." + a,
              { easeOut: new b(), easeIn: new c(), easeInOut: new d() },
              !0
            );
            return k(f, a), f;
          },
          m = function (a, b, c) {
            (this.t = a),
              (this.v = b),
              c &&
                ((this.next = c),
                (c.prev = this),
                (this.c = c.v - b),
                (this.gap = c.t - a));
          },
          n = function (b, c) {
            var d = i(
                "easing." + b,
                function (a) {
                  (this._p1 = a || 0 === a ? a : 1.70158),
                    (this._p2 = 1.525 * this._p1);
                },
                !0
              ),
              e = (d.prototype = new a());
            return (
              (e.constructor = d),
              (e.getRatio = c),
              (e.config = function (a) {
                return new d(a);
              }),
              d
            );
          },
          o = l(
            "Back",
            n("BackOut", function (a) {
              return (a -= 1) * a * ((this._p1 + 1) * a + this._p1) + 1;
            }),
            n("BackIn", function (a) {
              return a * a * ((this._p1 + 1) * a - this._p1);
            }),
            n("BackInOut", function (a) {
              return (a *= 2) < 1
                ? 0.5 * a * a * ((this._p2 + 1) * a - this._p2)
                : 0.5 * ((a -= 2) * a * ((this._p2 + 1) * a + this._p2) + 2);
            })
          ),
          p = i(
            "easing.SlowMo",
            function (a, b, c) {
              (b = b || 0 === b ? b : 0.7),
                null == a ? (a = 0.7) : a > 1 && (a = 1),
                (this._p = 1 !== a ? b : 0),
                (this._p1 = (1 - a) / 2),
                (this._p2 = a),
                (this._p3 = this._p1 + this._p2),
                (this._calcEnd = c === !0);
            },
            !0
          ),
          q = (p.prototype = new a());
        return (
          (q.constructor = p),
          (q.getRatio = function (a) {
            var b = a + (0.5 - a) * this._p;
            return a < this._p1
              ? this._calcEnd
                ? 1 - (a = 1 - a / this._p1) * a
                : b - (a = 1 - a / this._p1) * a * a * a * b
              : a > this._p3
              ? this._calcEnd
                ? 1 - (a = (a - this._p3) / this._p1) * a
                : b + (a - b) * (a = (a - this._p3) / this._p1) * a * a * a
              : this._calcEnd
              ? 1
              : b;
          }),
          (p.ease = new p(0.7, 0.7)),
          (q.config = p.config = function (a, b, c) {
            return new p(a, b, c);
          }),
          (b = i(
            "easing.SteppedEase",
            function (a) {
              (a = a || 1), (this._p1 = 1 / a), (this._p2 = a + 1);
            },
            !0
          )),
          (q = b.prototype = new a()),
          (q.constructor = b),
          (q.getRatio = function (a) {
            return (
              0 > a ? (a = 0) : a >= 1 && (a = 0.999999999),
              ((this._p2 * a) >> 0) * this._p1
            );
          }),
          (q.config = b.config = function (a) {
            return new b(a);
          }),
          (c = i(
            "easing.RoughEase",
            function (b) {
              b = b || {};
              for (
                var c,
                  d,
                  e,
                  f,
                  g,
                  h,
                  i = b.taper || "none",
                  j = [],
                  k = 0,
                  l = 0 | (b.points || 20),
                  n = l,
                  o = b.randomize !== !1,
                  p = b.clamp === !0,
                  q = b.template instanceof a ? b.template : null,
                  r = "number" == typeof b.strength ? 0.4 * b.strength : 0.4;
                --n > -1;

              )
                (c = o ? Math.random() : (1 / l) * n),
                  (d = q ? q.getRatio(c) : c),
                  "none" === i
                    ? (e = r)
                    : "out" === i
                    ? ((f = 1 - c), (e = f * f * r))
                    : "in" === i
                    ? (e = c * c * r)
                    : 0.5 > c
                    ? ((f = 2 * c), (e = f * f * 0.5 * r))
                    : ((f = 2 * (1 - c)), (e = f * f * 0.5 * r)),
                  o
                    ? (d += Math.random() * e - 0.5 * e)
                    : n % 2
                    ? (d += 0.5 * e)
                    : (d -= 0.5 * e),
                  p && (d > 1 ? (d = 1) : 0 > d && (d = 0)),
                  (j[k++] = { x: c, y: d });
              for (
                j.sort(function (a, b) {
                  return a.x - b.x;
                }),
                  h = new m(1, 1, null),
                  n = l;
                --n > -1;

              )
                (g = j[n]), (h = new m(g.x, g.y, h));
              this._prev = new m(0, 0, 0 !== h.t ? h : h.next);
            },
            !0
          )),
          (q = c.prototype = new a()),
          (q.constructor = c),
          (q.getRatio = function (a) {
            var b = this._prev;
            if (a > b.t) {
              for (; b.next && a >= b.t; ) b = b.next;
              b = b.prev;
            } else for (; b.prev && a <= b.t; ) b = b.prev;
            return (this._prev = b), b.v + ((a - b.t) / b.gap) * b.c;
          }),
          (q.config = function (a) {
            return new c(a);
          }),
          (c.ease = new c()),
          l(
            "Bounce",
            j("BounceOut", function (a) {
              return 1 / 2.75 > a
                ? 7.5625 * a * a
                : 2 / 2.75 > a
                ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75
                : 2.5 / 2.75 > a
                ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375
                : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375;
            }),
            j("BounceIn", function (a) {
              return (a = 1 - a) < 1 / 2.75
                ? 1 - 7.5625 * a * a
                : 2 / 2.75 > a
                ? 1 - (7.5625 * (a -= 1.5 / 2.75) * a + 0.75)
                : 2.5 / 2.75 > a
                ? 1 - (7.5625 * (a -= 2.25 / 2.75) * a + 0.9375)
                : 1 - (7.5625 * (a -= 2.625 / 2.75) * a + 0.984375);
            }),
            j("BounceInOut", function (a) {
              var b = 0.5 > a;
              return (
                (a = b ? 1 - 2 * a : 2 * a - 1),
                (a =
                  1 / 2.75 > a
                    ? 7.5625 * a * a
                    : 2 / 2.75 > a
                    ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75
                    : 2.5 / 2.75 > a
                    ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375
                    : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375),
                b ? 0.5 * (1 - a) : 0.5 * a + 0.5
              );
            })
          ),
          l(
            "Circ",
            j("CircOut", function (a) {
              return Math.sqrt(1 - (a -= 1) * a);
            }),
            j("CircIn", function (a) {
              return -(Math.sqrt(1 - a * a) - 1);
            }),
            j("CircInOut", function (a) {
              return (a *= 2) < 1
                ? -0.5 * (Math.sqrt(1 - a * a) - 1)
                : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
            })
          ),
          (d = function (b, c, d) {
            var e = i(
                "easing." + b,
                function (a, b) {
                  (this._p1 = a >= 1 ? a : 1),
                    (this._p2 = (b || d) / (1 > a ? a : 1)),
                    (this._p3 =
                      (this._p2 / g) * (Math.asin(1 / this._p1) || 0)),
                    (this._p2 = g / this._p2);
                },
                !0
              ),
              f = (e.prototype = new a());
            return (
              (f.constructor = e),
              (f.getRatio = c),
              (f.config = function (a, b) {
                return new e(a, b);
              }),
              e
            );
          }),
          l(
            "Elastic",
            d(
              "ElasticOut",
              function (a) {
                return (
                  this._p1 *
                    Math.pow(2, -10 * a) *
                    Math.sin((a - this._p3) * this._p2) +
                  1
                );
              },
              0.3
            ),
            d(
              "ElasticIn",
              function (a) {
                return -(
                  this._p1 *
                  Math.pow(2, 10 * (a -= 1)) *
                  Math.sin((a - this._p3) * this._p2)
                );
              },
              0.3
            ),
            d(
              "ElasticInOut",
              function (a) {
                return (a *= 2) < 1
                  ? -0.5 *
                      (this._p1 *
                        Math.pow(2, 10 * (a -= 1)) *
                        Math.sin((a - this._p3) * this._p2))
                  : this._p1 *
                      Math.pow(2, -10 * (a -= 1)) *
                      Math.sin((a - this._p3) * this._p2) *
                      0.5 +
                      1;
              },
              0.45
            )
          ),
          l(
            "Expo",
            j("ExpoOut", function (a) {
              return 1 - Math.pow(2, -10 * a);
            }),
            j("ExpoIn", function (a) {
              return Math.pow(2, 10 * (a - 1)) - 0.001;
            }),
            j("ExpoInOut", function (a) {
              return (a *= 2) < 1
                ? 0.5 * Math.pow(2, 10 * (a - 1))
                : 0.5 * (2 - Math.pow(2, -10 * (a - 1)));
            })
          ),
          l(
            "Sine",
            j("SineOut", function (a) {
              return Math.sin(a * h);
            }),
            j("SineIn", function (a) {
              return -Math.cos(a * h) + 1;
            }),
            j("SineInOut", function (a) {
              return -0.5 * (Math.cos(Math.PI * a) - 1);
            })
          ),
          i(
            "easing.EaseLookup",
            {
              find: function (b) {
                return a.map[b];
              },
            },
            !0
          ),
          k(e.SlowMo, "SlowMo", "ease,"),
          k(c, "RoughEase", "ease,"),
          k(b, "SteppedEase", "ease,"),
          o
        );
      },
      !0
    );
}),
  _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
  (function (a, b) {
    "use strict";
    var c = {},
      d = (a.GreenSockGlobals = a.GreenSockGlobals || a);
    if (!d.TweenLite) {
      var e,
        f,
        g,
        h,
        i,
        j = function (a) {
          var b,
            c = a.split("."),
            e = d;
          for (b = 0; b < c.length; b++) e[c[b]] = e = e[c[b]] || {};
          return e;
        },
        l = 1e-10,
        m = function (a) {
          var b,
            c = [],
            d = a.length;
          for (b = 0; b !== d; c.push(a[b++]));
          return c;
        },
        n = function () {},
        o = (function () {
          var a = Object.prototype.toString,
            b = a.call([]);
          return function (c) {
            return (
              null != c &&
              (c instanceof Array ||
                ("object" == typeof c && !!c.push && a.call(c) === b))
            );
          };
        })(),
        p = {},
        q = function (e, f, g, h) {
          (this.sc = p[e] ? p[e].sc : []),
            (p[e] = this),
            (this.gsClass = null),
            (this.func = g);
          var i = [];
          (this.check = function (k) {
            for (var l, m, n, o, r, s = f.length, t = s; --s > -1; )
              (l = p[f[s]] || new q(f[s], [])).gsClass
                ? ((i[s] = l.gsClass), t--)
                : k && l.sc.push(this);
            if (0 === t && g) {
              if (
                ((m = ("com.greensock." + e).split(".")),
                (n = m.pop()),
                (o = j(m.join("."))[n] = this.gsClass = g.apply(g, i)),
                h)
              )
                if (
                  ((d[n] = c[n] = o),
                  (r = "undefined" != typeof module && module.exports),
                  !r && "function" == typeof define && define.amd)
                )
                  define((a.GreenSockAMDPath ? a.GreenSockAMDPath + "/" : "") +
                    e.split(".").pop(), [], function () {
                    return o;
                  });
                else if (r)
                  if (e === b) {
                    module.exports = c[b] = o;
                    for (s in c) o[s] = c[s];
                  } else c[b] && (c[b][n] = o);
              for (s = 0; s < this.sc.length; s++) this.sc[s].check();
            }
          }),
            this.check(!0);
        },
        r = (a._gsDefine = function (a, b, c, d) {
          return new q(a, b, c, d);
        }),
        s = (k._class = function (a, b, c) {
          return (
            (b = b || function () {}),
            r(
              a,
              [],
              function () {
                return b;
              },
              c
            ),
            b
          );
        });
      r.globals = d;
      var t = [0, 0, 1, 1],
        u = s(
          "easing.Ease",
          function (a, b, c, d) {
            (this._func = a),
              (this._type = c || 0),
              (this._power = d || 0),
              (this._params = b ? t.concat(b) : t);
          },
          !0
        ),
        v = (u.map = {}),
        w = (u.register = function (a, b, c, d) {
          for (
            var e,
              f,
              g,
              h,
              i = b.split(","),
              j = i.length,
              l = (c || "easeIn,easeOut,easeInOut").split(",");
            --j > -1;

          )
            for (
              f = i[j],
                e = d ? s("easing." + f, null, !0) : k.easing[f] || {},
                g = l.length;
              --g > -1;

            )
              (h = l[g]),
                (v[f + "." + h] = v[h + f] = e[h] = a.getRatio
                  ? a
                  : a[h] || new a());
        });
      for (
        g = u.prototype,
          g._calcEnd = !1,
          g.getRatio = function (a) {
            if (this._func)
              return (
                (this._params[0] = a), this._func.apply(null, this._params)
              );
            var b = this._type,
              c = this._power,
              d = 1 === b ? 1 - a : 2 === b ? a : 0.5 > a ? 2 * a : 2 * (1 - a);
            return (
              1 === c
                ? (d *= d)
                : 2 === c
                ? (d *= d * d)
                : 3 === c
                ? (d *= d * d * d)
                : 4 === c && (d *= d * d * d * d),
              1 === b ? 1 - d : 2 === b ? d : 0.5 > a ? d / 2 : 1 - d / 2
            );
          },
          e = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
          f = e.length;
        --f > -1;

      )
        (g = e[f] + ",Power" + f),
          w(new u(null, null, 1, f), g, "easeOut", !0),
          w(
            new u(null, null, 2, f),
            g,
            "easeIn" + (0 === f ? ",easeNone" : "")
          ),
          w(new u(null, null, 3, f), g, "easeInOut");
      (v.linear = k.easing.Linear.easeIn), (v.swing = k.easing.Quad.easeInOut);
      var x = s("events.EventDispatcher", function (a) {
        (this._listeners = {}), (this._eventTarget = a || this);
      });
      (g = x.prototype),
        (g.addEventListener = function (a, b, c, d, e) {
          e = e || 0;
          var f,
            g,
            j = this._listeners[a],
            k = 0;
          for (
            this !== h || i || h.wake(),
              null == j && (this._listeners[a] = j = []),
              g = j.length;
            --g > -1;

          )
            (f = j[g]),
              f.c === b && f.s === c
                ? j.splice(g, 1)
                : 0 === k && f.pr < e && (k = g + 1);
          j.splice(k, 0, { c: b, s: c, up: d, pr: e });
        }),
        (g.removeEventListener = function (a, b) {
          var c,
            d = this._listeners[a];
          if (d)
            for (c = d.length; --c > -1; )
              if (d[c].c === b) return void d.splice(c, 1);
        }),
        (g.dispatchEvent = function (a) {
          var b,
            c,
            d,
            e = this._listeners[a];
          if (e)
            for (
              b = e.length, b > 1 && (e = e.slice(0)), c = this._eventTarget;
              --b > -1;

            )
              (d = e[b]),
                d &&
                  (d.up
                    ? d.c.call(d.s || c, { type: a, target: c })
                    : d.c.call(d.s || c));
        });
      var y = a.requestAnimationFrame,
        z = a.cancelAnimationFrame,
        A =
          Date.now ||
          function () {
            return new Date().getTime();
          },
        B = A();
      for (e = ["ms", "moz", "webkit", "o"], f = e.length; --f > -1 && !y; )
        (y = a[e[f] + "RequestAnimationFrame"]),
          (z =
            a[e[f] + "CancelAnimationFrame"] ||
            a[e[f] + "CancelRequestAnimationFrame"]);
      s("Ticker", function (a, b) {
        var c,
          d,
          e,
          f,
          g,
          j = this,
          k = A(),
          m = b !== !1 && y ? "auto" : !1,
          o = 500,
          p = 33,
          q = "tick",
          r = function (a) {
            var b,
              h,
              i = A() - B;
            i > o && (k += i - p),
              (B += i),
              (j.time = (B - k) / 1e3),
              (b = j.time - g),
              (!c || b > 0 || a === !0) &&
                (j.frame++, (g += b + (b >= f ? 0.004 : f - b)), (h = !0)),
              a !== !0 && (e = d(r)),
              h && j.dispatchEvent(q);
          };
        x.call(j),
          (j.time = j.frame = 0),
          (j.tick = function () {
            r(!0);
          }),
          (j.lagSmoothing = function (a, b) {
            (o = a || 1 / l), (p = Math.min(b, o, 0));
          }),
          (j.sleep = function () {
            null != e &&
              (m && z ? z(e) : clearTimeout(e),
              (d = n),
              (e = null),
              j === h && (i = !1));
          }),
          (j.wake = function (a) {
            null !== e
              ? j.sleep()
              : a
              ? (k += -B + (B = A()))
              : j.frame > 10 && (B = A() - o + 5),
              (d =
                0 === c
                  ? n
                  : m && y
                  ? y
                  : function (a) {
                      return setTimeout(a, (1e3 * (g - j.time) + 1) | 0);
                    }),
              j === h && (i = !0),
              r(2);
          }),
          (j.fps = function (a) {
            return arguments.length
              ? ((c = a),
                (f = 1 / (c || 60)),
                (g = this.time + f),
                void j.wake())
              : c;
          }),
          (j.useRAF = function (a) {
            return arguments.length ? (j.sleep(), (m = a), void j.fps(c)) : m;
          }),
          j.fps(a),
          setTimeout(function () {
            "auto" === m &&
              j.frame < 5 &&
              "hidden" !== document.visibilityState &&
              j.useRAF(!1);
          }, 1500);
      }),
        (g = k.Ticker.prototype = new k.events.EventDispatcher()),
        (g.constructor = k.Ticker);
      var C = s("core.Animation", function (a, b) {
        if (
          ((this.vars = b = b || {}),
          (this._duration = this._totalDuration = a || 0),
          (this._delay = Number(b.delay) || 0),
          (this._timeScale = 1),
          (this._active = b.immediateRender === !0),
          (this.data = b.data),
          (this._reversed = b.reversed === !0),
          V)
        ) {
          i || h.wake();
          var c = this.vars.useFrames ? U : V;
          c.add(this, c._time), this.vars.paused && this.paused(!0);
        }
      });
      (h = C.ticker = new k.Ticker()),
        (g = C.prototype),
        (g._dirty = g._gc = g._initted = g._paused = !1),
        (g._totalTime = g._time = 0),
        (g._rawPrevTime = -1),
        (g._next = g._last = g._onUpdate = g._timeline = g.timeline = null),
        (g._paused = !1);
      var D = function () {
        i && A() - B > 2e3 && h.wake(), setTimeout(D, 2e3);
      };
      D(),
        (g.play = function (a, b) {
          return null != a && this.seek(a, b), this.reversed(!1).paused(!1);
        }),
        (g.pause = function (a, b) {
          return null != a && this.seek(a, b), this.paused(!0);
        }),
        (g.resume = function (a, b) {
          return null != a && this.seek(a, b), this.paused(!1);
        }),
        (g.seek = function (a, b) {
          return this.totalTime(Number(a), b !== !1);
        }),
        (g.restart = function (a, b) {
          return this.reversed(!1)
            .paused(!1)
            .totalTime(a ? -this._delay : 0, b !== !1, !0);
        }),
        (g.reverse = function (a, b) {
          return (
            null != a && this.seek(a || this.totalDuration(), b),
            this.reversed(!0).paused(!1)
          );
        }),
        (g.render = function (a, b, c) {}),
        (g.invalidate = function () {
          return (
            (this._time = this._totalTime = 0),
            (this._initted = this._gc = !1),
            (this._rawPrevTime = -1),
            (this._gc || !this.timeline) && this._enabled(!0),
            this
          );
        }),
        (g.isActive = function () {
          var a,
            b = this._timeline,
            c = this._startTime;
          return (
            !b ||
            (!this._gc &&
              !this._paused &&
              b.isActive() &&
              (a = b.rawTime()) >= c &&
              a < c + this.totalDuration() / this._timeScale)
          );
        }),
        (g._enabled = function (a, b) {
          return (
            i || h.wake(),
            (this._gc = !a),
            (this._active = this.isActive()),
            b !== !0 &&
              (a && !this.timeline
                ? this._timeline.add(this, this._startTime - this._delay)
                : !a && this.timeline && this._timeline._remove(this, !0)),
            !1
          );
        }),
        (g._kill = function (a, b) {
          return this._enabled(!1, !1);
        }),
        (g.kill = function (a, b) {
          return this._kill(a, b), this;
        }),
        (g._uncache = function (a) {
          for (var b = a ? this : this.timeline; b; )
            (b._dirty = !0), (b = b.timeline);
          return this;
        }),
        (g._swapSelfInParams = function (a) {
          for (var b = a.length, c = a.concat(); --b > -1; )
            "{self}" === a[b] && (c[b] = this);
          return c;
        }),
        (g._callback = function (a) {
          var b = this.vars,
            c = b[a],
            d = b[a + "Params"],
            e = b[a + "Scope"] || b.callbackScope || this,
            f = d ? d.length : 0;
          switch (f) {
            case 0:
              c.call(e);
              break;
            case 1:
              c.call(e, d[0]);
              break;
            case 2:
              c.call(e, d[0], d[1]);
              break;
            default:
              c.apply(e, d);
          }
        }),
        (g.eventCallback = function (a, b, c, d) {
          if ("on" === (a || "").substr(0, 2)) {
            var e = this.vars;
            if (1 === arguments.length) return e[a];
            null == b
              ? delete e[a]
              : ((e[a] = b),
                (e[a + "Params"] =
                  o(c) && -1 !== c.join("").indexOf("{self}")
                    ? this._swapSelfInParams(c)
                    : c),
                (e[a + "Scope"] = d)),
              "onUpdate" === a && (this._onUpdate = b);
          }
          return this;
        }),
        (g.delay = function (a) {
          return arguments.length
            ? (this._timeline.smoothChildTiming &&
                this.startTime(this._startTime + a - this._delay),
              (this._delay = a),
              this)
            : this._delay;
        }),
        (g.duration = function (a) {
          return arguments.length
            ? ((this._duration = this._totalDuration = a),
              this._uncache(!0),
              this._timeline.smoothChildTiming &&
                this._time > 0 &&
                this._time < this._duration &&
                0 !== a &&
                this.totalTime(this._totalTime * (a / this._duration), !0),
              this)
            : ((this._dirty = !1), this._duration);
        }),
        (g.totalDuration = function (a) {
          return (
            (this._dirty = !1),
            arguments.length ? this.duration(a) : this._totalDuration
          );
        }),
        (g.time = function (a, b) {
          return arguments.length
            ? (this._dirty && this.totalDuration(),
              this.totalTime(a > this._duration ? this._duration : a, b))
            : this._time;
        }),
        (g.totalTime = function (a, b, c) {
          if ((i || h.wake(), !arguments.length)) return this._totalTime;
          if (this._timeline) {
            if (
              (0 > a && !c && (a += this.totalDuration()),
              this._timeline.smoothChildTiming)
            ) {
              this._dirty && this.totalDuration();
              var d = this._totalDuration,
                e = this._timeline;
              if (
                (a > d && !c && (a = d),
                (this._startTime =
                  (this._paused ? this._pauseTime : e._time) -
                  (this._reversed ? d - a : a) / this._timeScale),
                e._dirty || this._uncache(!1),
                e._timeline)
              )
                for (; e._timeline; )
                  e._timeline._time !==
                    (e._startTime + e._totalTime) / e._timeScale &&
                    e.totalTime(e._totalTime, !0),
                    (e = e._timeline);
            }
            this._gc && this._enabled(!0, !1),
              (this._totalTime !== a || 0 === this._duration) &&
                (I.length && X(), this.render(a, b, !1), I.length && X());
          }
          return this;
        }),
        (g.progress = g.totalProgress = function (a, b) {
          var c = this.duration();
          return arguments.length
            ? this.totalTime(c * a, b)
            : c
            ? this._time / c
            : this.ratio;
        }),
        (g.startTime = function (a) {
          return arguments.length
            ? (a !== this._startTime &&
                ((this._startTime = a),
                this.timeline &&
                  this.timeline._sortChildren &&
                  this.timeline.add(this, a - this._delay)),
              this)
            : this._startTime;
        }),
        (g.endTime = function (a) {
          return (
            this._startTime +
            (0 != a ? this.totalDuration() : this.duration()) / this._timeScale
          );
        }),
        (g.timeScale = function (a) {
          if (!arguments.length) return this._timeScale;
          if (
            ((a = a || l), this._timeline && this._timeline.smoothChildTiming)
          ) {
            var b = this._pauseTime,
              c = b || 0 === b ? b : this._timeline.totalTime();
            this._startTime = c - ((c - this._startTime) * this._timeScale) / a;
          }
          return (this._timeScale = a), this._uncache(!1);
        }),
        (g.reversed = function (a) {
          return arguments.length
            ? (a != this._reversed &&
                ((this._reversed = a),
                this.totalTime(
                  this._timeline && !this._timeline.smoothChildTiming
                    ? this.totalDuration() - this._totalTime
                    : this._totalTime,
                  !0
                )),
              this)
            : this._reversed;
        }),
        (g.paused = function (a) {
          if (!arguments.length) return this._paused;
          var b,
            c,
            d = this._timeline;
          return (
            a != this._paused &&
              d &&
              (i || a || h.wake(),
              (b = d.rawTime()),
              (c = b - this._pauseTime),
              !a &&
                d.smoothChildTiming &&
                ((this._startTime += c), this._uncache(!1)),
              (this._pauseTime = a ? b : null),
              (this._paused = a),
              (this._active = this.isActive()),
              !a &&
                0 !== c &&
                this._initted &&
                this.duration() &&
                ((b = d.smoothChildTiming
                  ? this._totalTime
                  : (b - this._startTime) / this._timeScale),
                this.render(b, b === this._totalTime, !0))),
            this._gc && !a && this._enabled(!0, !1),
            this
          );
        });
      var E = s("core.SimpleTimeline", function (a) {
        C.call(this, 0, a),
          (this.autoRemoveChildren = this.smoothChildTiming = !0);
      });
      (g = E.prototype = new C()),
        (g.constructor = E),
        (g.kill()._gc = !1),
        (g._first = g._last = g._recent = null),
        (g._sortChildren = !1),
        (g.add = g.insert = function (a, b, c, d) {
          var e, f;
          if (
            ((a._startTime = Number(b || 0) + a._delay),
            a._paused &&
              this !== a._timeline &&
              (a._pauseTime =
                a._startTime + (this.rawTime() - a._startTime) / a._timeScale),
            a.timeline && a.timeline._remove(a, !0),
            (a.timeline = a._timeline = this),
            a._gc && a._enabled(!0, !0),
            (e = this._last),
            this._sortChildren)
          )
            for (f = a._startTime; e && e._startTime > f; ) e = e._prev;
          return (
            e
              ? ((a._next = e._next), (e._next = a))
              : ((a._next = this._first), (this._first = a)),
            a._next ? (a._next._prev = a) : (this._last = a),
            (a._prev = e),
            (this._recent = a),
            this._timeline && this._uncache(!0),
            this
          );
        }),
        (g._remove = function (a, b) {
          return (
            a.timeline === this &&
              (b || a._enabled(!1, !0),
              a._prev
                ? (a._prev._next = a._next)
                : this._first === a && (this._first = a._next),
              a._next
                ? (a._next._prev = a._prev)
                : this._last === a && (this._last = a._prev),
              (a._next = a._prev = a.timeline = null),
              a === this._recent && (this._recent = this._last),
              this._timeline && this._uncache(!0)),
            this
          );
        }),
        (g.render = function (a, b, c) {
          var d,
            e = this._first;
          for (this._totalTime = this._time = this._rawPrevTime = a; e; )
            (d = e._next),
              (e._active || (a >= e._startTime && !e._paused)) &&
                (e._reversed
                  ? e.render(
                      (e._dirty ? e.totalDuration() : e._totalDuration) -
                        (a - e._startTime) * e._timeScale,
                      b,
                      c
                    )
                  : e.render((a - e._startTime) * e._timeScale, b, c)),
              (e = d);
        }),
        (g.rawTime = function () {
          return i || h.wake(), this._totalTime;
        });
      var F = s(
          "TweenLite",
          function (b, c, d) {
            if (
              (C.call(this, c, d),
              (this.render = F.prototype.render),
              null == b)
            )
              throw "Cannot tween a null target.";
            this.target = b = "string" != typeof b ? b : F.selector(b) || b;
            var e,
              f,
              g,
              h =
                b.jquery ||
                (b.length &&
                  b !== a &&
                  b[0] &&
                  (b[0] === a || (b[0].nodeType && b[0].style && !b.nodeType))),
              i = this.vars.overwrite;
            if (
              ((this._overwrite = i =
                null == i
                  ? T[F.defaultOverwrite]
                  : "number" == typeof i
                  ? i >> 0
                  : T[i]),
              (h || b instanceof Array || (b.push && o(b))) &&
                "number" != typeof b[0])
            )
              for (
                this._targets = g = m(b),
                  this._propLookup = [],
                  this._siblings = [],
                  e = 0;
                e < g.length;
                e++
              )
                (f = g[e]),
                  f
                    ? "string" != typeof f
                      ? f.length &&
                        f !== a &&
                        f[0] &&
                        (f[0] === a ||
                          (f[0].nodeType && f[0].style && !f.nodeType))
                        ? (g.splice(e--, 1),
                          (this._targets = g = g.concat(m(f))))
                        : ((this._siblings[e] = Y(f, this, !1)),
                          1 === i &&
                            this._siblings[e].length > 1 &&
                            $(f, this, null, 1, this._siblings[e]))
                      : ((f = g[e--] = F.selector(f)),
                        "string" == typeof f && g.splice(e + 1, 1))
                    : g.splice(e--, 1);
            else
              (this._propLookup = {}),
                (this._siblings = Y(b, this, !1)),
                1 === i &&
                  this._siblings.length > 1 &&
                  $(b, this, null, 1, this._siblings);
            (this.vars.immediateRender ||
              (0 === c &&
                0 === this._delay &&
                this.vars.immediateRender !== !1)) &&
              ((this._time = -l), this.render(Math.min(0, -this._delay)));
          },
          !0
        ),
        G = function (b) {
          return (
            b &&
            b.length &&
            b !== a &&
            b[0] &&
            (b[0] === a || (b[0].nodeType && b[0].style && !b.nodeType))
          );
        },
        H = function (a, b) {
          var c,
            d = {};
          for (c in a)
            S[c] ||
              (c in b &&
                "transform" !== c &&
                "x" !== c &&
                "y" !== c &&
                "width" !== c &&
                "height" !== c &&
                "className" !== c &&
                "border" !== c) ||
              !(!P[c] || (P[c] && P[c]._autoCSS)) ||
              ((d[c] = a[c]), delete a[c]);
          a.css = d;
        };
      (g = F.prototype = new C()),
        (g.constructor = F),
        (g.kill()._gc = !1),
        (g.ratio = 0),
        (g._firstPT = g._targets = g._overwrittenProps = g._startAt = null),
        (g._notifyPluginsOfEnabled = g._lazy = !1),
        (F.version = "1.19.0"),
        (F.defaultEase = g._ease = new u(null, null, 1, 1)),
        (F.defaultOverwrite = "auto"),
        (F.ticker = h),
        (F.autoSleep = 120),
        (F.lagSmoothing = function (a, b) {
          h.lagSmoothing(a, b);
        }),
        (F.selector =
          a.$ ||
          a.jQuery ||
          function (b) {
            var c = a.$ || a.jQuery;
            return c
              ? ((F.selector = c), c(b))
              : "undefined" == typeof document
              ? b
              : document.querySelectorAll
              ? document.querySelectorAll(b)
              : document.getElementById("#" === b.charAt(0) ? b.substr(1) : b);
          });
      var I = [],
        J = {},
        K = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
        L = function (a) {
          for (var b, c = this._firstPT, d = 1e-6; c; )
            (b = c.blob ? (a ? this.join("") : this.start) : c.c * a + c.s),
              c.m
                ? (b = c.m(b, this._target || c.t))
                : d > b && b > -d && (b = 0),
              c.f ? (c.fp ? c.t[c.p](c.fp, b) : c.t[c.p](b)) : (c.t[c.p] = b),
              (c = c._next);
        },
        M = function (a, b, c, d) {
          var e,
            f,
            g,
            h,
            i,
            j,
            k,
            l = [a, b],
            m = 0,
            n = "",
            o = 0;
          for (
            l.start = a,
              c && (c(l), (a = l[0]), (b = l[1])),
              l.length = 0,
              e = a.match(K) || [],
              f = b.match(K) || [],
              d &&
                ((d._next = null), (d.blob = 1), (l._firstPT = l._applyPT = d)),
              i = f.length,
              h = 0;
            i > h;
            h++
          )
            (k = f[h]),
              (j = b.substr(m, b.indexOf(k, m) - m)),
              (n += j || !h ? j : ","),
              (m += j.length),
              o ? (o = (o + 1) % 5) : "rgba(" === j.substr(-5) && (o = 1),
              k === e[h] || e.length <= h
                ? (n += k)
                : (n && (l.push(n), (n = "")),
                  (g = parseFloat(e[h])),
                  l.push(g),
                  (l._firstPT = {
                    _next: l._firstPT,
                    t: l,
                    p: l.length - 1,
                    s: g,
                    c:
                      ("=" === k.charAt(1)
                        ? parseInt(k.charAt(0) + "1", 10) *
                          parseFloat(k.substr(2))
                        : parseFloat(k) - g) || 0,
                    f: 0,
                    m: o && 4 > o ? Math.round : 0,
                  })),
              (m += k.length);
          return (n += b.substr(m)), n && l.push(n), (l.setRatio = L), l;
        },
        N = function (a, b, c, d, e, f, g, h, i) {
          "function" == typeof d && (d = d(i || 0, a));
          var j,
            k,
            l = "get" === c ? a[b] : c,
            m = typeof a[b],
            n = "string" == typeof d && "=" === d.charAt(1),
            o = {
              t: a,
              p: b,
              s: l,
              f: "function" === m,
              pg: 0,
              n: e || b,
              m: f ? ("function" == typeof f ? f : Math.round) : 0,
              pr: 0,
              c: n
                ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2))
                : parseFloat(d) - l || 0,
            };
          return (
            "number" !== m &&
              ("function" === m &&
                "get" === c &&
                ((k =
                  b.indexOf("set") ||
                  "function" != typeof a["get" + b.substr(3)]
                    ? b
                    : "get" + b.substr(3)),
                (o.s = l = g ? a[k](g) : a[k]())),
              "string" == typeof l && (g || isNaN(l))
                ? ((o.fp = g),
                  (j = M(l, d, h || F.defaultStringFilter, o)),
                  (o = {
                    t: j,
                    p: "setRatio",
                    s: 0,
                    c: 1,
                    f: 2,
                    pg: 0,
                    n: e || b,
                    pr: 0,
                    m: 0,
                  }))
                : n ||
                  ((o.s = parseFloat(l)), (o.c = parseFloat(d) - o.s || 0))),
            o.c
              ? ((o._next = this._firstPT) && (o._next._prev = o),
                (this._firstPT = o),
                o)
              : void 0
          );
        },
        O = (F._internals = {
          isArray: o,
          isSelector: G,
          lazyTweens: I,
          blobDif: M,
        }),
        P = (F._plugins = {}),
        Q = (O.tweenLookup = {}),
        R = 0,
        S = (O.reservedProps = {
          ease: 1,
          delay: 1,
          overwrite: 1,
          onComplete: 1,
          onCompleteParams: 1,
          onCompleteScope: 1,
          useFrames: 1,
          runBackwards: 1,
          startAt: 1,
          onUpdate: 1,
          onUpdateParams: 1,
          onUpdateScope: 1,
          onStart: 1,
          onStartParams: 1,
          onStartScope: 1,
          onReverseComplete: 1,
          onReverseCompleteParams: 1,
          onReverseCompleteScope: 1,
          onRepeat: 1,
          onRepeatParams: 1,
          onRepeatScope: 1,
          easeParams: 1,
          yoyo: 1,
          immediateRender: 1,
          repeat: 1,
          repeatDelay: 1,
          data: 1,
          paused: 1,
          reversed: 1,
          autoCSS: 1,
          lazy: 1,
          onOverwrite: 1,
          callbackScope: 1,
          stringFilter: 1,
          id: 1,
        }),
        T = {
          none: 0,
          all: 1,
          auto: 2,
          concurrent: 3,
          allOnStart: 4,
          preexisting: 5,
          true: 1,
          false: 0,
        },
        U = (C._rootFramesTimeline = new E()),
        V = (C._rootTimeline = new E()),
        W = 30,
        X = (O.lazyRender = function () {
          var a,
            b = I.length;
          for (J = {}; --b > -1; )
            (a = I[b]),
              a &&
                a._lazy !== !1 &&
                (a.render(a._lazy[0], a._lazy[1], !0), (a._lazy = !1));
          I.length = 0;
        });
      (V._startTime = h.time),
        (U._startTime = h.frame),
        (V._active = U._active = !0),
        setTimeout(X, 1),
        (C._updateRoot = F.render = function () {
          var a, b, c;
          if (
            (I.length && X(),
            V.render((h.time - V._startTime) * V._timeScale, !1, !1),
            U.render((h.frame - U._startTime) * U._timeScale, !1, !1),
            I.length && X(),
            h.frame >= W)
          ) {
            W = h.frame + (parseInt(F.autoSleep, 10) || 120);
            for (c in Q) {
              for (b = Q[c].tweens, a = b.length; --a > -1; )
                b[a]._gc && b.splice(a, 1);
              0 === b.length && delete Q[c];
            }
            if (
              ((c = V._first),
              (!c || c._paused) &&
                F.autoSleep &&
                !U._first &&
                1 === h._listeners.tick.length)
            ) {
              for (; c && c._paused; ) c = c._next;
              c || h.sleep();
            }
          }
        }),
        h.addEventListener("tick", C._updateRoot);
      var Y = function (a, b, c) {
          var d,
            e,
            f = a._gsTweenID;
          if (
            (Q[f || (a._gsTweenID = f = "t" + R++)] ||
              (Q[f] = { target: a, tweens: [] }),
            b && ((d = Q[f].tweens), (d[(e = d.length)] = b), c))
          )
            for (; --e > -1; ) d[e] === b && d.splice(e, 1);
          return Q[f].tweens;
        },
        Z = function (a, b, c, d) {
          var e,
            f,
            g = a.vars.onOverwrite;
          return (
            g && (e = g(a, b, c, d)),
            (g = F.onOverwrite),
            g && (f = g(a, b, c, d)),
            e !== !1 && f !== !1
          );
        },
        $ = function (a, b, c, d, e) {
          var f, g, h, i;
          if (1 === d || d >= 4) {
            for (i = e.length, f = 0; i > f; f++)
              if ((h = e[f]) !== b) h._gc || (h._kill(null, a, b) && (g = !0));
              else if (5 === d) break;
            return g;
          }
          var j,
            k = b._startTime + l,
            m = [],
            n = 0,
            o = 0 === b._duration;
          for (f = e.length; --f > -1; )
            (h = e[f]) === b ||
              h._gc ||
              h._paused ||
              (h._timeline !== b._timeline
                ? ((j = j || _(b, 0, o)), 0 === _(h, j, o) && (m[n++] = h))
                : h._startTime <= k &&
                  h._startTime + h.totalDuration() / h._timeScale > k &&
                  (((o || !h._initted) && k - h._startTime <= 2e-10) ||
                    (m[n++] = h)));
          for (f = n; --f > -1; )
            if (
              ((h = m[f]),
              2 === d && h._kill(c, a, b) && (g = !0),
              2 !== d || (!h._firstPT && h._initted))
            ) {
              if (2 !== d && !Z(h, b)) continue;
              h._enabled(!1, !1) && (g = !0);
            }
          return g;
        },
        _ = function (a, b, c) {
          for (
            var d = a._timeline, e = d._timeScale, f = a._startTime;
            d._timeline;

          ) {
            if (((f += d._startTime), (e *= d._timeScale), d._paused))
              return -100;
            d = d._timeline;
          }
          return (
            (f /= e),
            f > b
              ? f - b
              : (c && f === b) || (!a._initted && 2 * l > f - b)
              ? l
              : (f += a.totalDuration() / a._timeScale / e) > b + l
              ? 0
              : f - b - l
          );
        };
      (g._init = function () {
        var a,
          b,
          c,
          d,
          e,
          f,
          g = this.vars,
          h = this._overwrittenProps,
          i = this._duration,
          j = !!g.immediateRender,
          k = g.ease;
        if (g.startAt) {
          this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()),
            (e = {});
          for (d in g.startAt) e[d] = g.startAt[d];
          if (
            ((e.overwrite = !1),
            (e.immediateRender = !0),
            (e.lazy = j && g.lazy !== !1),
            (e.startAt = e.delay = null),
            (this._startAt = F.to(this.target, 0, e)),
            j)
          )
            if (this._time > 0) this._startAt = null;
            else if (0 !== i) return;
        } else if (g.runBackwards && 0 !== i)
          if (this._startAt)
            this._startAt.render(-1, !0),
              this._startAt.kill(),
              (this._startAt = null);
          else {
            0 !== this._time && (j = !1), (c = {});
            for (d in g) (S[d] && "autoCSS" !== d) || (c[d] = g[d]);
            if (
              ((c.overwrite = 0),
              (c.data = "isFromStart"),
              (c.lazy = j && g.lazy !== !1),
              (c.immediateRender = j),
              (this._startAt = F.to(this.target, 0, c)),
              j)
            ) {
              if (0 === this._time) return;
            } else
              this._startAt._init(),
                this._startAt._enabled(!1),
                this.vars.immediateRender && (this._startAt = null);
          }
        if (
          ((this._ease = k = k
            ? k instanceof u
              ? k
              : "function" == typeof k
              ? new u(k, g.easeParams)
              : v[k] || F.defaultEase
            : F.defaultEase),
          g.easeParams instanceof Array &&
            k.config &&
            (this._ease = k.config.apply(k, g.easeParams)),
          (this._easeType = this._ease._type),
          (this._easePower = this._ease._power),
          (this._firstPT = null),
          this._targets)
        )
          for (f = this._targets.length, a = 0; f > a; a++)
            this._initProps(
              this._targets[a],
              (this._propLookup[a] = {}),
              this._siblings[a],
              h ? h[a] : null,
              a
            ) && (b = !0);
        else
          b = this._initProps(
            this.target,
            this._propLookup,
            this._siblings,
            h,
            0
          );
        if (
          (b && F._onPluginEvent("_onInitAllProps", this),
          h &&
            (this._firstPT ||
              ("function" != typeof this.target && this._enabled(!1, !1))),
          g.runBackwards)
        )
          for (c = this._firstPT; c; )
            (c.s += c.c), (c.c = -c.c), (c = c._next);
        (this._onUpdate = g.onUpdate), (this._initted = !0);
      }),
        (g._initProps = function (b, c, d, e, f) {
          var g, h, i, j, k, l;
          if (null == b) return !1;
          J[b._gsTweenID] && X(),
            this.vars.css ||
              (b.style &&
                b !== a &&
                b.nodeType &&
                P.css &&
                this.vars.autoCSS !== !1 &&
                H(this.vars, b));
          for (g in this.vars)
            if (((l = this.vars[g]), S[g]))
              l &&
                (l instanceof Array || (l.push && o(l))) &&
                -1 !== l.join("").indexOf("{self}") &&
                (this.vars[g] = l = this._swapSelfInParams(l, this));
            else if (
              P[g] &&
              (j = new P[g]())._onInitTween(b, this.vars[g], this, f)
            ) {
              for (
                this._firstPT = k = {
                  _next: this._firstPT,
                  t: j,
                  p: "setRatio",
                  s: 0,
                  c: 1,
                  f: 1,
                  n: g,
                  pg: 1,
                  pr: j._priority,
                  m: 0,
                },
                  h = j._overwriteProps.length;
                --h > -1;

              )
                c[j._overwriteProps[h]] = this._firstPT;
              (j._priority || j._onInitAllProps) && (i = !0),
                (j._onDisable || j._onEnable) &&
                  (this._notifyPluginsOfEnabled = !0),
                k._next && (k._next._prev = k);
            } else
              c[g] = N.call(
                this,
                b,
                g,
                "get",
                l,
                g,
                0,
                null,
                this.vars.stringFilter,
                f
              );
          return e && this._kill(e, b)
            ? this._initProps(b, c, d, e, f)
            : this._overwrite > 1 &&
              this._firstPT &&
              d.length > 1 &&
              $(b, this, c, this._overwrite, d)
            ? (this._kill(c, b), this._initProps(b, c, d, e, f))
            : (this._firstPT &&
                ((this.vars.lazy !== !1 && this._duration) ||
                  (this.vars.lazy && !this._duration)) &&
                (J[b._gsTweenID] = !0),
              i);
        }),
        (g.render = function (a, b, c) {
          var d,
            e,
            f,
            g,
            h = this._time,
            i = this._duration,
            j = this._rawPrevTime;
          if (a >= i - 1e-7)
            (this._totalTime = this._time = i),
              (this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
              this._reversed ||
                ((d = !0),
                (e = "onComplete"),
                (c = c || this._timeline.autoRemoveChildren)),
              0 === i &&
                (this._initted || !this.vars.lazy || c) &&
                (this._startTime === this._timeline._duration && (a = 0),
                (0 > j ||
                  (0 >= a && a >= -1e-7) ||
                  (j === l && "isPause" !== this.data)) &&
                  j !== a &&
                  ((c = !0), j > l && (e = "onReverseComplete")),
                (this._rawPrevTime = g = !b || a || j === a ? a : l));
          else if (1e-7 > a)
            (this._totalTime = this._time = 0),
              (this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0),
              (0 !== h || (0 === i && j > 0)) &&
                ((e = "onReverseComplete"), (d = this._reversed)),
              0 > a &&
                ((this._active = !1),
                0 === i &&
                  (this._initted || !this.vars.lazy || c) &&
                  (j >= 0 && (j !== l || "isPause" !== this.data) && (c = !0),
                  (this._rawPrevTime = g = !b || a || j === a ? a : l))),
              this._initted || (c = !0);
          else if (((this._totalTime = this._time = a), this._easeType)) {
            var k = a / i,
              m = this._easeType,
              n = this._easePower;
            (1 === m || (3 === m && k >= 0.5)) && (k = 1 - k),
              3 === m && (k *= 2),
              1 === n
                ? (k *= k)
                : 2 === n
                ? (k *= k * k)
                : 3 === n
                ? (k *= k * k * k)
                : 4 === n && (k *= k * k * k * k),
              1 === m
                ? (this.ratio = 1 - k)
                : 2 === m
                ? (this.ratio = k)
                : 0.5 > a / i
                ? (this.ratio = k / 2)
                : (this.ratio = 1 - k / 2);
          } else this.ratio = this._ease.getRatio(a / i);
          if (this._time !== h || c) {
            if (!this._initted) {
              if ((this._init(), !this._initted || this._gc)) return;
              if (
                !c &&
                this._firstPT &&
                ((this.vars.lazy !== !1 && this._duration) ||
                  (this.vars.lazy && !this._duration))
              )
                return (
                  (this._time = this._totalTime = h),
                  (this._rawPrevTime = j),
                  I.push(this),
                  void (this._lazy = [a, b])
                );
              this._time && !d
                ? (this.ratio = this._ease.getRatio(this._time / i))
                : d &&
                  this._ease._calcEnd &&
                  (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
            }
            for (
              this._lazy !== !1 && (this._lazy = !1),
                this._active ||
                  (!this._paused &&
                    this._time !== h &&
                    a >= 0 &&
                    (this._active = !0)),
                0 === h &&
                  (this._startAt &&
                    (a >= 0
                      ? this._startAt.render(a, b, c)
                      : e || (e = "_dummyGS")),
                  this.vars.onStart &&
                    (0 !== this._time || 0 === i) &&
                    (b || this._callback("onStart"))),
                f = this._firstPT;
              f;

            )
              f.f
                ? f.t[f.p](f.c * this.ratio + f.s)
                : (f.t[f.p] = f.c * this.ratio + f.s),
                (f = f._next);
            this._onUpdate &&
              (0 > a &&
                this._startAt &&
                a !== -1e-4 &&
                this._startAt.render(a, b, c),
              b ||
                ((this._time !== h || d || c) && this._callback("onUpdate"))),
              e &&
                (!this._gc || c) &&
                (0 > a &&
                  this._startAt &&
                  !this._onUpdate &&
                  a !== -1e-4 &&
                  this._startAt.render(a, b, c),
                d &&
                  (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                  (this._active = !1)),
                !b && this.vars[e] && this._callback(e),
                0 === i &&
                  this._rawPrevTime === l &&
                  g !== l &&
                  (this._rawPrevTime = 0));
          }
        }),
        (g._kill = function (a, b, c) {
          if (
            ("all" === a && (a = null),
            null == a && (null == b || b === this.target))
          )
            return (this._lazy = !1), this._enabled(!1, !1);
          b =
            "string" != typeof b
              ? b || this._targets || this.target
              : F.selector(b) || b;
          var d,
            e,
            f,
            g,
            h,
            i,
            j,
            k,
            l,
            m =
              c &&
              this._time &&
              c._startTime === this._startTime &&
              this._timeline === c._timeline;
          if ((o(b) || G(b)) && "number" != typeof b[0])
            for (d = b.length; --d > -1; ) this._kill(a, b[d], c) && (i = !0);
          else {
            if (this._targets) {
              for (d = this._targets.length; --d > -1; )
                if (b === this._targets[d]) {
                  (h = this._propLookup[d] || {}),
                    (this._overwrittenProps = this._overwrittenProps || []),
                    (e = this._overwrittenProps[d] = a
                      ? this._overwrittenProps[d] || {}
                      : "all");
                  break;
                }
            } else {
              if (b !== this.target) return !1;
              (h = this._propLookup),
                (e = this._overwrittenProps = a
                  ? this._overwrittenProps || {}
                  : "all");
            }
            if (h) {
              if (
                ((j = a || h),
                (k =
                  a !== e &&
                  "all" !== e &&
                  a !== h &&
                  ("object" != typeof a || !a._tempKill)),
                c && (F.onOverwrite || this.vars.onOverwrite))
              ) {
                for (f in j) h[f] && (l || (l = []), l.push(f));
                if ((l || !a) && !Z(this, c, b, l)) return !1;
              }
              for (f in j)
                (g = h[f]) &&
                  (m && (g.f ? g.t[g.p](g.s) : (g.t[g.p] = g.s), (i = !0)),
                  g.pg && g.t._kill(j) && (i = !0),
                  (g.pg && 0 !== g.t._overwriteProps.length) ||
                    (g._prev
                      ? (g._prev._next = g._next)
                      : g === this._firstPT && (this._firstPT = g._next),
                    g._next && (g._next._prev = g._prev),
                    (g._next = g._prev = null)),
                  delete h[f]),
                  k && (e[f] = 1);
              !this._firstPT && this._initted && this._enabled(!1, !1);
            }
          }
          return i;
        }),
        (g.invalidate = function () {
          return (
            this._notifyPluginsOfEnabled &&
              F._onPluginEvent("_onDisable", this),
            (this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null),
            (this._notifyPluginsOfEnabled = this._active = this._lazy = !1),
            (this._propLookup = this._targets ? {} : []),
            C.prototype.invalidate.call(this),
            this.vars.immediateRender &&
              ((this._time = -l), this.render(Math.min(0, -this._delay))),
            this
          );
        }),
        (g._enabled = function (a, b) {
          if ((i || h.wake(), a && this._gc)) {
            var c,
              d = this._targets;
            if (d)
              for (c = d.length; --c > -1; )
                this._siblings[c] = Y(d[c], this, !0);
            else this._siblings = Y(this.target, this, !0);
          }
          return (
            C.prototype._enabled.call(this, a, b),
            this._notifyPluginsOfEnabled && this._firstPT
              ? F._onPluginEvent(a ? "_onEnable" : "_onDisable", this)
              : !1
          );
        }),
        (F.to = function (a, b, c) {
          return new F(a, b, c);
        }),
        (F.from = function (a, b, c) {
          return (
            (c.runBackwards = !0),
            (c.immediateRender = 0 != c.immediateRender),
            new F(a, b, c)
          );
        }),
        (F.fromTo = function (a, b, c, d) {
          return (
            (d.startAt = c),
            (d.immediateRender =
              0 != d.immediateRender && 0 != c.immediateRender),
            new F(a, b, d)
          );
        }),
        (F.delayedCall = function (a, b, c, d, e) {
          return new F(b, 0, {
            delay: a,
            onComplete: b,
            onCompleteParams: c,
            callbackScope: d,
            onReverseComplete: b,
            onReverseCompleteParams: c,
            immediateRender: !1,
            lazy: !1,
            useFrames: e,
            overwrite: 0,
          });
        }),
        (F.set = function (a, b) {
          return new F(a, 0, b);
        }),
        (F.getTweensOf = function (a, b) {
          if (null == a) return [];
          a = "string" != typeof a ? a : F.selector(a) || a;
          var c, d, e, f;
          if ((o(a) || G(a)) && "number" != typeof a[0]) {
            for (c = a.length, d = []; --c > -1; )
              d = d.concat(F.getTweensOf(a[c], b));
            for (c = d.length; --c > -1; )
              for (f = d[c], e = c; --e > -1; ) f === d[e] && d.splice(c, 1);
          } else
            for (d = Y(a).concat(), c = d.length; --c > -1; )
              (d[c]._gc || (b && !d[c].isActive())) && d.splice(c, 1);
          return d;
        }),
        (F.killTweensOf = F.killDelayedCallsTo = function (a, b, c) {
          "object" == typeof b && ((c = b), (b = !1));
          for (var d = F.getTweensOf(a, b), e = d.length; --e > -1; )
            d[e]._kill(c, a);
        });
      var aa = s(
        "plugins.TweenPlugin",
        function (a, b) {
          (this._overwriteProps = (a || "").split(",")),
            (this._propName = this._overwriteProps[0]),
            (this._priority = b || 0),
            (this._super = aa.prototype);
        },
        !0
      );
      if (
        ((g = aa.prototype),
        (aa.version = "1.19.0"),
        (aa.API = 2),
        (g._firstPT = null),
        (g._addTween = N),
        (g.setRatio = L),
        (g._kill = function (a) {
          var b,
            c = this._overwriteProps,
            d = this._firstPT;
          if (null != a[this._propName]) this._overwriteProps = [];
          else for (b = c.length; --b > -1; ) null != a[c[b]] && c.splice(b, 1);
          for (; d; )
            null != a[d.n] &&
              (d._next && (d._next._prev = d._prev),
              d._prev
                ? ((d._prev._next = d._next), (d._prev = null))
                : this._firstPT === d && (this._firstPT = d._next)),
              (d = d._next);
          return !1;
        }),
        (g._mod = g._roundProps = function (a) {
          for (var b, c = this._firstPT; c; )
            (b =
              a[this._propName] ||
              (null != c.n && a[c.n.split(this._propName + "_").join("")])),
              b &&
                "function" == typeof b &&
                (2 === c.f ? (c.t._applyPT.m = b) : (c.m = b)),
              (c = c._next);
        }),
        (F._onPluginEvent = function (a, b) {
          var c,
            d,
            e,
            f,
            g,
            h = b._firstPT;
          if ("_onInitAllProps" === a) {
            for (; h; ) {
              for (g = h._next, d = e; d && d.pr > h.pr; ) d = d._next;
              (h._prev = d ? d._prev : f) ? (h._prev._next = h) : (e = h),
                (h._next = d) ? (d._prev = h) : (f = h),
                (h = g);
            }
            h = b._firstPT = e;
          }
          for (; h; )
            h.pg && "function" == typeof h.t[a] && h.t[a]() && (c = !0),
              (h = h._next);
          return c;
        }),
        (aa.activate = function (a) {
          for (var b = a.length; --b > -1; )
            a[b].API === aa.API && (P[new a[b]()._propName] = a[b]);
          return !0;
        }),
        (r.plugin = function (a) {
          if (!(a && a.propName && a.init && a.API))
            throw "illegal plugin definition.";
          var b,
            c = a.propName,
            d = a.priority || 0,
            e = a.overwriteProps,
            f = {
              init: "_onInitTween",
              set: "setRatio",
              kill: "_kill",
              round: "_mod",
              mod: "_mod",
              initAll: "_onInitAllProps",
            },
            g = s(
              "plugins." + c.charAt(0).toUpperCase() + c.substr(1) + "Plugin",
              function () {
                aa.call(this, c, d), (this._overwriteProps = e || []);
              },
              a.global === !0
            ),
            h = (g.prototype = new aa(c));
          (h.constructor = g), (g.API = a.API);
          for (b in f) "function" == typeof a[b] && (h[f[b]] = a[b]);
          return (g.version = a.version), aa.activate([g]), g;
        }),
        (e = a._gsQueue))
      ) {
        for (f = 0; f < e.length; f++) e[f]();
        for (g in p) p[g].func || a;
      }
      i = !1;
    }
  })(
    "undefined" != typeof module &&
      module.exports &&
      "undefined" != typeof global
      ? global
      : this || window,
    "TweenMax"
  );
var _gsScope =
  "undefined" != typeof module && module.exports && "undefined" != typeof global
    ? global
    : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
  "use strict";
  var a = document.documentElement,
    b = window,
    c = function (c, d) {
      var e = "x" === d ? "Width" : "Height",
        f = "scroll" + e,
        g = "client" + e,
        h = document.body;
      return c === b || c === a || c === h
        ? Math.max(a[f], h[f]) - (b["inner" + e] || a[g] || h[g])
        : c[f] - c["offset" + e];
    },
    d = function (a) {
      return (
        "string" == typeof a && (a = TweenLite.selector(a)),
        a.length && a !== b && a[0] && a[0].style && !a.nodeType && (a = a[0]),
        a === b || (a.nodeType && a.style) ? a : null
      );
    },
    e = function (c, d) {
      var e = "scroll" + ("x" === d ? "Left" : "Top");
      return (
        c === b &&
          (null != c.pageXOffset
            ? (e = "page" + d.toUpperCase() + "Offset")
            : (c = null != a[e] ? a : document.body)),
        function () {
          return c[e];
        }
      );
    },
    f = function (c, f) {
      var g = d(c).getBoundingClientRect(),
        h = !f || f === b || f === document.body,
        i = (h ? a : f).getBoundingClientRect(),
        j = { x: g.left - i.left, y: g.top - i.top };
      return !h && f && ((j.x += e(f, "x")()), (j.y += e(f, "y")())), j;
    },
    g = function (a, b, d) {
      var e = typeof a;
      return "number" === e || ("string" === e && "=" === a.charAt(1))
        ? a
        : "max" === a
        ? c(b, d)
        : Math.min(c(b, d), f(a, b)[d]);
    },
    h = _gsScope._gsDefine.plugin({
      propName: "scrollTo",
      API: 2,
      version: "1.8.0",
      init: function (a, c, d) {
        return (
          (this._wdw = a === b),
          (this._target = a),
          (this._tween = d),
          "object" != typeof c
            ? ((c = { y: c }),
              "string" == typeof c.y &&
                "max" !== c.y &&
                "=" !== c.y.charAt(1) &&
                (c.x = c.y))
            : c.nodeType && (c = { y: c, x: c }),
          (this.vars = c),
          (this._autoKill = c.autoKill !== !1),
          (this.getX = e(a, "x")),
          (this.getY = e(a, "y")),
          (this.x = this.xPrev = this.getX()),
          (this.y = this.yPrev = this.getY()),
          null != c.x
            ? (this._addTween(
                this,
                "x",
                this.x,
                g(c.x, a, "x") - (c.offsetX || 0),
                "scrollTo_x",
                !0
              ),
              this._overwriteProps.push("scrollTo_x"))
            : (this.skipX = !0),
          null != c.y
            ? (this._addTween(
                this,
                "y",
                this.y,
                g(c.y, a, "y") - (c.offsetY || 0),
                "scrollTo_y",
                !0
              ),
              this._overwriteProps.push("scrollTo_y"))
            : (this.skipY = !0),
          !0
        );
      },
      set: function (a) {
        this._super.setRatio.call(this, a);
        var d = this._wdw || !this.skipX ? this.getX() : this.xPrev,
          e = this._wdw || !this.skipY ? this.getY() : this.yPrev,
          f = e - this.yPrev,
          g = d - this.xPrev,
          i = h.autoKillThreshold;
        this.x < 0 && (this.x = 0),
          this.y < 0 && (this.y = 0),
          this._autoKill &&
            (!this.skipX &&
              (g > i || -i > g) &&
              d < c(this._target, "x") &&
              (this.skipX = !0),
            !this.skipY &&
              (f > i || -i > f) &&
              e < c(this._target, "y") &&
              (this.skipY = !0),
            this.skipX &&
              this.skipY &&
              (this._tween.kill(),
              this.vars.onAutoKill &&
                this.vars.onAutoKill.apply(
                  this.vars.onAutoKillScope || this._tween,
                  this.vars.onAutoKillParams || []
                ))),
          this._wdw
            ? b.scrollTo(this.skipX ? d : this.x, this.skipY ? e : this.y)
            : (this.skipY || (this._target.scrollTop = this.y),
              this.skipX || (this._target.scrollLeft = this.x)),
          (this.xPrev = this.x),
          (this.yPrev = this.y);
      },
    }),
    i = h.prototype;
  (h.max = c),
    (h.getOffset = f),
    (h.autoKillThreshold = 7),
    (i._kill = function (a) {
      return (
        a.scrollTo_x && (this.skipX = !0),
        a.scrollTo_y && (this.skipY = !0),
        this._super._kill.call(this, a)
      );
    });
}),
  _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
  (function (a) {
    "use strict";
    var b = function () {
      return (_gsScope.GreenSockGlobals || _gsScope)[a];
    };
    "function" == typeof define && define.amd
      ? define(["TweenLite"], b)
      : "undefined" != typeof module &&
        module.exports &&
        (require("../TweenLite.js"), (module.exports = b()));
  })("ScrollToPlugin");

!(function (a) {
  if ("object" == typeof exports && "undefined" != typeof module)
    module.exports = a();
  else if ("function" == typeof define && define.amd) define([], a);
  else {
    var b;
    (b =
      "undefined" != typeof window
        ? window
        : "undefined" != typeof global
        ? global
        : "undefined" != typeof self
        ? self
        : this),
      (b = a());
  }
})(function () {
  var a;
  return (function b(a, c, d) {
    function e(g, h) {
      if (!c[g]) {
        if (!a[g]) {
          var i = "function" == typeof require && require;
          if (!h && i) return i(g, !0);
          if (f) return f(g, !0);
          var j = new Error("Cannot find module '" + g + "'");
          throw ((j.code = "MODULE_NOT_FOUND"), j);
        }
        var k = (c[g] = { exports: {} });
        a[g][0].call(
          k.exports,
          function (b) {
            var c = a[g][1][b];
            return e(c ? c : b);
          },
          k,
          k.exports,
          b,
          a,
          c,
          d
        );
      }
      return c[g].exports;
    }
    for (
      var f = "function" == typeof require && require, g = 0;
      g < d.length;
      g++
    )
      e(d[g]);
    return e;
  })(
    {
      1: [
        function (a, b, c) {
          (function (c) {
            var d =
                "undefined" != typeof c
                  ? c
                  : "undefined" != typeof window
                  ? window
                  : {},
              e = a("min-document");
            if ("undefined" != typeof document) b.exports = document;
            else {
              var f = d["__GLOBAL_DOCUMENT_CACHE@4"];
              f || (f = d["__GLOBAL_DOCUMENT_CACHE@4"] = e), (b.exports = f);
            }
          }.call(
            this,
            "undefined" != typeof global
              ? global
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : {}
          ));
        },
        { "min-document": 3 },
      ],
      2: [
        function (a, b, c) {
          (function (a) {
            "undefined" != typeof window
              ? (b.exports = window)
              : "undefined" != typeof a
              ? (b.exports = a)
              : "undefined" != typeof self
              ? (b.exports = self)
              : (b.exports = {});
          }.call(
            this,
            "undefined" != typeof global
              ? global
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : {}
          ));
        },
        {},
      ],
      3: [function (a, b, c) {}, {}],
      4: [
        function (a, b, c) {
          var d = a("../internal/getNative"),
            e = d(Date, "now"),
            f =
              e ||
              function () {
                return new Date().getTime();
              };
          b.exports = f;
        },
        { "../internal/getNative": 20 },
      ],
      5: [
        function (a, b, c) {
          /**
           * Creates a debounced function that delays invoking `func` until after `wait`
           * milliseconds have elapsed since the last time the debounced function was
           * invoked. The debounced function comes with a `cancel` method to cancel
           * delayed invocations. Provide an options object to indicate that `func`
           * should be invoked on the leading and/or trailing edge of the `wait` timeout.
           * Subsequent calls to the debounced function return the result of the last
           * `func` invocation.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
           * on the trailing edge of the timeout only if the the debounced function is
           * invoked more than once during the `wait` timeout.
           *
           * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
           * for details over the differences between `_.debounce` and `_.throttle`.
           *
           * @static
           * @memberOf _
           * @category Function
           * @param {Function} func The function to debounce.
           * @param {number} [wait=0] The number of milliseconds to delay.
           * @param {Object} [options] The options object.
           * @param {boolean} [options.leading=false] Specify invoking on the leading
           *  edge of the timeout.
           * @param {number} [options.maxWait] The maximum time `func` is allowed to be
           *  delayed before it's invoked.
           * @param {boolean} [options.trailing=true] Specify invoking on the trailing
           *  edge of the timeout.
           * @returns {Function} Returns the new debounced function.
           * @example
           *
           * // avoid costly calculations while the window size is in flux
           * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
           *
           * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
           * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
           *   'leading': true,
           *   'trailing': false
           * }));
           *
           * // ensure `batchLog` is invoked once after 1 second of debounced calls
           * var source = new EventSource('/stream');
           * jQuery(source).on('message', _.debounce(batchLog, 250, {
           *   'maxWait': 1000
           * }));
           *
           * // cancel a debounced call
           * var todoChanges = _.debounce(batchLog, 1000);
           * Object.observe(models.todo, todoChanges);
           *
           * Object.observe(models, function(changes) {
           *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
           *     todoChanges.cancel();
           *   }
           * }, ['delete']);
           *
           * // ...at some point `models.todo` is changed
           * models.todo.completed = true;
           *
           * // ...before 1 second has passed `models.todo` is deleted
           * // which cancels the debounced `todoChanges` call
           * delete models.todo;
           */
          function d(a, b, c) {
            function d() {
              r && clearTimeout(r),
                n && clearTimeout(n),
                (t = 0),
                (n = r = s = void 0);
            }
            function i(b, c) {
              c && clearTimeout(c),
                (n = r = s = void 0),
                b &&
                  ((t = f()), (o = a.apply(q, m)), r || n || (m = q = void 0));
            }
            function j() {
              var a = b - (f() - p);
              a <= 0 || a > b ? i(s, n) : (r = setTimeout(j, a));
            }
            function k() {
              i(v, r);
            }
            function l() {
              if (
                ((m = arguments),
                (p = f()),
                (q = this),
                (s = v && (r || !w)),
                u === !1)
              )
                var c = w && !r;
              else {
                n || w || (t = p);
                var d = u - (p - t),
                  e = d <= 0 || d > u;
                e
                  ? (n && (n = clearTimeout(n)), (t = p), (o = a.apply(q, m)))
                  : n || (n = setTimeout(k, d));
              }
              return (
                e && r
                  ? (r = clearTimeout(r))
                  : r || b === u || (r = setTimeout(j, b)),
                c && ((e = !0), (o = a.apply(q, m))),
                !e || r || n || (m = q = void 0),
                o
              );
            }
            var m,
              n,
              o,
              p,
              q,
              r,
              s,
              t = 0,
              u = !1,
              v = !0;
            if ("function" != typeof a) throw new TypeError(g);
            if (((b = b < 0 ? 0 : +b || 0), c === !0)) {
              var w = !0;
              v = !1;
            } else
              e(c) &&
                ((w = !!c.leading),
                (u = "maxWait" in c && h(+c.maxWait || 0, b)),
                (v = "trailing" in c ? !!c.trailing : v));
            return (l.cancel = d), l;
          }
          var e = a("../lang/isObject"),
            f = a("../date/now"),
            g = "Expected a function",
            h = Math.max;
          b.exports = d;
        },
        { "../date/now": 4, "../lang/isObject": 33 },
      ],
      6: [
        function (a, b, c) {
          /**
           * Creates a function that invokes `func` with the `this` binding of the
           * created function and arguments from `start` and beyond provided as an array.
           *
           * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
           *
           * @static
           * @memberOf _
           * @category Function
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var say = _.restParam(function(what, names) {
           *   return what + ' ' + _.initial(names).join(', ') +
           *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
           * });
           *
           * say('hello', 'fred', 'barney', 'pebbles');
           * // => 'hello fred, barney, & pebbles'
           */
          function d(a, b) {
            if ("function" != typeof a) throw new TypeError(e);
            return (
              (b = f(void 0 === b ? a.length - 1 : +b || 0, 0)),
              function () {
                for (
                  var c = arguments,
                    d = -1,
                    e = f(c.length - b, 0),
                    g = Array(e);
                  ++d < e;

                )
                  g[d] = c[b + d];
                switch (b) {
                  case 0:
                    return a.call(this, g);
                  case 1:
                    return a.call(this, c[0], g);
                  case 2:
                    return a.call(this, c[0], c[1], g);
                }
                var h = Array(b + 1);
                for (d = -1; ++d < b; ) h[d] = c[d];
                return (h[b] = g), a.apply(this, h);
              }
            );
          } /** Used as the `TypeError` message for "Functions" methods. */
          var e = "Expected a function",
            f = Math.max;
          b.exports = d;
        },
        {},
      ],
      7: [
        function (a, b, c) {
          /**
           * Creates a throttled function that only invokes `func` at most once per
           * every `wait` milliseconds. The throttled function comes with a `cancel`
           * method to cancel delayed invocations. Provide an options object to indicate
           * that `func` should be invoked on the leading and/or trailing edge of the
           * `wait` timeout. Subsequent calls to the throttled function return the
           * result of the last `func` call.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
           * on the trailing edge of the timeout only if the the throttled function is
           * invoked more than once during the `wait` timeout.
           *
           * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
           * for details over the differences between `_.throttle` and `_.debounce`.
           *
           * @static
           * @memberOf _
           * @category Function
           * @param {Function} func The function to throttle.
           * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
           * @param {Object} [options] The options object.
           * @param {boolean} [options.leading=true] Specify invoking on the leading
           *  edge of the timeout.
           * @param {boolean} [options.trailing=true] Specify invoking on the trailing
           *  edge of the timeout.
           * @returns {Function} Returns the new throttled function.
           * @example
           *
           * // avoid excessively updating the position while scrolling
           * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
           *
           * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes
           * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
           *   'trailing': false
           * }));
           *
           * // cancel a trailing throttled call
           * jQuery(window).on('popstate', throttled.cancel);
           */
          function d(a, b, c) {
            var d = !0,
              h = !0;
            if ("function" != typeof a) throw new TypeError(g);
            return (
              c === !1
                ? (d = !1)
                : f(c) &&
                  ((d = "leading" in c ? !!c.leading : d),
                  (h = "trailing" in c ? !!c.trailing : h)),
              e(a, b, { leading: d, maxWait: +b, trailing: h })
            );
          }
          var e = a("./debounce"),
            f = a("../lang/isObject"),
            g = "Expected a function";
          b.exports = d;
        },
        { "../lang/isObject": 33, "./debounce": 5 },
      ],
      8: [
        function (a, b, c) {
          /**
           * Copies the values of `source` to `array`.
           *
           * @private
           * @param {Array} source The array to copy values from.
           * @param {Array} [array=[]] The array to copy values to.
           * @returns {Array} Returns `array`.
           */
          function d(a, b) {
            var c = -1,
              d = a.length;
            for (b || (b = Array(d)); ++c < d; ) b[c] = a[c];
            return b;
          }
          b.exports = d;
        },
        {},
      ],
      9: [
        function (a, b, c) {
          /**
           * A specialized version of `_.forEach` for arrays without support for callback
           * shorthands and `this` binding.
           *
           * @private
           * @param {Array} array The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns `array`.
           */
          function d(a, b) {
            for (var c = -1, d = a.length; ++c < d && b(a[c], c, a) !== !1; );
            return a;
          }
          b.exports = d;
        },
        {},
      ],
      10: [
        function (a, b, c) {
          /**
           * Copies properties of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy properties from.
           * @param {Array} props The property names to copy.
           * @param {Object} [object={}] The object to copy properties to.
           * @returns {Object} Returns `object`.
           */
          function d(a, b, c) {
            c || (c = {});
            for (var d = -1, e = b.length; ++d < e; ) {
              var f = b[d];
              c[f] = a[f];
            }
            return c;
          }
          b.exports = d;
        },
        {},
      ],
      11: [
        function (a, b, c) {
          var d = a("./createBaseFor"),
            e = d();
          b.exports = e;
        },
        { "./createBaseFor": 18 },
      ],
      12: [
        function (a, b, c) {
          /**
           * The base implementation of `_.forIn` without support for callback
           * shorthands and `this` binding.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Object} Returns `object`.
           */
          function d(a, b) {
            return e(a, b, f);
          }
          var e = a("./baseFor"),
            f = a("../object/keysIn");
          b.exports = d;
        },
        { "../object/keysIn": 39, "./baseFor": 11 },
      ],
      13: [
        function (a, b, c) {
          /**
           * The base implementation of `_.merge` without support for argument juggling,
           * multiple sources, and `this` binding `customizer` functions.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @param {Function} [customizer] The function to customize merged values.
           * @param {Array} [stackA=[]] Tracks traversed source objects.
           * @param {Array} [stackB=[]] Associates values with source counterparts.
           * @returns {Object} Returns `object`.
           */
          function d(a, b, c, m, n) {
            if (!i(a)) return a;
            var o = h(b) && (g(b) || k(b)),
              p = o ? void 0 : l(b);
            return (
              e(p || b, function (e, g) {
                if ((p && ((g = e), (e = b[g])), j(e)))
                  m || (m = []), n || (n = []), f(a, b, g, d, c, m, n);
                else {
                  var h = a[g],
                    i = c ? c(h, e, g, a, b) : void 0,
                    k = void 0 === i;
                  k && (i = e),
                    (void 0 === i && (!o || g in a)) ||
                      (!k && (i === i ? i === h : h !== h)) ||
                      (a[g] = i);
                }
              }),
              a
            );
          }
          var e = a("./arrayEach"),
            f = a("./baseMergeDeep"),
            g = a("../lang/isArray"),
            h = a("./isArrayLike"),
            i = a("../lang/isObject"),
            j = a("./isObjectLike"),
            k = a("../lang/isTypedArray"),
            l = a("../object/keys");
          b.exports = d;
        },
        {
          "../lang/isArray": 30,
          "../lang/isObject": 33,
          "../lang/isTypedArray": 36,
          "../object/keys": 38,
          "./arrayEach": 9,
          "./baseMergeDeep": 14,
          "./isArrayLike": 21,
          "./isObjectLike": 26,
        },
      ],
      14: [
        function (a, b, c) {
          /**
           * A specialized version of `baseMerge` for arrays and objects which performs
           * deep merges and tracks traversed objects enabling objects with circular
           * references to be merged.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @param {string} key The key of the value to merge.
           * @param {Function} mergeFunc The function to merge values.
           * @param {Function} [customizer] The function to customize merged values.
           * @param {Array} [stackA=[]] Tracks traversed source objects.
           * @param {Array} [stackB=[]] Associates values with source counterparts.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */
          function d(a, b, c, d, l, m, n) {
            for (var o = m.length, p = b[c]; o--; )
              if (m[o] == p) return void (a[c] = n[o]);
            var q = a[c],
              r = l ? l(q, p, c, a, b) : void 0,
              s = void 0 === r;
            s &&
              ((r = p),
              h(p) && (g(p) || j(p))
                ? (r = g(q) ? q : h(q) ? e(q) : [])
                : i(p) || f(p)
                ? (r = f(q) ? k(q) : i(q) ? q : {})
                : (s = !1)),
              // Add the source value to the stack of traversed objects and associate
              // it with its merged value.
              m.push(p),
              n.push(r),
              s
                ? // Recursively merge objects and arrays (susceptible to call stack limits).
                  (a[c] = d(r, p, l, m, n))
                : (r === r ? r !== q : q === q) && (a[c] = r);
          }
          var e = a("./arrayCopy"),
            f = a("../lang/isArguments"),
            g = a("../lang/isArray"),
            h = a("./isArrayLike"),
            i = a("../lang/isPlainObject"),
            j = a("../lang/isTypedArray"),
            k = a("../lang/toPlainObject");
          b.exports = d;
        },
        {
          "../lang/isArguments": 29,
          "../lang/isArray": 30,
          "../lang/isPlainObject": 34,
          "../lang/isTypedArray": 36,
          "../lang/toPlainObject": 37,
          "./arrayCopy": 8,
          "./isArrayLike": 21,
        },
      ],
      15: [
        function (a, b, c) {
          /**
           * The base implementation of `_.property` without support for deep paths.
           *
           * @private
           * @param {string} key The key of the property to get.
           * @returns {Function} Returns the new function.
           */
          function d(a) {
            return function (b) {
              return null == b ? void 0 : e(b)[a];
            };
          }
          var e = a("./toObject");
          b.exports = d;
        },
        { "./toObject": 28 },
      ],
      16: [
        function (a, b, c) {
          /**
           * A specialized version of `baseCallback` which only supports `this` binding
           * and specifying the number of arguments to provide to `func`.
           *
           * @private
           * @param {Function} func The function to bind.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {number} [argCount] The number of arguments to provide to `func`.
           * @returns {Function} Returns the callback.
           */
          function d(a, b, c) {
            if ("function" != typeof a) return e;
            if (void 0 === b) return a;
            switch (c) {
              case 1:
                return function (c) {
                  return a.call(b, c);
                };
              case 3:
                return function (c, d, e) {
                  return a.call(b, c, d, e);
                };
              case 4:
                return function (c, d, e, f) {
                  return a.call(b, c, d, e, f);
                };
              case 5:
                return function (c, d, e, f, g) {
                  return a.call(b, c, d, e, f, g);
                };
            }
            return function () {
              return a.apply(b, arguments);
            };
          }
          var e = a("../utility/identity");
          b.exports = d;
        },
        { "../utility/identity": 42 },
      ],
      17: [
        function (a, b, c) {
          /**
           * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
           *
           * @private
           * @param {Function} assigner The function to assign values.
           * @returns {Function} Returns the new assigner function.
           */
          function d(a) {
            return g(function (b, c) {
              var d = -1,
                g = null == b ? 0 : c.length,
                h = g > 2 ? c[g - 2] : void 0,
                i = g > 2 ? c[2] : void 0,
                j = g > 1 ? c[g - 1] : void 0;
              for (
                "function" == typeof h
                  ? ((h = e(h, j, 5)), (g -= 2))
                  : ((h = "function" == typeof j ? j : void 0),
                    (g -= h ? 1 : 0)),
                  i && f(c[0], c[1], i) && ((h = g < 3 ? void 0 : h), (g = 1));
                ++d < g;

              ) {
                var k = c[d];
                k && a(b, k, h);
              }
              return b;
            });
          }
          var e = a("./bindCallback"),
            f = a("./isIterateeCall"),
            g = a("../function/restParam");
          b.exports = d;
        },
        {
          "../function/restParam": 6,
          "./bindCallback": 16,
          "./isIterateeCall": 24,
        },
      ],
      18: [
        function (a, b, c) {
          /**
           * Creates a base function for `_.forIn` or `_.forInRight`.
           *
           * @private
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new base function.
           */
          function d(a) {
            return function (b, c, d) {
              for (
                var f = e(b), g = d(b), h = g.length, i = a ? h : -1;
                a ? i-- : ++i < h;

              ) {
                var j = g[i];
                if (c(f[j], j, f) === !1) break;
              }
              return b;
            };
          }
          var e = a("./toObject");
          b.exports = d;
        },
        { "./toObject": 28 },
      ],
      19: [
        function (a, b, c) {
          var d = a("./baseProperty"),
            e = d("length");
          b.exports = e;
        },
        { "./baseProperty": 15 },
      ],
      20: [
        function (a, b, c) {
          /**
           * Gets the native function at `key` of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {string} key The key of the method to get.
           * @returns {*} Returns the function if it's native, else `undefined`.
           */
          function d(a, b) {
            var c = null == a ? void 0 : a[b];
            return e(c) ? c : void 0;
          }
          var e = a("../lang/isNative");
          b.exports = d;
        },
        { "../lang/isNative": 32 },
      ],
      21: [
        function (a, b, c) {
          /**
           * Checks if `value` is array-like.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           */
          function d(a) {
            return null != a && f(e(a));
          }
          var e = a("./getLength"),
            f = a("./isLength");
          b.exports = d;
        },
        { "./getLength": 19, "./isLength": 25 },
      ],
      22: [
        function (a, b, c) {
          /**
           * Checks if `value` is a host object in IE < 9.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
           */
          var d = (function () {
            try {
              Object({ toString: 0 } + "");
            } catch (a) {
              return function () {
                return !1;
              };
            }
            return function (a) {
              // IE < 9 presents many host objects as `Object` objects that can coerce
              // to strings despite having improperly defined `toString` methods.
              return (
                "function" != typeof a.toString && "string" == typeof (a + "")
              );
            };
          })();
          b.exports = d;
        },
        {},
      ],
      23: [
        function (a, b, c) {
          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */
          function d(a, b) {
            return (
              (a = "number" == typeof a || e.test(a) ? +a : -1),
              (b = null == b ? f : b),
              a > -1 && a % 1 == 0 && a < b
            );
          } /** Used to detect unsigned integer values. */
          var e = /^\d+$/,
            f = 9007199254740991;
          b.exports = d;
        },
        {},
      ],
      24: [
        function (a, b, c) {
          /**
           * Checks if the provided arguments are from an iteratee call.
           *
           * @private
           * @param {*} value The potential iteratee value argument.
           * @param {*} index The potential iteratee index or key argument.
           * @param {*} object The potential iteratee object argument.
           * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
           */
          function d(a, b, c) {
            if (!g(c)) return !1;
            var d = typeof b;
            if (
              "number" == d ? e(c) && f(b, c.length) : "string" == d && b in c
            ) {
              var h = c[b];
              return a === a ? a === h : h !== h;
            }
            return !1;
          }
          var e = a("./isArrayLike"),
            f = a("./isIndex"),
            g = a("../lang/isObject");
          b.exports = d;
        },
        { "../lang/isObject": 33, "./isArrayLike": 21, "./isIndex": 23 },
      ],
      25: [
        function (a, b, c) {
          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           */
          function d(a) {
            return "number" == typeof a && a > -1 && a % 1 == 0 && a <= e;
          }
          /**
           * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
           * of an array-like value.
           */
          var e = 9007199254740991;
          b.exports = d;
        },
        {},
      ],
      26: [
        function (a, b, c) {
          /**
           * Checks if `value` is object-like.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           */
          function d(a) {
            return !!a && "object" == typeof a;
          }
          b.exports = d;
        },
        {},
      ],
      27: [
        function (a, b, c) {
          /**
           * A fallback implementation of `Object.keys` which creates an array of the
           * own enumerable property names of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function d(a) {
            for (
              var b = j(a),
                c = b.length,
                d = c && a.length,
                k = !!d && h(d) && (f(a) || e(a) || i(a)),
                m = -1,
                n = [];
              ++m < c;

            ) {
              var o = b[m];
              ((k && g(o, d)) || l.call(a, o)) && n.push(o);
            }
            return n;
          }
          var e = a("../lang/isArguments"),
            f = a("../lang/isArray"),
            g = a("./isIndex"),
            h = a("./isLength"),
            i = a("../lang/isString"),
            j = a("../object/keysIn"),
            k = Object.prototype,
            l = k.hasOwnProperty;
          b.exports = d;
        },
        {
          "../lang/isArguments": 29,
          "../lang/isArray": 30,
          "../lang/isString": 35,
          "../object/keysIn": 39,
          "./isIndex": 23,
          "./isLength": 25,
        },
      ],
      28: [
        function (a, b, c) {
          /**
           * Converts `value` to an object if it's not one.
           *
           * @private
           * @param {*} value The value to process.
           * @returns {Object} Returns the object.
           */
          function d(a) {
            if (g.unindexedChars && f(a)) {
              for (var b = -1, c = a.length, d = Object(a); ++b < c; )
                d[b] = a.charAt(b);
              return d;
            }
            return e(a) ? a : Object(a);
          }
          var e = a("../lang/isObject"),
            f = a("../lang/isString"),
            g = a("../support");
          b.exports = d;
        },
        { "../lang/isObject": 33, "../lang/isString": 35, "../support": 41 },
      ],
      29: [
        function (a, b, c) {
          /**
           * Checks if `value` is classified as an `arguments` object.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */
          function d(a) {
            return f(a) && e(a) && h.call(a, "callee") && !i.call(a, "callee");
          }
          var e = a("../internal/isArrayLike"),
            f = a("../internal/isObjectLike"),
            g = Object.prototype,
            h = g.hasOwnProperty,
            i = g.propertyIsEnumerable;
          b.exports = d;
        },
        { "../internal/isArrayLike": 21, "../internal/isObjectLike": 26 },
      ],
      30: [
        function (a, b, c) {
          var d = a("../internal/getNative"),
            e = a("../internal/isLength"),
            f = a("../internal/isObjectLike"),
            g = "[object Array]",
            h = Object.prototype,
            i = h.toString,
            j = d(Array, "isArray"),
            k =
              j ||
              function (a) {
                return f(a) && e(a.length) && i.call(a) == g;
              };
          b.exports = k;
        },
        {
          "../internal/getNative": 20,
          "../internal/isLength": 25,
          "../internal/isObjectLike": 26,
        },
      ],
      31: [
        function (a, b, c) {
          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function d(a) {
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in older versions of Chrome and Safari which return 'function' for regexes
            // and Safari 8 which returns 'object' for typed array constructors.
            return e(a) && h.call(a) == f;
          }
          var e = a("./isObject"),
            f = "[object Function]",
            g = Object.prototype,
            h = g.toString;
          b.exports = d;
        },
        { "./isObject": 33 },
      ],
      32: [
        function (a, b, c) {
          /**
           * Checks if `value` is a native function.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
           * @example
           *
           * _.isNative(Array.prototype.push);
           * // => true
           *
           * _.isNative(_);
           * // => false
           */
          function d(a) {
            return (
              null != a &&
              (e(a) ? l.test(j.call(a)) : g(a) && (f(a) ? l : h).test(a))
            );
          }
          var e = a("./isFunction"),
            f = a("../internal/isHostObject"),
            g = a("../internal/isObjectLike"),
            h = /^\[object .+?Constructor\]$/,
            i = Object.prototype,
            j = Function.prototype.toString,
            k = i.hasOwnProperty,
            l = RegExp(
              "^" +
                j
                  .call(k)
                  .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                  .replace(
                    /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                    "$1.*?"
                  ) +
                "$"
            );
          b.exports = d;
        },
        {
          "../internal/isHostObject": 22,
          "../internal/isObjectLike": 26,
          "./isFunction": 31,
        },
      ],
      33: [
        function (a, b, c) {
          /**
           * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
           * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(1);
           * // => false
           */
          function d(a) {
            // Avoid a V8 JIT bug in Chrome 19-20.
            // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
            var b = typeof a;
            return !!a && ("object" == b || "function" == b);
          }
          b.exports = d;
        },
        {},
      ],
      34: [
        function (a, b, c) {
          /**
           * Checks if `value` is a plain object, that is, an object created by the
           * `Object` constructor or one with a `[[Prototype]]` of `null`.
           *
           * **Note:** This method assumes objects created by the `Object` constructor
           * have no inherited enumerable properties.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * _.isPlainObject(new Foo);
           * // => false
           *
           * _.isPlainObject([1, 2, 3]);
           * // => false
           *
           * _.isPlainObject({ 'x': 0, 'y': 0 });
           * // => true
           *
           * _.isPlainObject(Object.create(null));
           * // => true
           */
          function d(a) {
            var b;
            // Exit early for non `Object` objects.
            if (
              !h(a) ||
              m.call(a) != j ||
              g(a) ||
              f(a) ||
              (!l.call(a, "constructor") &&
                ((b = a.constructor),
                "function" == typeof b && !(b instanceof b)))
            )
              return !1;
            // IE < 9 iterates inherited properties before own properties. If the first
            // iterated property is an object's own property then there are no inherited
            // enumerable properties.
            var c;
            // In most environments an object's own properties are iterated before
            // its inherited properties. If the last iterated property is an object's
            // own property then there are no inherited enumerable properties.
            return i.ownLast
              ? (e(a, function (a, b, d) {
                  return (c = l.call(d, b)), !1;
                }),
                c !== !1)
              : (e(a, function (a, b) {
                  c = b;
                }),
                void 0 === c || l.call(a, c));
          }
          var e = a("../internal/baseForIn"),
            f = a("./isArguments"),
            g = a("../internal/isHostObject"),
            h = a("../internal/isObjectLike"),
            i = a("../support"),
            j = "[object Object]",
            k = Object.prototype,
            l = k.hasOwnProperty,
            m = k.toString;
          b.exports = d;
        },
        {
          "../internal/baseForIn": 12,
          "../internal/isHostObject": 22,
          "../internal/isObjectLike": 26,
          "../support": 41,
          "./isArguments": 29,
        },
      ],
      35: [
        function (a, b, c) {
          /**
           * Checks if `value` is classified as a `String` primitive or object.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
           * @example
           *
           * _.isString('abc');
           * // => true
           *
           * _.isString(1);
           * // => false
           */
          function d(a) {
            return "string" == typeof a || (e(a) && h.call(a) == f);
          }
          var e = a("../internal/isObjectLike"),
            f = "[object String]",
            g = Object.prototype,
            h = g.toString;
          b.exports = d;
        },
        { "../internal/isObjectLike": 26 },
      ],
      36: [
        function (a, b, c) {
          /**
           * Checks if `value` is classified as a typed array.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
           * @example
           *
           * _.isTypedArray(new Uint8Array);
           * // => true
           *
           * _.isTypedArray([]);
           * // => false
           */
          function d(a) {
            return f(a) && e(a.length) && !!D[F.call(a)];
          }
          var e = a("../internal/isLength"),
            f = a("../internal/isObjectLike"),
            g = "[object Arguments]",
            h = "[object Array]",
            i = "[object Boolean]",
            j = "[object Date]",
            k = "[object Error]",
            l = "[object Function]",
            m = "[object Map]",
            n = "[object Number]",
            o = "[object Object]",
            p = "[object RegExp]",
            q = "[object Set]",
            r = "[object String]",
            s = "[object WeakMap]",
            t = "[object ArrayBuffer]",
            u = "[object Float32Array]",
            v = "[object Float64Array]",
            w = "[object Int8Array]",
            x = "[object Int16Array]",
            y = "[object Int32Array]",
            z = "[object Uint8Array]",
            A = "[object Uint8ClampedArray]",
            B = "[object Uint16Array]",
            C = "[object Uint32Array]",
            D = {};
          (D[u] = D[v] = D[w] = D[x] = D[y] = D[z] = D[A] = D[B] = D[C] = !0),
            (D[g] = D[h] = D[t] = D[i] = D[j] = D[k] = D[l] = D[m] = D[n] = D[
              o
            ] = D[p] = D[q] = D[r] = D[
              s
            ] = !1); /** Used for native method references. */
          var E = Object.prototype,
            F = E.toString;
          b.exports = d;
        },
        { "../internal/isLength": 25, "../internal/isObjectLike": 26 },
      ],
      37: [
        function (a, b, c) {
          /**
           * Converts `value` to a plain object flattening inherited enumerable
           * properties of `value` to own properties of the plain object.
           *
           * @static
           * @memberOf _
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {Object} Returns the converted plain object.
           * @example
           *
           * function Foo() {
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.assign({ 'a': 1 }, new Foo);
           * // => { 'a': 1, 'b': 2 }
           *
           * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
           * // => { 'a': 1, 'b': 2, 'c': 3 }
           */
          function d(a) {
            return e(a, f(a));
          }
          var e = a("../internal/baseCopy"),
            f = a("../object/keysIn");
          b.exports = d;
        },
        { "../internal/baseCopy": 10, "../object/keysIn": 39 },
      ],
      38: [
        function (a, b, c) {
          var d = a("../internal/getNative"),
            e = a("../internal/isArrayLike"),
            f = a("../lang/isObject"),
            g = a("../internal/shimKeys"),
            h = a("../support"),
            i = d(Object, "keys"),
            j = i
              ? function (a) {
                  var b = null == a ? void 0 : a.constructor;
                  return ("function" == typeof b && b.prototype === a) ||
                    ("function" == typeof a ? h.enumPrototypes : e(a))
                    ? g(a)
                    : f(a)
                    ? i(a)
                    : [];
                }
              : g;
          b.exports = j;
        },
        {
          "../internal/getNative": 20,
          "../internal/isArrayLike": 21,
          "../internal/shimKeys": 27,
          "../lang/isObject": 33,
          "../support": 41,
        },
      ],
      39: [
        function (a, b, c) {
          /**
           * Creates an array of the own and inherited enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keysIn(new Foo);
           * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
           */
          function d(a) {
            if (null == a) return [];
            k(a) || (a = Object(a));
            var b = a.length;
            b = (b && j(b) && (g(a) || f(a) || l(a)) && b) || 0;
            for (
              var c = a.constructor,
                d = -1,
                e = (h(c) && c.prototype) || y,
                n = e === a,
                o = Array(b),
                p = b > 0,
                r = m.enumErrorProps && (a === x || a instanceof Error),
                s = m.enumPrototypes && h(a);
              ++d < b;

            )
              o[d] = d + "";
            // lodash skips the `constructor` property when it infers it's iterating
            // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`
            // attribute of an existing property and the `constructor` property of a
            // prototype defaults to non-enumerable.
            for (var u in a)
              (s && "prototype" == u) ||
                (r && ("message" == u || "name" == u)) ||
                (p && i(u, b)) ||
                ("constructor" == u && (n || !A.call(a, u))) ||
                o.push(u);
            if (m.nonEnumShadows && a !== y) {
              var D = a === z ? v : a === x ? q : B.call(a),
                E = C[D] || C[t];
              for (D == t && (e = y), b = w.length; b--; ) {
                u = w[b];
                var F = E[u];
                (n && F) || (F ? !A.call(a, u) : a[u] === e[u]) || o.push(u);
              }
            }
            return o;
          }
          var e = a("../internal/arrayEach"),
            f = a("../lang/isArguments"),
            g = a("../lang/isArray"),
            h = a("../lang/isFunction"),
            i = a("../internal/isIndex"),
            j = a("../internal/isLength"),
            k = a("../lang/isObject"),
            l = a("../lang/isString"),
            m = a("../support"),
            n = "[object Array]",
            o = "[object Boolean]",
            p = "[object Date]",
            q = "[object Error]",
            r = "[object Function]",
            s = "[object Number]",
            t = "[object Object]",
            u = "[object RegExp]",
            v = "[object String]",
            w = [
              "constructor",
              "hasOwnProperty",
              "isPrototypeOf",
              "propertyIsEnumerable",
              "toLocaleString",
              "toString",
              "valueOf",
            ],
            x = Error.prototype,
            y = Object.prototype,
            z = String.prototype,
            A = y.hasOwnProperty,
            B = y.toString,
            C = {};
          (C[n] = C[p] = C[s] = {
            constructor: !0,
            toLocaleString: !0,
            toString: !0,
            valueOf: !0,
          }),
            (C[o] = C[v] = { constructor: !0, toString: !0, valueOf: !0 }),
            (C[q] = C[r] = C[u] = { constructor: !0, toString: !0 }),
            (C[t] = { constructor: !0 }),
            e(w, function (a) {
              for (var b in C)
                if (A.call(C, b)) {
                  var c = C[b];
                  c[a] = A.call(c, a);
                }
            }),
            (b.exports = d);
        },
        {
          "../internal/arrayEach": 9,
          "../internal/isIndex": 23,
          "../internal/isLength": 25,
          "../lang/isArguments": 29,
          "../lang/isArray": 30,
          "../lang/isFunction": 31,
          "../lang/isObject": 33,
          "../lang/isString": 35,
          "../support": 41,
        },
      ],
      40: [
        function (a, b, c) {
          var d = a("../internal/baseMerge"),
            e = a("../internal/createAssigner"),
            f = e(d);
          b.exports = f;
        },
        { "../internal/baseMerge": 13, "../internal/createAssigner": 17 },
      ],
      41: [
        function (a, b, c) {
          /** Used for native method references. */
          var d = Array.prototype,
            e = Error.prototype,
            f = Object.prototype,
            g = f.propertyIsEnumerable,
            h = d.splice,
            i = {};
          !(function (a) {
            var b = function () {
                this.x = a;
              },
              c = { 0: a, length: a },
              d = [];
            b.prototype = { valueOf: a, y: a };
            for (var f in new b()) d.push(f);
            /**
             * Detect if `name` or `message` properties of `Error.prototype` are
             * enumerable by default (IE < 9, Safari < 5.1).
             *
             * @memberOf _.support
             * @type boolean
             */
            (i.enumErrorProps = g.call(e, "message") || g.call(e, "name")),
              /**
               * Detect if `prototype` properties are enumerable by default.
               *
               * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1
               * (if the prototype or a property on the prototype has been set)
               * incorrectly set the `[[Enumerable]]` value of a function's `prototype`
               * property to `true`.
               *
               * @memberOf _.support
               * @type boolean
               */
              (i.enumPrototypes = g.call(b, "prototype")),
              /**
               * Detect if properties shadowing those on `Object.prototype` are non-enumerable.
               *
               * In IE < 9 an object's own properties, shadowing non-enumerable ones,
               * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).
               *
               * @memberOf _.support
               * @type boolean
               */
              (i.nonEnumShadows = !/valueOf/.test(d)),
              /**
               * Detect if own properties are iterated after inherited properties (IE < 9).
               *
               * @memberOf _.support
               * @type boolean
               */
              (i.ownLast = "x" != d[0]),
              /**
               * Detect if `Array#shift` and `Array#splice` augment array-like objects
               * correctly.
               *
               * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array
               * `shift()` and `splice()` functions that fail to remove the last element,
               * `value[0]`, of array-like objects even though the "length" property is
               * set to `0`. The `shift()` method is buggy in compatibility modes of IE 8,
               * while `splice()` is buggy regardless of mode in IE < 9.
               *
               * @memberOf _.support
               * @type boolean
               */
              (i.spliceObjects = (h.call(c, 0, 1), !c[0])),
              /**
               * Detect lack of support for accessing string characters by index.
               *
               * IE < 8 can't access characters by index. IE 8 can only access characters
               * by index on string literals, not string objects.
               *
               * @memberOf _.support
               * @type boolean
               */
              (i.unindexedChars = "x"[0] + Object("x")[0] != "xx");
          })(1, 0),
            (b.exports = i);
        },
        {},
      ],
      42: [
        function (a, b, c) {
          /**
           * This method returns the first argument provided to it.
           *
           * @static
           * @memberOf _
           * @category Utility
           * @param {*} value Any value.
           * @returns {*} Returns `value`.
           * @example
           *
           * var object = { 'user': 'fred' };
           *
           * _.identity(object) === object;
           * // => true
           */
          function d(a) {
            return a;
          }
          b.exports = d;
        },
        {},
      ],
      43: [
        function (a, b, c) {
          "use strict";
          var d = a("object-keys");
          b.exports = function () {
            if (
              "function" != typeof Symbol ||
              "function" != typeof Object.getOwnPropertySymbols
            )
              return !1;
            if ("symbol" == typeof Symbol.iterator) return !0;
            var a = {},
              b = Symbol("test");
            if ("string" == typeof b) return !1;
            // temp disabled per https://github.com/ljharb/object.assign/issues/17
            // if (sym instanceof Symbol) { return false; }
            // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
            // if (!(Object(sym) instanceof Symbol)) { return false; }
            var c = 42;
            a[b] = c;
            for (b in a) return !1;
            if (0 !== d(a).length) return !1;
            if ("function" == typeof Object.keys && 0 !== Object.keys(a).length)
              return !1;
            if (
              "function" == typeof Object.getOwnPropertyNames &&
              0 !== Object.getOwnPropertyNames(a).length
            )
              return !1;
            var e = Object.getOwnPropertySymbols(a);
            if (1 !== e.length || e[0] !== b) return !1;
            if (!Object.prototype.propertyIsEnumerable.call(a, b)) return !1;
            if ("function" == typeof Object.getOwnPropertyDescriptor) {
              var f = Object.getOwnPropertyDescriptor(a, b);
              if (f.value !== c || f.enumerable !== !0) return !1;
            }
            return !0;
          };
        },
        { "object-keys": 50 },
      ],
      44: [
        function (a, b, c) {
          "use strict";
          // modified from https://github.com/es-shims/es6-shim
          var d = a("object-keys"),
            e = a("function-bind"),
            f = function (a) {
              return "undefined" != typeof a && null !== a;
            },
            g = a("./hasSymbols")(),
            h = Object,
            i = e.call(Function.call, Array.prototype.push),
            j = e.call(Function.call, Object.prototype.propertyIsEnumerable);
          b.exports = function (a, b) {
            if (!f(a)) throw new TypeError("target must be an object");
            var c,
              e,
              k,
              l,
              m,
              n,
              o,
              p = h(a);
            for (c = 1; c < arguments.length; ++c) {
              if (
                ((e = h(arguments[c])),
                (l = d(e)),
                g && Object.getOwnPropertySymbols)
              )
                for (
                  m = Object.getOwnPropertySymbols(e), k = 0;
                  k < m.length;
                  ++k
                )
                  (o = m[k]), j(e, o) && i(l, o);
              for (k = 0; k < l.length; ++k)
                (o = l[k]), (n = e[o]), j(e, o) && (p[o] = n);
            }
            return p;
          };
        },
        { "./hasSymbols": 43, "function-bind": 49, "object-keys": 50 },
      ],
      45: [
        function (a, b, c) {
          "use strict";
          var d = a("define-properties"),
            e = a("./implementation"),
            f = a("./polyfill"),
            g = a("./shim");
          d(e, { implementation: e, getPolyfill: f, shim: g }), (b.exports = e);
        },
        {
          "./implementation": 44,
          "./polyfill": 52,
          "./shim": 53,
          "define-properties": 46,
        },
      ],
      46: [
        function (a, b, c) {
          "use strict";
          var d = a("object-keys"),
            e = a("foreach"),
            f = "function" == typeof Symbol && "symbol" == typeof Symbol(),
            g = Object.prototype.toString,
            h = function (a) {
              return (
                "function" == typeof a && "[object Function]" === g.call(a)
              );
            },
            i = function () {
              var a = {};
              try {
                Object.defineProperty(a, "x", {
                  enumerable: !1,
                  value: a,
                }); /* eslint-disable no-unused-vars, no-restricted-syntax */
                for (var b in a)
                  return !1; /* eslint-enable no-unused-vars, no-restricted-syntax */
                return a.x === a;
              } catch (c) {
                /* this is IE 8. */
                return !1;
              }
            },
            j = Object.defineProperty && i(),
            k = function (a, b, c, d) {
              (!(b in a) || (h(d) && d())) &&
                (j
                  ? Object.defineProperty(a, b, {
                      configurable: !0,
                      enumerable: !1,
                      value: c,
                      writable: !0,
                    })
                  : (a[b] = c));
            },
            l = function (a, b) {
              var c = arguments.length > 2 ? arguments[2] : {},
                g = d(b);
              f && (g = g.concat(Object.getOwnPropertySymbols(b))),
                e(g, function (d) {
                  k(a, d, b[d], c[d]);
                });
            };
          (l.supportsDescriptors = !!j), (b.exports = l);
        },
        { foreach: 47, "object-keys": 50 },
      ],
      47: [
        function (a, b, c) {
          var d = Object.prototype.hasOwnProperty,
            e = Object.prototype.toString;
          b.exports = function (a, b, c) {
            if ("[object Function]" !== e.call(b))
              throw new TypeError("iterator must be a function");
            var f = a.length;
            if (f === +f) for (var g = 0; g < f; g++) b.call(c, a[g], g, a);
            else for (var h in a) d.call(a, h) && b.call(c, a[h], h, a);
          };
        },
        {},
      ],
      48: [
        function (a, b, c) {
          var d = "Function.prototype.bind called on incompatible ",
            e = Array.prototype.slice,
            f = Object.prototype.toString,
            g = "[object Function]";
          b.exports = function (a) {
            var b = this;
            if ("function" != typeof b || f.call(b) !== g)
              throw new TypeError(d + b);
            for (
              var c,
                h = e.call(arguments, 1),
                i = function () {
                  if (this instanceof c) {
                    var d = b.apply(this, h.concat(e.call(arguments)));
                    return Object(d) === d ? d : this;
                  }
                  return b.apply(a, h.concat(e.call(arguments)));
                },
                j = Math.max(0, b.length - h.length),
                k = [],
                l = 0;
              l < j;
              l++
            )
              k.push("$" + l);
            if (
              ((c = Function(
                "binder",
                "return function (" +
                  k.join(",") +
                  "){ return binder.apply(this,arguments); }"
              )(i)),
              b.prototype)
            ) {
              var m = function () {};
              (m.prototype = b.prototype),
                (c.prototype = new m()),
                (m.prototype = null);
            }
            return c;
          };
        },
        {},
      ],
      49: [
        function (a, b, c) {
          var d = a("./implementation");
          b.exports = Function.prototype.bind || d;
        },
        { "./implementation": 48 },
      ],
      50: [
        function (a, b, c) {
          "use strict";
          // modified from https://github.com/es-shims/es5-shim
          var d = Object.prototype.hasOwnProperty,
            e = Object.prototype.toString,
            f = Array.prototype.slice,
            g = a("./isArguments"),
            h = Object.prototype.propertyIsEnumerable,
            i = !h.call({ toString: null }, "toString"),
            j = h.call(function () {}, "prototype"),
            k = [
              "toString",
              "toLocaleString",
              "valueOf",
              "hasOwnProperty",
              "isPrototypeOf",
              "propertyIsEnumerable",
              "constructor",
            ],
            l = function (a) {
              var b = a.constructor;
              return b && b.prototype === a;
            },
            m = {
              $console: !0,
              $external: !0,
              $frame: !0,
              $frameElement: !0,
              $frames: !0,
              $innerHeight: !0,
              $innerWidth: !0,
              $outerHeight: !0,
              $outerWidth: !0,
              $pageXOffset: !0,
              $pageYOffset: !0,
              $parent: !0,
              $scrollLeft: !0,
              $scrollTop: !0,
              $scrollX: !0,
              $scrollY: !0,
              $self: !0,
              $webkitIndexedDB: !0,
              $webkitStorageInfo: !0,
              $window: !0,
            },
            n = (function () {
              /* global window */
              if ("undefined" == typeof window) return !1;
              for (var a in window)
                try {
                  if (
                    !m["$" + a] &&
                    d.call(window, a) &&
                    null !== window[a] &&
                    "object" == typeof window[a]
                  )
                    try {
                      l(window[a]);
                    } catch (b) {
                      return !0;
                    }
                } catch (b) {
                  return !0;
                }
              return !1;
            })(),
            o = function (a) {
              /* global window */
              if ("undefined" == typeof window || !n) return l(a);
              try {
                return l(a);
              } catch (b) {
                return !1;
              }
            },
            p = function (a) {
              var b = null !== a && "object" == typeof a,
                c = "[object Function]" === e.call(a),
                f = g(a),
                h = b && "[object String]" === e.call(a),
                l = [];
              if (!b && !c && !f)
                throw new TypeError("Object.keys called on a non-object");
              var m = j && c;
              if (h && a.length > 0 && !d.call(a, 0))
                for (var n = 0; n < a.length; ++n) l.push(String(n));
              if (f && a.length > 0)
                for (var p = 0; p < a.length; ++p) l.push(String(p));
              else
                for (var q in a)
                  (m && "prototype" === q) ||
                    !d.call(a, q) ||
                    l.push(String(q));
              if (i)
                for (var r = o(a), s = 0; s < k.length; ++s)
                  (r && "constructor" === k[s]) ||
                    !d.call(a, k[s]) ||
                    l.push(k[s]);
              return l;
            };
          (p.shim = function () {
            if (Object.keys) {
              var a = (function () {
                // Safari 5.0 bug
                return 2 === (Object.keys(arguments) || "").length;
              })(1, 2);
              if (!a) {
                var b = Object.keys;
                Object.keys = function (a) {
                  return b(g(a) ? f.call(a) : a);
                };
              }
            } else Object.keys = p;
            return Object.keys || p;
          }),
            (b.exports = p);
        },
        { "./isArguments": 51 },
      ],
      51: [
        function (a, b, c) {
          "use strict";
          var d = Object.prototype.toString;
          b.exports = function (a) {
            var b = d.call(a),
              c = "[object Arguments]" === b;
            return (
              c ||
                (c =
                  "[object Array]" !== b &&
                  null !== a &&
                  "object" == typeof a &&
                  "number" == typeof a.length &&
                  a.length >= 0 &&
                  "[object Function]" === d.call(a.callee)),
              c
            );
          };
        },
        {},
      ],
      52: [
        function (a, b, c) {
          "use strict";
          var d = a("./implementation"),
            e = function () {
              if (!Object.assign) return !1;
              for (
                var a = "abcdefghijklmnopqrst", b = a.split(""), c = {}, d = 0;
                d < b.length;
                ++d
              )
                c[b[d]] = b[d];
              var e = Object.assign({}, c),
                f = "";
              for (var g in e) f += g;
              return a !== f;
            },
            f = function () {
              if (!Object.assign || !Object.preventExtensions) return !1;
              // Firefox 37 still has "pending exception" logic in its Object.assign implementation,
              // which is 72% slower than our shim, and Firefox 40's native implementation.
              var a = Object.preventExtensions({ 1: 2 });
              try {
                Object.assign(a, "xy");
              } catch (b) {
                return "y" === a[1];
              }
            };
          b.exports = function () {
            return Object.assign ? (e() ? d : f() ? d : Object.assign) : d;
          };
        },
        { "./implementation": 44 },
      ],
      53: [
        function (a, b, c) {
          "use strict";
          var d = a("define-properties"),
            e = a("./polyfill");
          b.exports = function () {
            var a = e();
            return (
              d(
                Object,
                { assign: a },
                {
                  assign: function () {
                    return Object.assign !== a;
                  },
                }
              ),
              a
            );
          };
        },
        { "./polyfill": 52, "define-properties": 46 },
      ],
      54: [
        function (a, b, c) {
          function d(a, b) {
            var c,
              d = null;
            try {
              c = JSON.parse(a, b);
            } catch (e) {
              d = e;
            }
            return [d, c];
          }
          b.exports = d;
        },
        {},
      ],
      55: [
        function (a, b, c) {
          function d(a) {
            return a.replace(/\n\r?\s*/g, "");
          }
          b.exports = function (a) {
            for (var b = "", c = 0; c < arguments.length; c++)
              b += d(a[c]) + (arguments[c + 1] || "");
            return b;
          };
        },
        {},
      ],
      56: [
        function (a, b, c) {
          "use strict";
          function d(a, b) {
            for (var c = 0; c < a.length; c++) b(a[c]);
          }
          function e(a) {
            for (var b in a) if (a.hasOwnProperty(b)) return !1;
            return !0;
          }
          function f(a, b, c) {
            var d = a;
            return (
              l(b)
                ? ((c = b), "string" == typeof a && (d = { uri: a }))
                : (d = n(b, { uri: a })),
              (d.callback = c),
              d
            );
          }
          function g(a, b, c) {
            return (b = f(a, b, c)), h(b);
          }
          function h(a) {
            function b() {
              4 === j.readyState && f();
            }
            function c() {
              // Chrome with requestType=blob throws errors arround when even testing access to responseText
              var a = void 0;
              if (
                (j.response
                  ? (a = j.response)
                  : ("text" !== j.responseType && j.responseType) ||
                    (a = j.responseText || j.responseXML),
                u)
              )
                try {
                  a = JSON.parse(a);
                } catch (b) {}
              return a;
            }
            function d(a) {
              clearTimeout(o),
                a instanceof Error ||
                  (a = new Error("" + (a || "Unknown XMLHttpRequest Error"))),
                (a.statusCode = 0),
                h(a, i);
            }
            // will load the data & process the response in a special response object
            function f() {
              if (!n) {
                var b;
                clearTimeout(o),
                  //IE8 CORS GET successful response doesn't have a status field, but body is fine
                  (b =
                    a.useXDR && void 0 === j.status
                      ? 200
                      : 1223 === j.status
                      ? 204
                      : j.status);
                var d = i,
                  e = null;
                0 !== b
                  ? ((d = {
                      body: c(),
                      statusCode: b,
                      method: q,
                      headers: {},
                      url: p,
                      rawRequest: j,
                    }),
                    j.getAllResponseHeaders && //remember xhr can in fact be XDR for CORS in IE
                      (d.headers = m(j.getAllResponseHeaders())))
                  : (e = new Error("Internal XMLHttpRequest Error")),
                  h(e, d, d.body);
              }
            }
            var h = a.callback;
            if ("undefined" == typeof h)
              throw new Error("callback argument missing");
            h = k(h);
            var i = {
                body: void 0,
                headers: {},
                statusCode: 0,
                method: q,
                url: p,
                rawRequest: j,
              },
              j = a.xhr || null;
            j ||
              (j =
                a.cors || a.useXDR
                  ? new g.XDomainRequest()
                  : new g.XMLHttpRequest());
            var l,
              n,
              o,
              p = (j.url = a.uri || a.url),
              q = (j.method = a.method || "GET"),
              r = a.body || a.data || null,
              s = (j.headers = a.headers || {}),
              t = !!a.sync,
              u = !1;
            if (
              ("json" in a &&
                ((u = !0),
                s.accept || s.Accept || (s.Accept = "application/json"), //Don't override existing accept header declared by user
                "GET" !== q &&
                  "HEAD" !== q &&
                  (s["content-type"] ||
                    s["Content-Type"] ||
                    (s["Content-Type"] = "application/json"), //Don't override existing accept header declared by user
                  (r = JSON.stringify(a.json)))),
              (j.onreadystatechange = b),
              (j.onload = f),
              (j.onerror = d),
              // IE9 must have onprogress be set to a unique function.
              (j.onprogress = function () {}),
              (j.ontimeout = d),
              j.open(q, p, !t, a.username, a.password),
              //has to be after open
              t || (j.withCredentials = !!a.withCredentials),
              // Cannot set timeout with sync request
              // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly
              // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent
              !t &&
                a.timeout > 0 &&
                (o = setTimeout(function () {
                  (n = !0), //IE9 may still call readystatechange
                    j.abort("timeout");
                  var a = new Error("XMLHttpRequest timeout");
                  (a.code = "ETIMEDOUT"), d(a);
                }, a.timeout)),
              j.setRequestHeader)
            )
              for (l in s) s.hasOwnProperty(l) && j.setRequestHeader(l, s[l]);
            else if (a.headers && !e(a.headers))
              throw new Error(
                "Headers cannot be set on an XDomainRequest object"
              );
            return (
              "responseType" in a && (j.responseType = a.responseType),
              "beforeSend" in a &&
                "function" == typeof a.beforeSend &&
                a.beforeSend(j),
              j.send(r),
              j
            );
          }
          function i() {}
          var j = a("global/window"),
            k = a("once"),
            l = a("is-function"),
            m = a("parse-headers"),
            n = a("xtend");
          (b.exports = g),
            (g.XMLHttpRequest = j.XMLHttpRequest || i),
            (g.XDomainRequest =
              "withCredentials" in new g.XMLHttpRequest()
                ? g.XMLHttpRequest
                : j.XDomainRequest),
            d(["get", "put", "post", "patch", "head", "delete"], function (a) {
              g["delete" === a ? "del" : a] = function (b, c, d) {
                return (c = f(b, c, d)), (c.method = a.toUpperCase()), h(c);
              };
            });
        },
        {
          "global/window": 2,
          "is-function": 57,
          once: 58,
          "parse-headers": 61,
          xtend: 62,
        },
      ],
      57: [
        function (a, b, c) {
          function d(a) {
            var b = e.call(a);
            // IE8 and below
            return (
              "[object Function]" === b ||
              ("function" == typeof a && "[object RegExp]" !== b) ||
              ("undefined" != typeof window &&
                (a === window.setTimeout ||
                  a === window.alert ||
                  a === window.confirm ||
                  a === window.prompt))
            );
          }
          b.exports = d;
          var e = Object.prototype.toString;
        },
        {},
      ],
      58: [
        function (a, b, c) {
          function d(a) {
            var b = !1;
            return function () {
              if (!b) return (b = !0), a.apply(this, arguments);
            };
          }
          (b.exports = d),
            (d.proto = d(function () {
              Object.defineProperty(Function.prototype, "once", {
                value: function () {
                  return d(this);
                },
                configurable: !0,
              });
            }));
        },
        {},
      ],
      59: [
        function (a, b, c) {
          function d(a, b, c) {
            if (!h(b)) throw new TypeError("iterator must be a function");
            arguments.length < 3 && (c = this),
              "[object Array]" === i.call(a)
                ? e(a, b, c)
                : "string" == typeof a
                ? f(a, b, c)
                : g(a, b, c);
          }
          function e(a, b, c) {
            for (var d = 0, e = a.length; d < e; d++)
              j.call(a, d) && b.call(c, a[d], d, a);
          }
          function f(a, b, c) {
            for (var d = 0, e = a.length; d < e; d++)
              // no such thing as a sparse string.
              b.call(c, a.charAt(d), d, a);
          }
          function g(a, b, c) {
            for (var d in a) j.call(a, d) && b.call(c, a[d], d, a);
          }
          var h = a("is-function");
          b.exports = d;
          var i = Object.prototype.toString,
            j = Object.prototype.hasOwnProperty;
        },
        { "is-function": 57 },
      ],
      60: [
        function (a, b, c) {
          function d(a) {
            return a.replace(/^\s*|\s*$/g, "");
          }
          (c = b.exports = d),
            (c.left = function (a) {
              return a.replace(/^\s*/, "");
            }),
            (c.right = function (a) {
              return a.replace(/\s*$/, "");
            });
        },
        {},
      ],
      61: [
        function (a, b, c) {
          var d = a("trim"),
            e = a("for-each"),
            f = function (a) {
              return "[object Array]" === Object.prototype.toString.call(a);
            };
          b.exports = function (a) {
            if (!a) return {};
            var b = {};
            return (
              e(d(a).split("\n"), function (a) {
                var c = a.indexOf(":"),
                  e = d(a.slice(0, c)).toLowerCase(),
                  g = d(a.slice(c + 1));
                "undefined" == typeof b[e]
                  ? (b[e] = g)
                  : f(b[e])
                  ? b[e].push(g)
                  : (b[e] = [b[e], g]);
              }),
              b
            );
          };
        },
        { "for-each": 59, trim: 60 },
      ],
      62: [
        function (a, b, c) {
          function d() {
            for (var a = {}, b = 0; b < arguments.length; b++) {
              var c = arguments[b];
              for (var d in c) e.call(c, d) && (a[d] = c[d]);
            }
            return a;
          }
          b.exports = d;
          var e = Object.prototype.hasOwnProperty;
        },
        {},
      ],
      63: [
        function (a, b, c) {
          /**
           * @file big-play-button.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./button.js"),
            h = d(g),
            i = a("./component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b), a.call(this, c, d);
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Handles click for play
               *
               * @method handleClick
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return "vjs-big-play-button";
                }),
                (b.prototype.handleClick = function () {
                  this.player_.play();
                }),
                b
              );
            })(h["default"]);
          (k.prototype.controlText_ = "Play Video"),
            j["default"].registerComponent("BigPlayButton", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "./button.js": 64, "./component.js": 67 },
      ],
      64: [
        function (a, b, c) {
          /**
           * @file button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./clickable-component.js"),
            i = e(h),
            j = a("./component"),
            k = e(j),
            l = a("./utils/events.js"),
            m = (d(l), a("./utils/fn.js")),
            n = (d(m), a("./utils/log.js")),
            o = e(n),
            p = a("global/document"),
            q = (e(p), a("object.assign")),
            r = e(q),
            s = (function (a) {
              function b(c, d) {
                f(this, b), a.call(this, c, d);
              }
              /**
               * Create the component's DOM element
               *
               * @param {String=} type Element's node type. e.g. 'div'
               * @param {Object=} props An object of properties that should be set on the element
               * @param {Object=} attributes An object of attributes that should be set on the element
               * @return {Element}
               * @method createEl
               */
              /**
               * Adds a child component inside this button
               *
               * @param {String|Component} child The class name or instance of a child to add
               * @param {Object=} options Options, including options to be passed to children of the child.
               * @return {Component} The child component (created by this process if a string was used)
               * @deprecated
               * @method addChild
               */
              /**
               * Handle KeyPress (document level) - Extend with specific functionality for button
               *
               * @method handleKeyPress
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var a =
                      arguments.length <= 0 || void 0 === arguments[0]
                        ? "button"
                        : arguments[0],
                    b =
                      arguments.length <= 1 || void 0 === arguments[1]
                        ? {}
                        : arguments[1],
                    c =
                      arguments.length <= 2 || void 0 === arguments[2]
                        ? {}
                        : arguments[2];
                  (b = r["default"]({ className: this.buildCSSClass() }, b)),
                    "button" !== a &&
                      (o["default"].warn(
                        "Creating a Button with an HTML element of " +
                          a +
                          " is deprecated; use ClickableComponent instead."
                      ),
                      // Add properties for clickable element which is not a native HTML button
                      (b = r["default"]({ tabIndex: 0 }, b)),
                      // Add ARIA attributes for clickable element which is not a native HTML button
                      (c = r["default"]({ role: "button" }, c))),
                    // Add attributes for button element
                    (c = r["default"](
                      {
                        type: "button", // Necessary since the default button type is "submit"
                        "aria-live": "polite",
                      },
                      c
                    ));
                  var d = k["default"].prototype.createEl.call(this, a, b, c);
                  return this.createControlTextEl(d), d;
                }),
                (b.prototype.addChild = function (a) {
                  var b =
                      arguments.length <= 1 || void 0 === arguments[1]
                        ? {}
                        : arguments[1],
                    c = this.constructor.name;
                  // Avoid the error message generated by ClickableComponent's addChild method
                  return (
                    o["default"].warn(
                      "Adding an actionable (user controllable) child to a Button (" +
                        c +
                        ") is not supported; use a ClickableComponent instead."
                    ),
                    k["default"].prototype.addChild.call(this, a, b)
                  );
                }),
                (b.prototype.handleKeyPress = function (b) {
                  // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.
                  32 === b.which ||
                    13 === b.which ||
                    a.prototype.handleKeyPress.call(this, b);
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("Button", s),
            (c["default"] = s),
            (b.exports = c["default"]);
        },
        {
          "./clickable-component.js": 65,
          "./component": 67,
          "./utils/events.js": 143,
          "./utils/fn.js": 144,
          "./utils/log.js": 147,
          "global/document": 1,
          "object.assign": 45,
        },
      ],
      65: [
        function (a, b, c) {
          /**
           * @file button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./component"),
            i = e(h),
            j = a("./utils/dom.js"),
            k = d(j),
            l = a("./utils/events.js"),
            m = d(l),
            n = a("./utils/fn.js"),
            o = d(n),
            p = a("./utils/log.js"),
            q = e(p),
            r = a("global/document"),
            s = e(r),
            t = a("object.assign"),
            u = e(t),
            v = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.emitTapEvents(),
                  this.on("tap", this.handleClick),
                  this.on("click", this.handleClick),
                  this.on("focus", this.handleFocus),
                  this.on("blur", this.handleBlur);
              }
              /**
               * Create the component's DOM element
               *
               * @param {String=} type Element's node type. e.g. 'div'
               * @param {Object=} props An object of properties that should be set on the element
               * @param {Object=} attributes An object of attributes that should be set on the element
               * @return {Element}
               * @method createEl
               */
              /**
               * create control text
               *
               * @param {Element} el Parent element for the control text
               * @return {Element}
               * @method controlText
               */
              /**
               * Controls text - both request and localize
               *
               * @param {String}  text Text for element
               * @param {Element=} el Element to set the title on
               * @return {String}
               * @method controlText
               */
              /**
               * Allows sub components to stack CSS class names
               *
               * @return {String}
               * @method buildCSSClass
               */
              /**
               * Adds a child component inside this clickable-component
               *
               * @param {String|Component} child The class name or instance of a child to add
               * @param {Object=} options Options, including options to be passed to children of the child.
               * @return {Component} The child component (created by this process if a string was used)
               * @method addChild
               */
              /**
               * Enable the component element
               *
               * @return {Component}
               * @method enable
               */
              /**
               * Disable the component element
               *
               * @return {Component}
               * @method disable
               */
              /**
               * Handle Click - Override with specific functionality for component
               *
               * @method handleClick
               */
              /**
               * Handle Focus - Add keyboard functionality to element
               *
               * @method handleFocus
               */
              /**
               * Handle KeyPress (document level) - Trigger click when Space or Enter key is pressed
               *
               * @method handleKeyPress
               */
              /**
               * Handle Blur - Remove keyboard triggers
               *
               * @method handleBlur
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b =
                      arguments.length <= 0 || void 0 === arguments[0]
                        ? "div"
                        : arguments[0],
                    c =
                      arguments.length <= 1 || void 0 === arguments[1]
                        ? {}
                        : arguments[1],
                    d =
                      arguments.length <= 2 || void 0 === arguments[2]
                        ? {}
                        : arguments[2];
                  (c = u["default"](
                    { className: this.buildCSSClass(), tabIndex: 0 },
                    c
                  )),
                    "button" === b &&
                      q["default"].error(
                        "Creating a ClickableComponent with an HTML element of " +
                          b +
                          " is not supported; use a Button instead."
                      ),
                    // Add ARIA attributes for clickable element which is not a native HTML button
                    (d = u["default"](
                      { role: "button", "aria-live": "polite" },
                      d
                    ));
                  var e = a.prototype.createEl.call(this, b, c, d);
                  return this.createControlTextEl(e), e;
                }),
                (b.prototype.createControlTextEl = function (a) {
                  return (
                    (this.controlTextEl_ = k.createEl("span", {
                      className: "vjs-control-text",
                    })),
                    a && a.appendChild(this.controlTextEl_),
                    this.controlText(this.controlText_, a),
                    this.controlTextEl_
                  );
                }),
                (b.prototype.controlText = function (a) {
                  var b =
                    arguments.length <= 1 || void 0 === arguments[1]
                      ? this.el()
                      : arguments[1];
                  if (!a) return this.controlText_ || "Need Text";
                  var c = this.localize(a);
                  return (
                    (this.controlText_ = a),
                    (this.controlTextEl_.innerHTML = c),
                    b.setAttribute("title", c),
                    this
                  );
                }),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-control vjs-button " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.addChild = function (b) {
                  var c =
                    arguments.length <= 1 || void 0 === arguments[1]
                      ? {}
                      : arguments[1];
                  // TODO: Fix adding an actionable child to a ClickableComponent; currently
                  // it will cause issues with assistive technology (e.g. screen readers)
                  // which support ARIA, since an element with role="button" cannot have
                  // actionable child elements.
                  //let className = this.constructor.name;
                  //log.warn(`Adding a child to a ClickableComponent (${className}) can cause issues with assistive technology which supports ARIA, since an element with role="button" cannot have actionable child elements.`);
                  return a.prototype.addChild.call(this, b, c);
                }),
                (b.prototype.enable = function () {
                  return (
                    this.removeClass("vjs-disabled"),
                    this.el_.setAttribute("aria-disabled", "false"),
                    this
                  );
                }),
                (b.prototype.disable = function () {
                  return (
                    this.addClass("vjs-disabled"),
                    this.el_.setAttribute("aria-disabled", "true"),
                    this
                  );
                }),
                (b.prototype.handleClick = function () {}),
                (b.prototype.handleFocus = function () {
                  m.on(
                    s["default"],
                    "keydown",
                    o.bind(this, this.handleKeyPress)
                  );
                }),
                (b.prototype.handleKeyPress = function (b) {
                  // Support Space (32) or Enter (13) key operation to fire a click event
                  32 === b.which || 13 === b.which
                    ? (b.preventDefault(), this.handleClick(b))
                    : a.prototype.handleKeyPress &&
                      a.prototype.handleKeyPress.call(this, b);
                }),
                (b.prototype.handleBlur = function () {
                  m.off(
                    s["default"],
                    "keydown",
                    o.bind(this, this.handleKeyPress)
                  );
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("ClickableComponent", v),
            (c["default"] = v),
            (b.exports = c["default"]);
        },
        {
          "./component": 67,
          "./utils/dom.js": 142,
          "./utils/events.js": 143,
          "./utils/fn.js": 144,
          "./utils/log.js": 147,
          "global/document": 1,
          "object.assign": 45,
        },
      ],
      66: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./button"),
            h = d(g),
            i = a("./component"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b),
                  a.call(this, c, d),
                  this.controlText(
                    (d && d.controlText) || this.localize("Close")
                  );
              }
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-close-button " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleClick = function () {
                  this.trigger({ type: "close", bubbles: !1 });
                }),
                b
              );
            })(h["default"]);
          j["default"].registerComponent("CloseButton", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "./button": 64, "./component": 67 },
      ],
      67: [
        function (a, b, c) {
          /**
           * @file component.js
           *
           * Player Component - Base class for all UI objects
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          c.__esModule = !0;
          var g = a("global/window"),
            h = e(g),
            i = a("./utils/dom.js"),
            j = d(i),
            k = a("./utils/fn.js"),
            l = d(k),
            m = a("./utils/guid.js"),
            n = d(m),
            o = a("./utils/events.js"),
            p = d(o),
            q = a("./utils/log.js"),
            r = e(q),
            s = a("./utils/to-title-case.js"),
            t = e(s),
            u = a("./utils/merge-options.js"),
            v = e(u),
            w = (function () {
              function a(b, c, d) {
                // If there was no ID from the options, generate one
                if (
                  (f(this, a),
                  // The component might be the player itself and we can't pass `this` to super
                  !b && this.play
                    ? (this.player_ = b = this)
                    : (this.player_ = b),
                  // Make a copy of prototype.options_ to protect against overriding defaults
                  (this.options_ = v["default"]({}, this.options_)),
                  // Updated options with supplied options
                  (c = this.options_ = v["default"](this.options_, c)),
                  // Get ID from options or options element if one is supplied
                  (this.id_ = c.id || (c.el && c.el.id)),
                  !this.id_)
                ) {
                  // Don't require the player ID function in the case of mock players
                  var e = (b && b.id && b.id()) || "no_player";
                  this.id_ = e + "_component_" + n.newGUID();
                }
                (this.name_ = c.name || null),
                  // Create element if one wasn't provided in options
                  c.el
                    ? (this.el_ = c.el)
                    : c.createEl !== !1 && (this.el_ = this.createEl()),
                  (this.children_ = []),
                  (this.childIndex_ = {}),
                  (this.childNameIndex_ = {}),
                  // Add any child components in options
                  c.initChildren !== !1 && this.initChildren(),
                  this.ready(d),
                  // Don't want to trigger ready here or it will before init is actually
                  // finished for all children that run this constructor
                  c.reportTouchActivity !== !1 && this.enableTouchActivity();
              }
              return (
                (a.prototype.dispose = function () {
                  // Dispose all children.
                  if (
                    (this.trigger({ type: "dispose", bubbles: !1 }),
                    this.children_)
                  )
                    for (var a = this.children_.length - 1; a >= 0; a--)
                      this.children_[a].dispose && this.children_[a].dispose();
                  // Delete child references
                  (this.children_ = null),
                    (this.childIndex_ = null),
                    (this.childNameIndex_ = null),
                    // Remove all event listeners.
                    this.off(),
                    // Remove element from DOM
                    this.el_.parentNode &&
                      this.el_.parentNode.removeChild(this.el_),
                    j.removeElData(this.el_),
                    (this.el_ = null);
                }),
                (a.prototype.player = function () {
                  return this.player_;
                }),
                (a.prototype.options = function (a) {
                  return (
                    r["default"].warn(
                      "this.options() has been deprecated and will be moved to the constructor in 6.0"
                    ),
                    a
                      ? ((this.options_ = v["default"](this.options_, a)),
                        this.options_)
                      : this.options_
                  );
                }),
                (a.prototype.el = function () {
                  return this.el_;
                }),
                (a.prototype.createEl = function (a, b, c) {
                  return j.createEl(a, b, c);
                }),
                (a.prototype.localize = function (a) {
                  var b = this.player_.language && this.player_.language(),
                    c = this.player_.languages && this.player_.languages();
                  if (!b || !c) return a;
                  var d = c[b];
                  if (d && d[a]) return d[a];
                  var e = b.split("-")[0],
                    f = c[e];
                  return f && f[a] ? f[a] : a;
                }),
                (a.prototype.contentEl = function () {
                  return this.contentEl_ || this.el_;
                }),
                (a.prototype.id = function () {
                  return this.id_;
                }),
                (a.prototype.name = function () {
                  return this.name_;
                }),
                (a.prototype.children = function () {
                  return this.children_;
                }),
                (a.prototype.getChildById = function (a) {
                  return this.childIndex_[a];
                }),
                (a.prototype.getChild = function (a) {
                  return this.childNameIndex_[a];
                }),
                (a.prototype.addChild = function (b) {
                  var c =
                      arguments.length <= 1 || void 0 === arguments[1]
                        ? {}
                        : arguments[1],
                    d =
                      arguments.length <= 2 || void 0 === arguments[2]
                        ? this.children_.length
                        : arguments[2],
                    e = void 0,
                    f = void 0;
                  // If child is a string, create nt with options
                  if ("string" == typeof b) {
                    (f = b),
                      // Options can also be specified as a boolean, so convert to an empty object if false.
                      c || (c = {}),
                      // Same as above, but true is deprecated so show a warning.
                      c === !0 &&
                        (r["default"].warn(
                          "Initializing a child component with `true` is deprecated. Children should be defined in an array when possible, but if necessary use an object instead of `true`."
                        ),
                        (c = {}));
                    // If no componentClass in options, assume componentClass is the name lowercased
                    // (e.g. playButton)
                    var g = c.componentClass || t["default"](f);
                    // Set name through options
                    c.name = f;
                    // Create a new object & element for this controls set
                    // If there's no .player_, this is a player
                    var h = a.getComponent(g);
                    if (!h)
                      throw new Error("Component " + g + " does not exist");

                    if ("function" != typeof h) return null;
                    e = new h(this.player_ || this, c);
                  } else e = b;
                  // Add the UI object's element to the container div (box)
                  // Having an element is not required
                  if (
                    (this.children_.splice(d, 0, e),
                    "function" == typeof e.id && (this.childIndex_[e.id()] = e),
                    // If a name wasn't used to create the component, check if we can use the
                    // name function of the component
                    (f = f || (e.name && e.name())),
                    f && (this.childNameIndex_[f] = e),
                    "function" == typeof e.el && e.el())
                  ) {
                    var i = this.contentEl().children,
                      j = i[d] || null;
                    this.contentEl().insertBefore(e.el(), j);
                  }
                  // Return so it can stored on parent object if desired.
                  return e;
                }),
                (a.prototype.removeChild = function (a) {
                  if (
                    ("string" == typeof a && (a = this.getChild(a)),
                    a && this.children_)
                  ) {
                    for (var b = !1, c = this.children_.length - 1; c >= 0; c--)
                      if (this.children_[c] === a) {
                        (b = !0), this.children_.splice(c, 1);
                        break;
                      }
                    if (b) {
                      (this.childIndex_[a.id()] = null),
                        (this.childNameIndex_[a.name()] = null);
                      var d = a.el();
                      d &&
                        d.parentNode === this.contentEl() &&
                        this.contentEl().removeChild(a.el());
                    }
                  }
                }),
                (a.prototype.initChildren = function () {
                  var b = this,
                    c = this.options_.children;
                  c &&
                    !(function () {
                      // `this` is `parent`
                      var d = b.options_,
                        e = function (a) {
                          var c = a.name,
                            e = a.opts;
                          // Allow for disabling default components
                          // e.g. options['children']['posterImage'] = false
                          if (
                            // Allow options for children to be set at the parent options
                            // e.g. videojs(id, { controlBar: false });
                            // instead of videojs(id, { children: { controlBar: false });
                            (void 0 !== d[c] && (e = d[c]), e !== !1)
                          ) {
                            // Allow options to be passed as a simple boolean if no configuration
                            // is necessary.
                            e === !0 && (e = {}),
                              // We also want to pass the original player options to each component as well so they don't need to
                              // reach back into the player for options later.
                              (e.playerOptions = b.options_.playerOptions);
                            // Create and add the child component.
                            // Add a direct reference to the child by name on the parent instance.
                            // If two of the same component are used, different names should be supplied
                            // for each
                            var f = b.addChild(c, e);
                            f && (b[c] = f);
                          }
                        },
                        f = void 0,
                        g = a.getComponent("Tech");
                      (f = Array.isArray(c) ? c : Object.keys(c)),
                        f
                          .concat(
                            Object.keys(b.options_).filter(function (a) {
                              return !f.some(function (b) {
                                return "string" == typeof b
                                  ? a === b
                                  : a === b.name;
                              });
                            })
                          )
                          .map(function (a) {
                            var d = void 0,
                              e = void 0;
                            return (
                              "string" == typeof a
                                ? ((d = a), (e = c[d] || b.options_[d] || {}))
                                : ((d = a.name), (e = a)),
                              { name: d, opts: e }
                            );
                          })
                          .filter(function (b) {
                            var c = a.getComponent(
                              b.opts.componentClass || t["default"](b.name)
                            );
                            return c && !g.isTech(c);
                          })
                          .forEach(e);
                    })();
                }),
                (a.prototype.buildCSSClass = function () {
                  return "";
                }),
                (a.prototype.on = function (a, b, c) {
                  var d = this;
                  return (
                    "string" == typeof a || Array.isArray(a)
                      ? p.on(this.el_, a, l.bind(this, b))
                      : !(function () {
                          var e = a,
                            f = b,
                            g = l.bind(d, c),
                            h = function () {
                              return d.off(e, f, g);
                            };
                          (h.guid = g.guid), d.on("dispose", h);
                          // If the other component is disposed first we need to clean the reference
                          // to the other component in this component's removeOnDispose listener
                          // Otherwise we create a memory leak.
                          var i = function () {
                            return d.off("dispose", h);
                          };
                          // Add the same function ID so we can easily remove it later
                          (i.guid = g.guid),
                            // Check if this is a DOM node
                            a.nodeName
                              ? // Add the listener to the other element
                                (p.on(e, f, g), p.on(e, "dispose", i))
                              : "function" == typeof a.on &&
                                // Add the listener to the other component
                                (e.on(f, g), e.on("dispose", i));
                        })(),
                    this
                  );
                }),
                (a.prototype.off = function (a, b, c) {
                  if (!a || "string" == typeof a || Array.isArray(a))
                    p.off(this.el_, a, b);
                  else {
                    var d = a,
                      e = b,
                      f = l.bind(this, c);
                    // Remove the dispose listener on this component,
                    // which was given the same guid as the event listener
                    this.off("dispose", f),
                      a.nodeName
                        ? // Remove the listener
                          (p.off(d, e, f),
                          // Remove the listener for cleaning the dispose listener
                          p.off(d, "dispose", f))
                        : (d.off(e, f), d.off("dispose", f));
                  }
                  return this;
                }),
                (a.prototype.one = function (a, b, c) {
                  var d = this,
                    e = arguments;
                  return (
                    "string" == typeof a || Array.isArray(a)
                      ? p.one(this.el_, a, l.bind(this, b))
                      : !(function () {
                          var f = a,
                            g = b,
                            h = l.bind(d, c),
                            i = function j() {
                              d.off(f, g, j), h.apply(null, e);
                            };
                          // Keep the same function ID so we can remove it later
                          (i.guid = h.guid), d.on(f, g, i);
                        })(),
                    this
                  );
                }),
                (a.prototype.trigger = function (a, b) {
                  return p.trigger(this.el_, a, b), this;
                }),
                (a.prototype.ready = function (a) {
                  var b =
                    !(arguments.length <= 1 || void 0 === arguments[1]) &&
                    arguments[1];
                  return (
                    a &&
                      (this.isReady_
                        ? b
                          ? a.call(this)
                          : this.setTimeout(a, 1)
                        : ((this.readyQueue_ = this.readyQueue_ || []),
                          this.readyQueue_.push(a))),
                    this
                  );
                }),
                (a.prototype.triggerReady = function () {
                  (this.isReady_ = !0),
                    this.setTimeout(function () {
                      var a = this.readyQueue_;
                      // Reset Ready Queue
                      (this.readyQueue_ = []),
                        a &&
                          a.length > 0 &&
                          a.forEach(function (a) {
                            a.call(this);
                          }, this),
                        // Allow for using event listeners also
                        this.trigger("ready");
                    }, 1);
                }),
                (a.prototype.$ = function (a, b) {
                  return j.$(a, b || this.contentEl());
                }),
                (a.prototype.$$ = function (a, b) {
                  return j.$$(a, b || this.contentEl());
                }),
                (a.prototype.hasClass = function (a) {
                  return j.hasElClass(this.el_, a);
                }),
                (a.prototype.addClass = function (a) {
                  return j.addElClass(this.el_, a), this;
                }),
                (a.prototype.removeClass = function (a) {
                  return j.removeElClass(this.el_, a), this;
                }),
                (a.prototype.toggleClass = function (a, b) {
                  return j.toggleElClass(this.el_, a, b), this;
                }),
                (a.prototype.show = function () {
                  return this.removeClass("vjs-hidden"), this;
                }),
                (a.prototype.hide = function () {
                  return this.addClass("vjs-hidden"), this;
                }),
                (a.prototype.lockShowing = function () {
                  return this.addClass("vjs-lock-showing"), this;
                }),
                (a.prototype.unlockShowing = function () {
                  return this.removeClass("vjs-lock-showing"), this;
                }),
                (a.prototype.width = function (a, b) {
                  return this.dimension("width", a, b);
                }),
                (a.prototype.height = function (a, b) {
                  return this.dimension("height", a, b);
                }),
                (a.prototype.dimensions = function (a, b) {
                  // Skip resize listeners on width for optimization
                  return this.width(a, !0).height(b);
                }),
                (a.prototype.dimension = function (a, b, c) {
                  if (void 0 !== b)
                    // Return component
                    // Set to zero if null or literally NaN (NaN !== NaN)
                    // Check if using css width/height (% or px) and adjust
                    // skipListeners allows us to avoid triggering the resize event when setting both width and height
                    return (
                      (null !== b && b === b) || (b = 0),
                      ("" + b).indexOf("%") !== -1 ||
                      ("" + b).indexOf("px") !== -1
                        ? (this.el_.style[a] = b)
                        : "auto" === b
                        ? (this.el_.style[a] = "")
                        : (this.el_.style[a] = b + "px"),
                      c || this.trigger("resize"),
                      this
                    );
                  // Not setting a value, so getting it
                  // Make sure element exists
                  if (!this.el_) return 0;
                  // Get dimension value from style
                  var d = this.el_.style[a],
                    e = d.indexOf("px");
                  return e !== -1
                    ? parseInt(d.slice(0, e), 10)
                    : parseInt(this.el_["offset" + t["default"](a)], 10);
                }),
                (a.prototype.currentDimension = function (a) {
                  var b = 0;
                  if ("width" !== a && "height" !== a)
                    throw new Error(
                      "currentDimension only accepts width or height value"
                    );
                  if ("function" == typeof h["default"].getComputedStyle) {
                    var c = h["default"].getComputedStyle(this.el_);
                    b = c.getPropertyValue(a) || c[a];
                  } else if (this.el_.currentStyle) {
                    // ie 8 doesn't support computed style, shim it
                    // return clientWidth or clientHeight instead for better accuracy
                    var d = "offset" + t["default"](a);
                    b = this.el_[d];
                  }
                  // remove 'px' from variable and parse as integer
                  return (b = parseFloat(b));
                }),
                (a.prototype.currentDimensions = function () {
                  return {
                    width: this.currentDimension("width"),
                    height: this.currentDimension("height"),
                  };
                }),
                (a.prototype.currentWidth = function () {
                  return this.currentDimension("width");
                }),
                (a.prototype.currentHeight = function () {
                  return this.currentDimension("height");
                }),
                (a.prototype.emitTapEvents = function () {
                  // Track the start time so we can determine how long the touch lasted
                  var a = 0,
                    b = null,
                    c = 10,
                    d = 200,
                    e = void 0;
                  this.on("touchstart", function (c) {
                    // If more than one finger, don't consider treating this as a click
                    1 === c.touches.length &&
                      // Copy pageX/pageY from the object
                      ((b = {
                        pageX: c.touches[0].pageX,
                        pageY: c.touches[0].pageY,
                      }),
                      // Record start time so we can detect a tap vs. "touch and hold"
                      (a = new Date().getTime()),
                      // Reset couldBeTap tracking
                      (e = !0));
                  }),
                    this.on("touchmove", function (a) {
                      // If more than one finger, don't consider treating this as a click
                      if (a.touches.length > 1) e = !1;
                      else if (b) {
                        // Some devices will throw touchmoves for all but the slightest of taps.
                        // So, if we moved only a small distance, this could still be a tap
                        var d = a.touches[0].pageX - b.pageX,
                          f = a.touches[0].pageY - b.pageY,
                          g = Math.sqrt(d * d + f * f);
                        g > c && (e = !1);
                      }
                    });
                  var f = function () {
                    e = !1;
                  };
                  // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s
                  this.on("touchleave", f),
                    this.on("touchcancel", f),
                    // When the touch ends, measure how long it took and trigger the appropriate
                    // event
                    this.on("touchend", function (c) {
                      // Proceed only if the touchmove/leave/cancel event didn't happen
                      if (((b = null), e === !0)) {
                        // Measure how long the touch lasted
                        var f = new Date().getTime() - a;
                        // Make sure the touch was less than the threshold to be considered a tap
                        f < d &&
                          // Don't let browser turn this into a click
                          (c.preventDefault(), this.trigger("tap"));
                      }
                    });
                }),
                (a.prototype.enableTouchActivity = function () {
                  // Don't continue if the root player doesn't support reporting user activity
                  if (this.player() && this.player().reportUserActivity) {
                    // listener for reporting that the user is active
                    var a = l.bind(
                        this.player(),
                        this.player().reportUserActivity
                      ),
                      b = void 0;
                    this.on("touchstart", function () {
                      a(),
                        // For as long as the they are touching the device or have their mouse down,
                        // we consider them active even if they're not moving their finger or mouse.
                        // So we want to continue to update that they are active
                        this.clearInterval(b),
                        // report at the same interval as activityCheck
                        (b = this.setInterval(a, 250));
                    });
                    var c = function (c) {
                      a(),
                        // stop the interval that maintains activity if the touch is holding
                        this.clearInterval(b);
                    };
                    this.on("touchmove", a),
                      this.on("touchend", c),
                      this.on("touchcancel", c);
                  }
                }),
                (a.prototype.setTimeout = function (a, b) {
                  a = l.bind(this, a);
                  // window.setTimeout would be preferable here, but due to some bizarre issue with Sinon and/or Phantomjs, we can't.
                  var c = h["default"].setTimeout(a, b),
                    d = function () {
                      this.clearTimeout(c);
                    };
                  return (
                    (d.guid = "vjs-timeout-" + c), this.on("dispose", d), c
                  );
                }),
                (a.prototype.clearTimeout = function (a) {
                  h["default"].clearTimeout(a);
                  var b = function () {};
                  return (
                    (b.guid = "vjs-timeout-" + a), this.off("dispose", b), a
                  );
                }),
                (a.prototype.setInterval = function (a, b) {
                  a = l.bind(this, a);
                  var c = h["default"].setInterval(a, b),
                    d = function () {
                      this.clearInterval(c);
                    };
                  return (
                    (d.guid = "vjs-interval-" + c), this.on("dispose", d), c
                  );
                }),
                (a.prototype.clearInterval = function (a) {
                  h["default"].clearInterval(a);
                  var b = function () {};
                  return (
                    (b.guid = "vjs-interval-" + a), this.off("dispose", b), a
                  );
                }),
                (a.registerComponent = function (b, c) {
                  return (
                    a.components_ || (a.components_ = {}),
                    (a.components_[b] = c),
                    c
                  );
                }),
                (a.getComponent = function (b) {
                  return a.components_ && a.components_[b]
                    ? a.components_[b]
                    : h["default"] &&
                      h["default"].videojs &&
                      h["default"].videojs[b]
                    ? (r["default"].warn(
                        "The " +
                          b +
                          " component was added to the videojs object when it should be registered using videojs.registerComponent(name, component)"
                      ),
                      h["default"].videojs[b])
                    : void 0;
                }),
                (a.extend = function (b) {
                  (b = b || {}),
                    r["default"].warn(
                      "Component.extend({}) has been deprecated, use videojs.extend(Component, {}) instead"
                    );
                  // Set up the constructor using the supplied init method
                  // or using the init of the parent object
                  // Make sure to check the unobfuscated version for external libs
                  var c =
                      b.init ||
                      b.init ||
                      this.prototype.init ||
                      this.prototype.init ||
                      function () {},
                    d = function () {
                      c.apply(this, arguments);
                    };
                  // Inherit from this object's prototype
                  (d.prototype = Object.create(this.prototype)),
                    // Reset the constructor property for subObj otherwise
                    // instances of subObj would have the constructor of the parent Object
                    (d.prototype.constructor = d),
                    // Make the class extendable
                    (d.extend = a.extend);
                  // Extend subObj's prototype with functions and other properties from props
                  for (var e in b)
                    b.hasOwnProperty(e) && (d.prototype[e] = b[e]);
                  return d;
                }),
                a
              );
            })();
          w.registerComponent("Component", w),
            (c["default"] = w),
            (b.exports = c["default"]);
        },
        {
          "./utils/dom.js": 142,
          "./utils/events.js": 143,
          "./utils/fn.js": 144,
          "./utils/guid.js": 146,
          "./utils/log.js": 147,
          "./utils/merge-options.js": 148,
          "./utils/to-title-case.js": 151,
          "global/window": 2,
        },
      ],
      68: [
        function (a, b, c) {
          /**
           * @file audio-track-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../track-button.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = (d(l), a("./audio-track-menu-item.js")),
            n = e(m),
            o = (function (a) {
              function b(c) {
                var d =
                  arguments.length <= 1 || void 0 === arguments[1]
                    ? {}
                    : arguments[1];
                f(this, b),
                  (d.tracks = c.audioTracks && c.audioTracks()),
                  a.call(this, c, d),
                  this.el_.setAttribute("aria-label", "Audio Menu");
              }
              return (
                g(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-audio-button " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.createItems = function () {
                  var a =
                      arguments.length <= 0 || void 0 === arguments[0]
                        ? []
                        : arguments[0],
                    b = this.player_.audioTracks && this.player_.audioTracks();
                  if (!b) return a;
                  for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    a.push(
                      new n["default"](this.player_, {
                        // MenuItem is selectable
                        selectable: !0,
                        track: d,
                      })
                    );
                  }
                  return a;
                }),
                b
              );
            })(i["default"]);
          (o.prototype.controlText_ = "Audio Track"),
            k["default"].registerComponent("AudioTrackButton", o),
            (c["default"] = o),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/fn.js": 144,
          "../track-button.js": 98,
          "./audio-track-menu-item.js": 69,
        },
      ],
      69: [
        function (a, b, c) {
          /**
           * @file audio-track-menu-item.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../menu/menu-item.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = d(l),
            n = (function (a) {
              function b(c, d) {
                var e = this;
                f(this, b);
                var g = d.track,
                  h = c.audioTracks();
                // Modify options for parent MenuItem class's init.
                (d.label = g.label || g.language || "Unknown"),
                  (d.selected = g.enabled),
                  a.call(this, c, d),
                  (this.track = g),
                  h &&
                    !(function () {
                      var a = m.bind(e, e.handleTracksChange);
                      h.addEventListener("change", a),
                        e.on("dispose", function () {
                          h.removeEventListener("change", a);
                        });
                    })();
              }
              /**
               * Handle click on audio track
               *
               * @method handleClick
               */
              /**
               * Handle audio track change
               *
               * @method handleTracksChange
               */
              return (
                g(b, a),
                (b.prototype.handleClick = function (b) {
                  var c = this.player_.audioTracks();
                  if ((a.prototype.handleClick.call(this, b), c))
                    for (var d = 0; d < c.length; d++) {
                      var e = c[d];
                      e.enabled = e === this.track;
                    }
                }),
                (b.prototype.handleTracksChange = function (a) {
                  this.selected(this.track.enabled);
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("AudioTrackMenuItem", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../menu/menu-item.js": 110,
          "../../utils/fn.js": 144,
        },
      ],
      70: [
        function (a, b, c) {
          /**
           * @file control-bar.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../component.js"),
            h = d(g),
            i = a("./play-toggle.js"),
            j = (d(i), a("./time-controls/current-time-display.js")),
            k = (d(j), a("./time-controls/duration-display.js")),
            l = (d(k), a("./time-controls/time-divider.js")),
            m = (d(l), a("./time-controls/remaining-time-display.js")),
            n = (d(m), a("./live-display.js")),
            o = (d(n), a("./progress-control/progress-control.js")),
            p = (d(o), a("./fullscreen-toggle.js")),
            q = (d(p), a("./volume-control/volume-control.js")),
            r = (d(q), a("./volume-menu-button.js")),
            s = (d(r), a("./mute-toggle.js")),
            t = (d(s), a("./text-track-controls/chapters-button.js")),
            u = (d(t), a("./text-track-controls/descriptions-button.js")),
            v = (d(u), a("./text-track-controls/subtitles-button.js")),
            w = (d(v), a("./text-track-controls/captions-button.js")),
            x = (d(w), a("./audio-track-controls/audio-track-button.js")),
            y = (d(x), a("./playback-rate-menu/playback-rate-menu-button.js")),
            z = (d(y), a("./spacer-controls/custom-control-spacer.js")),
            A =
              (d(z),
              (function (a) {
                function b() {
                  e(this, b), a.apply(this, arguments);
                }
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                return (
                  f(b, a),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(
                      this,
                      "div",
                      { className: "vjs-control-bar", dir: "ltr" },
                      { role: "group" }
                    );
                  }),
                  b
                );
              })(h["default"]));
          (A.prototype.options_ = {
            children: [
              "playToggle",
              "volumeMenuButton",
              "currentTimeDisplay",
              "timeDivider",
              "durationDisplay",
              "progressControl",
              "liveDisplay",
              "remainingTimeDisplay",
              "customControlSpacer",
              "playbackRateMenuButton",
              "chaptersButton",
              "descriptionsButton",
              "subtitlesButton",
              "captionsButton",
              "audioTrackButton",
              "fullscreenToggle",
            ],
          }),
            h["default"].registerComponent("ControlBar", A),
            (c["default"] = A),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "./audio-track-controls/audio-track-button.js": 68,
          "./fullscreen-toggle.js": 71,
          "./live-display.js": 72,
          "./mute-toggle.js": 73,
          "./play-toggle.js": 74,
          "./playback-rate-menu/playback-rate-menu-button.js": 75,
          "./progress-control/progress-control.js": 80,
          "./spacer-controls/custom-control-spacer.js": 83,
          "./text-track-controls/captions-button.js": 86,
          "./text-track-controls/chapters-button.js": 87,
          "./text-track-controls/descriptions-button.js": 89,
          "./text-track-controls/subtitles-button.js": 91,
          "./time-controls/current-time-display.js": 94,
          "./time-controls/duration-display.js": 95,
          "./time-controls/remaining-time-display.js": 96,
          "./time-controls/time-divider.js": 97,
          "./volume-control/volume-control.js": 100,
          "./volume-menu-button.js": 102,
        },
      ],
      71: [
        function (a, b, c) {
          /**
           * @file fullscreen-toggle.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../button.js"),
            h = d(g),
            i = a("../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b),
                  a.call(this, c, d),
                  this.on(c, "fullscreenchange", this.handleFullscreenChange);
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Handles Fullscreenchange on the component and change control text accordingly
               *
               * @method handleFullscreenChange
               */
              /**
               * Handles click for full screen
               *
               * @method handleClick
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-fullscreen-control " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleFullscreenChange = function () {
                  this.player_.isFullscreen()
                    ? this.controlText("Non-Fullscreen")
                    : this.controlText("Fullscreen");
                }),
                (b.prototype.handleClick = function () {
                  this.player_.isFullscreen()
                    ? this.player_.exitFullscreen()
                    : this.player_.requestFullscreen();
                }),
                b
              );
            })(h["default"]);
          (k.prototype.controlText_ = "Fullscreen"),
            j["default"].registerComponent("FullscreenToggle", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../button.js": 64, "../component.js": 67 },
      ],
      72: [
        function (a, b, c) {
          /**
           * @file live-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../component"),
            i = e(h),
            j = a("../utils/dom.js"),
            k = d(j),
            l = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.updateShowing(),
                  this.on(this.player(), "durationchange", this.updateShowing);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, "div", {
                    className: "vjs-live-control vjs-control",
                  });
                  return (
                    (this.contentEl_ = k.createEl(
                      "div",
                      {
                        className: "vjs-live-display",
                        innerHTML:
                          '<span class="vjs-control-text">' +
                          this.localize("Stream Type") +
                          "</span>" +
                          this.localize("LIVE"),
                      },
                      { "aria-live": "off" }
                    )),
                    b.appendChild(this.contentEl_),
                    b
                  );
                }),
                (b.prototype.updateShowing = function () {
                  this.player().duration() === 1 / 0
                    ? this.show()
                    : this.hide();
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("LiveDisplay", l),
            (c["default"] = l),
            (b.exports = c["default"]);
        },
        { "../component": 67, "../utils/dom.js": 142 },
      ],
      73: [
        function (a, b, c) {
          /**
           * @file mute-toggle.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../button"),
            i = e(h),
            j = a("../component"),
            k = e(j),
            l = a("../utils/dom.js"),
            m = d(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.on(c, "volumechange", this.update),
                  // hide mute toggle if the current tech doesn't support volume control
                  c.tech_ &&
                    c.tech_.featuresVolumeControl === !1 &&
                    this.addClass("vjs-hidden"),
                  this.on(c, "loadstart", function () {
                    this.update(), // We need to update the button to account for a default muted state.
                      c.tech_.featuresVolumeControl === !1
                        ? this.addClass("vjs-hidden")
                        : this.removeClass("vjs-hidden");
                  });
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Handle click on mute
               *
               * @method handleClick
               */
              /**
               * Update volume
               *
               * @method update
               */
              return (
                g(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-mute-control " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleClick = function () {
                  this.player_.muted(!this.player_.muted());
                }),
                (b.prototype.update = function () {
                  var a = this.player_.volume(),
                    b = 3;
                  0 === a || this.player_.muted()
                    ? (b = 0)
                    : a < 0.33
                    ? (b = 1)
                    : a < 0.67 && (b = 2);
                  // Don't rewrite the button text if the actual text doesn't change.
                  // This causes unnecessary and confusing information for screen reader users.
                  // This check is needed because this function gets called every time the volume level is changed.
                  var c = this.player_.muted() ? "Unmute" : "Mute";
                  this.controlText() !== c &&
                    this.controlText(c); /* TODO improve muted icon classes */
                  for (var d = 0; d < 4; d++)
                    m.removeElClass(this.el_, "vjs-vol-" + d);
                  m.addElClass(this.el_, "vjs-vol-" + b);
                }),
                b
              );
            })(i["default"]);
          (n.prototype.controlText_ = "Mute"),
            k["default"].registerComponent("MuteToggle", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        { "../button": 64, "../component": 67, "../utils/dom.js": 142 },
      ],
      74: [
        function (a, b, c) {
          /**
           * @file play-toggle.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../button.js"),
            h = d(g),
            i = a("../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b),
                  a.call(this, c, d),
                  this.on(c, "play", this.handlePlay),
                  this.on(c, "pause", this.handlePause);
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Handle click to toggle between play and pause
               *
               * @method handleClick
               */
              /**
               * Add the vjs-playing class to the element so it can change appearance
               *
               * @method handlePlay
               */
              /**
               * Add the vjs-paused class to the element so it can change appearance
               *
               * @method handlePause
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-play-control " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleClick = function () {
                  this.player_.paused()
                    ? this.player_.play()
                    : this.player_.pause();
                }),
                (b.prototype.handlePlay = function () {
                  this.removeClass("vjs-paused"),
                    this.addClass("vjs-playing"),
                    this.controlText("Pause");
                }),
                (b.prototype.handlePause = function () {
                  this.removeClass("vjs-playing"),
                    this.addClass("vjs-paused"),
                    this.controlText("Play");
                }),
                b
              );
            })(h["default"]);
          (k.prototype.controlText_ = "Play"),
            j["default"].registerComponent("PlayToggle", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../button.js": 64, "../component.js": 67 },
      ],
      75: [
        function (a, b, c) {
          /**
           * @file playback-rate-menu-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../menu/menu-button.js"),
            i = e(h),
            j = a("../../menu/menu.js"),
            k = e(j),
            l = a("./playback-rate-menu-item.js"),
            m = e(l),
            n = a("../../component.js"),
            o = e(n),
            p = a("../../utils/dom.js"),
            q = d(p),
            r = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.updateVisibility(),
                  this.updateLabel(),
                  this.on(c, "loadstart", this.updateVisibility),
                  this.on(c, "ratechange", this.updateLabel);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Create the playback rate menu
               *
               * @return {Menu} Menu object populated with items
               * @method createMenu
               */
              /**
               * Updates ARIA accessibility attributes
               *
               * @method updateARIAAttributes
               */
              /**
               * Handle menu item click
               *
               * @method handleClick
               */
              /**
               * Get possible playback rates
               *
               * @return {Array} Possible playback rates
               * @method playbackRates
               */
              /**
               * Get whether playback rates is supported by the tech
               * and an array of playback rates exists
               *
               * @return {Boolean} Whether changing playback rate is supported
               * @method playbackRateSupported
               */
              /**
               * Hide playback rate controls when they're no playback rate options to select
               *
               * @method updateVisibility
               */
              /**
               * Update button label when rate changed
               *
               * @method updateLabel
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this);
                  return (
                    (this.labelEl_ = q.createEl("div", {
                      className: "vjs-playback-rate-value",
                      innerHTML: 1,
                    })),
                    b.appendChild(this.labelEl_),
                    b
                  );
                }),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-playback-rate " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.createMenu = function () {
                  var a = new k["default"](this.player()),
                    b = this.playbackRates();
                  if (b)
                    for (var c = b.length - 1; c >= 0; c--)
                      a.addChild(
                        new m["default"](this.player(), { rate: b[c] + "x" })
                      );
                  return a;
                }),
                (b.prototype.updateARIAAttributes = function () {
                  // Current playback rate
                  this.el().setAttribute(
                    "aria-valuenow",
                    this.player().playbackRate()
                  );
                }),
                (b.prototype.handleClick = function () {
                  for (
                    var a = this.player().playbackRate(),
                      b = this.playbackRates(),
                      c = b[0],
                      d = 0;
                    d < b.length;
                    d++
                  )
                    if (b[d] > a) {
                      c = b[d];
                      break;
                    }
                  this.player().playbackRate(c);
                }),
                (b.prototype.playbackRates = function () {
                  return (
                    this.options_.playbackRates ||
                    (this.options_.playerOptions &&
                      this.options_.playerOptions.playbackRates)
                  );
                }),
                (b.prototype.playbackRateSupported = function () {
                  return (
                    this.player().tech_ &&
                    this.player().tech_.featuresPlaybackRate &&
                    this.playbackRates() &&
                    this.playbackRates().length > 0
                  );
                }),
                (b.prototype.updateVisibility = function () {
                  this.playbackRateSupported()
                    ? this.removeClass("vjs-hidden")
                    : this.addClass("vjs-hidden");
                }),
                (b.prototype.updateLabel = function () {
                  this.playbackRateSupported() &&
                    (this.labelEl_.innerHTML =
                      this.player().playbackRate() + "x");
                }),
                b
              );
            })(i["default"]);
          (r.prototype.controlText_ = "Playback Rate"),
            o["default"].registerComponent("PlaybackRateMenuButton", r),
            (c["default"] = r),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../menu/menu-button.js": 109,
          "../../menu/menu.js": 111,
          "../../utils/dom.js": 142,
          "./playback-rate-menu-item.js": 76,
        },
      ],
      76: [
        function (a, b, c) {
          /**
           * @file playback-rate-menu-item.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../menu/menu-item.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b);
                var f = d.rate,
                  g = parseFloat(f, 10);
                // Modify options for parent MenuItem class's init.
                (d.label = f),
                  (d.selected = 1 === g),
                  a.call(this, c, d),
                  (this.label = f),
                  (this.rate = g),
                  this.on(c, "ratechange", this.update);
              }
              /**
               * Handle click on menu item
               *
               * @method handleClick
               */
              /**
               * Update playback rate with selected rate
               *
               * @method update
               */
              return (
                f(b, a),
                (b.prototype.handleClick = function () {
                  a.prototype.handleClick.call(this),
                    this.player().playbackRate(this.rate);
                }),
                (b.prototype.update = function () {
                  this.selected(this.player().playbackRate() === this.rate);
                }),
                b
              );
            })(h["default"]);
          (k.prototype.contentElType = "button"),
            j["default"].registerComponent("PlaybackRateMenuItem", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "../../menu/menu-item.js": 110 },
      ],
      77: [
        function (a, b, c) {
          /**
           * @file load-progress-bar.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/dom.js"),
            k = d(j),
            l = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.on(c, "progress", this.update);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Update progress bar
               *
               * @method update
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-load-progress",
                    innerHTML:
                      '<span class="vjs-control-text"><span>' +
                      this.localize("Loaded") +
                      "</span>: 0%</span>",
                  });
                }),
                (b.prototype.update = function () {
                  var a = this.player_.buffered(),
                    b = this.player_.duration(),
                    c = this.player_.bufferedEnd(),
                    d = this.el_.children,
                    e = function (a, b) {
                      var c = a / b || 0; // no NaN
                      return 100 * (c >= 1 ? 1 : c) + "%";
                    };
                  // update the width of the progress bar
                  this.el_.style.width = e(c, b);
                  // add child elements to represent the individual buffered time ranges
                  for (var f = 0; f < a.length; f++) {
                    var g = a.start(f),
                      h = a.end(f),
                      i = d[f];
                    i || (i = this.el_.appendChild(k.createEl())),
                      // set the percent based on the width of the progress bar (bufferedEnd)
                      (i.style.left = e(g, c)),
                      (i.style.width = e(h - g, c));
                  }
                  // remove unused buffered range elements
                  for (var f = d.length; f > a.length; f--)
                    this.el_.removeChild(d[f - 1]);
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("LoadProgressBar", l),
            (c["default"] = l),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "../../utils/dom.js": 142 },
      ],
      78: [
        function (a, b, c) {
          /**
           * @file mouse-time-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("global/window"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/dom.js"),
            m = d(l),
            n = a("../../utils/fn.js"),
            o = d(n),
            p = a("../../utils/format-time.js"),
            q = e(p),
            r = a("lodash-compat/function/throttle"),
            s = e(r),
            t = (function (a) {
              function b(c, d) {
                var e = this;
                f(this, b),
                  a.call(this, c, d),
                  d.playerOptions &&
                    d.playerOptions.controlBar &&
                    d.playerOptions.controlBar.progressControl &&
                    d.playerOptions.controlBar.progressControl
                      .keepTooltipsInside &&
                    (this.keepTooltipsInside =
                      d.playerOptions.controlBar.progressControl.keepTooltipsInside),
                  this.keepTooltipsInside &&
                    ((this.tooltip = m.createEl("div", {
                      className: "vjs-time-tooltip",
                    })),
                    this.el().appendChild(this.tooltip),
                    this.addClass("vjs-keep-tooltips-inside")),
                  this.update(0, 0),
                  c.on("ready", function () {
                    e.on(
                      c.controlBar.progressControl.el(),
                      "mousemove",
                      s["default"](o.bind(e, e.handleMouseMove), 25)
                    );
                  });
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * This takes in a horizontal position for the bar and returns a clamped position.
               * Clamped position means that it will keep the position greater than half the width
               * of the tooltip and smaller than the player width minus half the width o the tooltip.
               * It will only clamp the position if `keepTooltipsInside` option is set.
               *
               * @param {Number} position the position the bar wants to be
               * @return {Number} newPosition the (potentially) clamped position
               * @method clampPosition_
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-mouse-display",
                  });
                }),
                (b.prototype.handleMouseMove = function (a) {
                  var b = this.player_.duration(),
                    c = this.calculateDistance(a) * b,
                    d = a.pageX - m.findElPosition(this.el().parentNode).left;
                  this.update(c, d);
                }),
                (b.prototype.update = function (a, b) {
                  var c = q["default"](a, this.player_.duration());
                  if (
                    ((this.el().style.left = b + "px"),
                    this.el().setAttribute("data-current-time", c),
                    this.keepTooltipsInside)
                  ) {
                    var d = this.clampPosition_(b),
                      e = b - d + 1,
                      f = parseFloat(
                        i["default"].getComputedStyle(this.tooltip).width
                      ),
                      g = f / 2;
                    (this.tooltip.innerHTML = c),
                      (this.tooltip.style.right = "-" + (g - e) + "px");
                  }
                }),
                (b.prototype.calculateDistance = function (a) {
                  return m.getPointerPosition(this.el().parentNode, a).x;
                }),
                (b.prototype.clampPosition_ = function (a) {
                  if (!this.keepTooltipsInside) return a;
                  var b = parseFloat(
                      i["default"].getComputedStyle(this.player().el()).width
                    ),
                    c = parseFloat(
                      i["default"].getComputedStyle(this.tooltip).width
                    ),
                    d = c / 2,
                    e = a;
                  return (
                    a < d
                      ? (e = Math.ceil(d))
                      : a > b - d && (e = Math.floor(b - d)),
                    e
                  );
                }),
                b
              );
            })(k["default"]);
          k["default"].registerComponent("MouseTimeDisplay", t),
            (c["default"] = t),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/fn.js": 144,
          "../../utils/format-time.js": 145,
          "global/window": 2,
          "lodash-compat/function/throttle": 7,
        },
      ],
      79: [
        function (a, b, c) {
          /**
           * @file play-progress-bar.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/fn.js"),
            k = d(j),
            l = a("../../utils/dom.js"),
            m = (d(l), a("../../utils/format-time.js")),
            n = e(m),
            o = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.updateDataAttr(),
                  this.on(c, "timeupdate", this.updateDataAttr),
                  c.ready(k.bind(this, this.updateDataAttr)),
                  d.playerOptions &&
                    d.playerOptions.controlBar &&
                    d.playerOptions.controlBar.progressControl &&
                    d.playerOptions.controlBar.progressControl
                      .keepTooltipsInside &&
                    (this.keepTooltipsInside =
                      d.playerOptions.controlBar.progressControl.keepTooltipsInside),
                  this.keepTooltipsInside &&
                    this.addClass("vjs-keep-tooltips-inside");
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-play-progress vjs-slider-bar",
                    innerHTML:
                      '<span class="vjs-control-text"><span>' +
                      this.localize("Progress") +
                      "</span>: 0%</span>",
                  });
                }),
                (b.prototype.updateDataAttr = function () {
                  var a = this.player_.scrubbing()
                    ? this.player_.getCache().currentTime
                    : this.player_.currentTime();
                  this.el_.setAttribute(
                    "data-current-time",
                    n["default"](a, this.player_.duration())
                  );
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("PlayProgressBar", o),
            (c["default"] = o),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/fn.js": 144,
          "../../utils/format-time.js": 145,
        },
      ],
      80: [
        function (a, b, c) {
          /**
           * @file progress-control.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../component.js"),
            h = d(g),
            i = a("./seek-bar.js"),
            j = (d(i), a("./mouse-time-display.js")),
            k =
              (d(j),
              (function (a) {
                function b() {
                  e(this, b), a.apply(this, arguments);
                }
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                return (
                  f(b, a),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(this, "div", {
                      className: "vjs-progress-control vjs-control",
                    });
                  }),
                  b
                );
              })(h["default"]));
          (k.prototype.options_ = { children: ["seekBar"] }),
            h["default"].registerComponent("ProgressControl", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "./mouse-time-display.js": 78,
          "./seek-bar.js": 81,
        },
      ],
      81: [
        function (a, b, c) {
          /**
           * @file seek-bar.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("global/window"),
            i = e(h),
            j = a("../../slider/slider.js"),
            k = e(j),
            l = a("../../component.js"),
            m = e(l),
            n = a("./load-progress-bar.js"),
            o = (e(n), a("./play-progress-bar.js")),
            p = (e(o), a("./tooltip-progress-bar.js")),
            q = (e(p), a("../../utils/fn.js")),
            r = d(q),
            s = a("../../utils/format-time.js"),
            t = e(s),
            u = a("object.assign"),
            v =
              (e(u),
              (function (a) {
                function b(c, d) {
                  f(this, b),
                    a.call(this, c, d),
                    this.on(c, "timeupdate", this.updateProgress),
                    this.on(c, "ended", this.updateProgress),
                    c.ready(r.bind(this, this.updateProgress)),
                    d.playerOptions &&
                      d.playerOptions.controlBar &&
                      d.playerOptions.controlBar.progressControl &&
                      d.playerOptions.controlBar.progressControl
                        .keepTooltipsInside &&
                      (this.keepTooltipsInside =
                        d.playerOptions.controlBar.progressControl.keepTooltipsInside),
                    this.keepTooltipsInside &&
                      (this.tooltipProgressBar = this.addChild(
                        "TooltipProgressBar"
                      ));
                }
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                /**
                   * Update ARIA accessibility attributes
                   *
                   * @method updateARIAAttributes
  
                   * @return {Number} Percentage played
                   * @method getPercent
                   */
                /**
                 * Handle mouse down on seek bar
                 *
                 * @method handleMouseDown
                 */
                /**
                 * Handle mouse move on seek bar
                 *
                 * @method handleMouseMove
                 */
                /**
                 * Handle mouse up on seek bar
                 *
                 * @method handleMouseUp
                 */
                /**
                 * Move more quickly fast forward for keyboard-only users
                 *
                 * @method stepForward
                 */
                /**
                 * Move more quickly rewind for keyboard-only users
                 *
                 * @method stepBack
                 */
                return (
                  g(b, a),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(
                      this,
                      "div",
                      { className: "vjs-progress-holder" },
                      { "aria-label": "progress bar" }
                    );
                  }),
                  (b.prototype.updateProgress = function () {
                    if (
                      (this.updateAriaAttributes(this.el_),
                      this.keepTooltipsInside)
                    ) {
                      this.updateAriaAttributes(this.tooltipProgressBar.el_),
                        (this.tooltipProgressBar.el_.style.width = this.bar.el_.style.width);
                      var a = parseFloat(
                          i["default"].getComputedStyle(this.player().el())
                            .width
                        ),
                        b = parseFloat(
                          i["default"].getComputedStyle(
                            this.tooltipProgressBar.tooltip
                          ).width
                        ),
                        c = this.tooltipProgressBar.el().style;
                      (c.maxWidth = Math.floor(a - b / 2) + "px"),
                        (c.minWidth = Math.ceil(b / 2) + "px"),
                        (c.right = "-" + b / 2 + "px");
                    }
                  }),
                  (b.prototype.updateAriaAttributes = function (a) {
                    // Allows for smooth scrubbing, when player can't keep up.
                    var b = this.player_.scrubbing()
                      ? this.player_.getCache().currentTime
                      : this.player_.currentTime();
                    a.setAttribute(
                      "aria-valuenow",
                      (100 * this.getPercent()).toFixed(2)
                    ), // machine readable value of progress bar (percentage complete)
                      a.setAttribute(
                        "aria-valuetext",
                        t["default"](b, this.player_.duration())
                      );
                  }),
                  (b.prototype.getPercent = function () {
                    var a =
                      this.player_.currentTime() / this.player_.duration();
                    return a >= 1 ? 1 : a;
                  }),
                  (b.prototype.handleMouseDown = function (b) {
                    a.prototype.handleMouseDown.call(this, b),
                      this.player_.scrubbing(!0),
                      (this.videoWasPlaying = !this.player_.paused()),
                      this.player_.pause();
                  }),
                  (b.prototype.handleMouseMove = function (a) {
                    var b = this.calculateDistance(a) * this.player_.duration();
                    // Don't let video end while scrubbing.
                    b === this.player_.duration() && (b -= 0.1),
                      // Set new time (tell player to seek to new time)
                      this.player_.currentTime(b);
                  }),
                  (b.prototype.handleMouseUp = function (b) {
                    a.prototype.handleMouseUp.call(this, b),
                      this.player_.scrubbing(!1),
                      this.videoWasPlaying && this.player_.play();
                  }),
                  (b.prototype.stepForward = function () {
                    this.player_.currentTime(this.player_.currentTime() + 5);
                  }),
                  (b.prototype.stepBack = function () {
                    this.player_.currentTime(this.player_.currentTime() - 5);
                  }),
                  b
                );
              })(k["default"]));
          (v.prototype.options_ = {
            children: [
              "loadProgressBar",
              "mouseTimeDisplay",
              "playProgressBar",
            ],
            barName: "playProgressBar",
          }),
            (v.prototype.playerEvent = "timeupdate"),
            m["default"].registerComponent("SeekBar", v),
            (c["default"] = v),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../slider/slider.js": 119,
          "../../utils/fn.js": 144,
          "../../utils/format-time.js": 145,
          "./load-progress-bar.js": 77,
          "./play-progress-bar.js": 79,
          "./tooltip-progress-bar.js": 82,
          "global/window": 2,
          "object.assign": 45,
        },
      ],
      82: [
        function (a, b, c) {
          /**
           * @file play-progress-bar.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/fn.js"),
            k = d(j),
            l = a("../../utils/dom.js"),
            m = (d(l), a("../../utils/format-time.js")),
            n = e(m),
            o = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.updateDataAttr(),
                  this.on(c, "timeupdate", this.updateDataAttr),
                  c.ready(k.bind(this, this.updateDataAttr));
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, "div", {
                    className: "vjs-tooltip-progress-bar vjs-slider-bar",
                    innerHTML:
                      '<div class="vjs-time-tooltip"></div>\n        <span class="vjs-control-text"><span>' +
                      this.localize("Progress") +
                      "</span>: 0%</span>",
                  });
                  return (
                    (this.tooltip = b.querySelector(".vjs-time-tooltip")), b
                  );
                }),
                (b.prototype.updateDataAttr = function () {
                  var a = this.player_.scrubbing()
                      ? this.player_.getCache().currentTime
                      : this.player_.currentTime(),
                    b = n["default"](a, this.player_.duration());
                  this.el_.setAttribute("data-current-time", b),
                    (this.tooltip.innerHTML = b);
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("TooltipProgressBar", o),
            (c["default"] = o),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/fn.js": 144,
          "../../utils/format-time.js": 145,
        },
      ],
      83: [
        function (a, b, c) {
          /**
           * @file custom-control-spacer.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./spacer.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = (function (a) {
              function b() {
                e(this, b), a.apply(this, arguments);
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-custom-control-spacer " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, {
                    className: this.buildCSSClass(),
                  });
                  // No-flex/table-cell mode requires there be some content
                  // in the cell to fill the remaining space of the table.
                  return (b.innerHTML = "&nbsp;"), b;
                }),
                b
              );
            })(h["default"]);
          j["default"].registerComponent("CustomControlSpacer", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "./spacer.js": 84 },
      ],
      84: [
        function (a, b, c) {
          /**
           * @file spacer.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../component.js"),
            h = d(g),
            i = (function (a) {
              function b() {
                e(this, b), a.apply(this, arguments);
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return "vjs-spacer " + a.prototype.buildCSSClass.call(this);
                }),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: this.buildCSSClass(),
                  });
                }),
                b
              );
            })(h["default"]);
          h["default"].registerComponent("Spacer", i),
            (c["default"] = i),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67 },
      ],
      85: [
        function (a, b, c) {
          /**
           * @file caption-settings-menu-item.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./text-track-menu-item.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b),
                  (d.track = {
                    kind: d.kind,
                    player: c,
                    label: d.kind + " settings",
                    selectable: !1,
                    default: !1,
                    mode: "disabled",
                  }),
                  // CaptionSettingsMenuItem has no concept of 'selected'
                  (d.selectable = !1),
                  a.call(this, c, d),
                  this.addClass("vjs-texttrack-settings"),
                  this.controlText(", opens " + d.kind + " settings dialog");
              }
              /**
               * Handle click on menu item
               *
               * @method handleClick
               */
              return (
                f(b, a),
                (b.prototype.handleClick = function () {
                  this.player().getChild("textTrackSettings").show(),
                    this.player().getChild("textTrackSettings").el_.focus();
                }),
                b
              );
            })(h["default"]);
          j["default"].registerComponent("CaptionSettingsMenuItem", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "./text-track-menu-item.js": 93 },
      ],
      86: [
        function (a, b, c) {
          /**
           * @file captions-button.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./text-track-button.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = a("./caption-settings-menu-item.js"),
            l = d(k),
            m = (function (a) {
              function b(c, d, f) {
                e(this, b),
                  a.call(this, c, d, f),
                  this.el_.setAttribute("aria-label", "Captions Menu");
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Update caption menu items
               *
               * @method update
               */
              /**
               * Create caption menu items
               *
               * @return {Array} Array of menu items
               * @method createItems
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-captions-button " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.update = function () {
                  var b = 2;
                  a.prototype.update.call(this),
                    // if native, then threshold is 1 because no settings button
                    this.player().tech_ &&
                      this.player().tech_.featuresNativeTextTracks &&
                      (b = 1),
                    this.items && this.items.length > b
                      ? this.show()
                      : this.hide();
                }),
                (b.prototype.createItems = function () {
                  var b = [];
                  return (
                    (this.player().tech_ &&
                      this.player().tech_.featuresNativeTextTracks) ||
                      b.push(
                        new l["default"](this.player_, { kind: this.kind_ })
                      ),
                    a.prototype.createItems.call(this, b)
                  );
                }),
                b
              );
            })(h["default"]);
          (m.prototype.kind_ = "captions"),
            (m.prototype.controlText_ = "Captions"),
            j["default"].registerComponent("CaptionsButton", m),
            (c["default"] = m),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "./caption-settings-menu-item.js": 85,
          "./text-track-button.js": 92,
        },
      ],
      87: [
        function (a, b, c) {
          /**
           * @file chapters-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./text-track-button.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("./text-track-menu-item.js"),
            m = e(l),
            n = a("./chapters-track-menu-item.js"),
            o = e(n),
            p = a("../../menu/menu.js"),
            q = e(p),
            r = a("../../utils/dom.js"),
            s = d(r),
            t = a("../../utils/fn.js"),
            u = (d(t), a("../../utils/to-title-case.js")),
            v = e(u),
            w = a("global/window"),
            x =
              (e(w),
              (function (a) {
                function b(c, d, e) {
                  f(this, b),
                    a.call(this, c, d, e),
                    this.el_.setAttribute("aria-label", "Chapters Menu");
                }
                /**
                 * Allow sub components to stack CSS class names
                 *
                 * @return {String} The constructed class name
                 * @method buildCSSClass
                 */
                /**
                 * Create a menu item for each text track
                 *
                 * @return {Array} Array of menu items
                 * @method createItems
                 */
                /**
                 * Create menu from chapter buttons
                 *
                 * @return {Menu} Menu of chapter buttons
                 * @method createMenu
                 */
                return (
                  g(b, a),
                  (b.prototype.buildCSSClass = function () {
                    return (
                      "vjs-chapters-button " +
                      a.prototype.buildCSSClass.call(this)
                    );
                  }),
                  (b.prototype.createItems = function () {
                    var a = [],
                      b = this.player_.textTracks();
                    if (!b) return a;
                    for (var c = 0; c < b.length; c++) {
                      var d = b[c];
                      d.kind === this.kind_ &&
                        a.push(new m["default"](this.player_, { track: d }));
                    }
                    return a;
                  }),
                  (b.prototype.createMenu = function () {
                    for (
                      var a = this,
                        b = this.player_.textTracks() || [],
                        c = void 0,
                        d = this.items || [],
                        e = b.length - 1;
                      e >= 0;
                      e--
                    ) {
                      // We will always choose the last track as our chaptersTrack
                      var f = b[e];
                      if (f.kind === this.kind_) {
                        c = f;
                        break;
                      }
                    }
                    var g = this.menu;
                    if (void 0 === g) {
                      g = new q["default"](this.player_);
                      var h = s.createEl("li", {
                        className: "vjs-menu-title",
                        innerHTML: v["default"](this.kind_),
                        tabIndex: -1,
                      });
                      g.children_.unshift(h), s.insertElFirst(h, g.contentEl());
                    }
                    // We will empty out the menu children each time because we want a
                    // fresh new menu child list each time
                    else
                      d.forEach(function (a) {
                        return g.removeChild(a);
                      }),
                        // Empty out the ChaptersButton menu items because we no longer need them
                        (d = []);
                    if (c && null == c.cues) {
                      c.mode = "hidden";
                      var i = this.player_
                        .remoteTextTrackEls()
                        .getTrackElementByTrack_(c);
                      i &&
                        i.addEventListener("load", function (b) {
                          return a.update();
                        });
                    }
                    if (c && c.cues && c.cues.length > 0)
                      for (
                        var j = c.cues, k = void 0, e = 0, l = j.length;
                        e < l;
                        e++
                      ) {
                        k = j[e];
                        var m = new o["default"](this.player_, {
                          track: c,
                          cue: k,
                        });
                        d.push(m), g.addChild(m);
                      }
                    // Assigning the value of items back to this.items for next iteration
                    return d.length > 0 && this.show(), (this.items = d), g;
                  }),
                  b
                );
              })(i["default"]));
          (x.prototype.kind_ = "chapters"),
            (x.prototype.controlText_ = "Chapters"),
            k["default"].registerComponent("ChaptersButton", x),
            (c["default"] = x),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../menu/menu.js": 111,
          "../../utils/dom.js": 142,
          "../../utils/fn.js": 144,
          "../../utils/to-title-case.js": 151,
          "./chapters-track-menu-item.js": 88,
          "./text-track-button.js": 92,
          "./text-track-menu-item.js": 93,
          "global/window": 2,
        },
      ],
      88: [
        function (a, b, c) {
          /**
           * @file chapters-track-menu-item.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../menu/menu-item.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = d(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b);
                var e = d.track,
                  g = d.cue,
                  h = c.currentTime();
                // Modify options for parent MenuItem class's init.
                (d.label = g.text),
                  (d.selected = g.startTime <= h && h < g.endTime),
                  a.call(this, c, d),
                  (this.track = e),
                  (this.cue = g),
                  e.addEventListener("cuechange", m.bind(this, this.update));
              }
              /**
               * Handle click on menu item
               *
               * @method handleClick
               */
              /**
               * Update chapter menu item
               *
               * @method update
               */
              return (
                g(b, a),
                (b.prototype.handleClick = function () {
                  a.prototype.handleClick.call(this),
                    this.player_.currentTime(this.cue.startTime),
                    this.update(this.cue.startTime);
                }),
                (b.prototype.update = function () {
                  var a = this.cue,
                    b = this.player_.currentTime();
                  // vjs.log(currentTime, cue.startTime);
                  this.selected(a.startTime <= b && b < a.endTime);
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("ChaptersTrackMenuItem", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../menu/menu-item.js": 110,
          "../../utils/fn.js": 144,
        },
      ],
      89: [
        function (a, b, c) {
          /**
           * @file descriptions-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./text-track-button.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = d(l),
            n = (function (a) {
              function b(c, d, e) {
                var g = this;
                f(this, b),
                  a.call(this, c, d, e),
                  this.el_.setAttribute("aria-label", "Descriptions Menu");
                var h = c.textTracks();
                h &&
                  !(function () {
                    var a = m.bind(g, g.handleTracksChange);
                    h.addEventListener("change", a),
                      g.on("dispose", function () {
                        h.removeEventListener("change", a);
                      });
                  })();
              }
              /**
               * Handle text track change
               *
               * @method handleTracksChange
               */
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              return (
                g(b, a),
                (b.prototype.handleTracksChange = function (a) {
                  // Check whether a track of a different kind is showing
                  for (
                    var b = this.player().textTracks(),
                      c = !1,
                      d = 0,
                      e = b.length;
                    d < e;
                    d++
                  ) {
                    var f = b[d];
                    if (f.kind !== this.kind_ && "showing" === f.mode) {
                      c = !0;
                      break;
                    }
                  }
                  // If another track is showing, disable this menu button
                  c ? this.disable() : this.enable();
                }),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-descriptions-button " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                b
              );
            })(i["default"]);
          (n.prototype.kind_ = "descriptions"),
            (n.prototype.controlText_ = "Descriptions"),
            k["default"].registerComponent("DescriptionsButton", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/fn.js": 144,
          "./text-track-button.js": 92,
        },
      ],
      90: [
        function (a, b, c) {
          /**
           * @file off-text-track-menu-item.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./text-track-menu-item.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d) {
                e(this, b),
                  // Create pseudo track info
                  // Requires options['kind']
                  (d.track = {
                    kind: d.kind,
                    player: c,
                    label: d.kind + " off",
                    default: !1,
                    mode: "disabled",
                  }),
                  // MenuItem is selectable
                  (d.selectable = !0),
                  a.call(this, c, d),
                  this.selected(!0);
              }
              /**
               * Handle text track change
               *
               * @param {Object} event Event object
               * @method handleTracksChange
               */
              return (
                f(b, a),
                (b.prototype.handleTracksChange = function (a) {
                  for (
                    var b = this.player().textTracks(),
                      c = !0,
                      d = 0,
                      e = b.length;
                    d < e;
                    d++
                  ) {
                    var f = b[d];
                    if (f.kind === this.track.kind && "showing" === f.mode) {
                      c = !1;
                      break;
                    }
                  }
                  this.selected(c);
                }),
                b
              );
            })(h["default"]);
          j["default"].registerComponent("OffTextTrackMenuItem", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "./text-track-menu-item.js": 93 },
      ],
      91: [
        function (a, b, c) {
          /**
           * @file subtitles-button.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./text-track-button.js"),
            h = d(g),
            i = a("../../component.js"),
            j = d(i),
            k = (function (a) {
              function b(c, d, f) {
                e(this, b),
                  a.call(this, c, d, f),
                  this.el_.setAttribute("aria-label", "Subtitles Menu");
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              return (
                f(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-subtitles-button " +
                    a.prototype.buildCSSClass.call(this)
                  );
                }),
                b
              );
            })(h["default"]);
          (k.prototype.kind_ = "subtitles"),
            (k.prototype.controlText_ = "Subtitles"),
            j["default"].registerComponent("SubtitlesButton", k),
            (c["default"] = k),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "./text-track-button.js": 92 },
      ],
      92: [
        function (a, b, c) {
          /**
           * @file text-track-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../track-button.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = (d(l), a("./text-track-menu-item.js")),
            n = e(m),
            o = a("./off-text-track-menu-item.js"),
            p = e(o),
            q = (function (a) {
              function b(c) {
                var d =
                  arguments.length <= 1 || void 0 === arguments[1]
                    ? {}
                    : arguments[1];
                f(this, b), (d.tracks = c.textTracks()), a.call(this, c, d);
              }
              /**
               * Create a menu item for each text track
               *
               * @return {Array} Array of menu items
               * @method createItems
               */
              return (
                g(b, a),
                (b.prototype.createItems = function () {
                  var a =
                    arguments.length <= 0 || void 0 === arguments[0]
                      ? []
                      : arguments[0];
                  // Add an OFF menu item to turn all tracks off
                  a.push(new p["default"](this.player_, { kind: this.kind_ }));
                  var b = this.player_.textTracks();
                  if (!b) return a;
                  for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    // only add tracks that are of the appropriate kind and have a label
                    d.kind === this.kind_ &&
                      a.push(
                        new n["default"](this.player_, {
                          // MenuItem is selectable
                          selectable: !0,
                          track: d,
                        })
                      );
                  }
                  return a;
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("TextTrackButton", q),
            (c["default"] = q),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/fn.js": 144,
          "../track-button.js": 98,
          "./off-text-track-menu-item.js": 90,
          "./text-track-menu-item.js": 93,
        },
      ],
      93: [
        function (a, b, c) {
          /**
           * @file text-track-menu-item.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../menu/menu-item.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = d(l),
            n = a("global/window"),
            o = e(n),
            p = a("global/document"),
            q = e(p),
            r = (function (a) {
              function b(c, d) {
                var e = this;
                f(this, b);
                var g = d.track,
                  h = c.textTracks();
                // Modify options for parent MenuItem class's init.
                (d.label = g.label || g.language || "Unknown"),
                  (d.selected = g["default"] || "showing" === g.mode),
                  a.call(this, c, d),
                  (this.track = g),
                  h &&
                    !(function () {
                      var a = m.bind(e, e.handleTracksChange);
                      h.addEventListener("change", a),
                        e.on("dispose", function () {
                          h.removeEventListener("change", a);
                        });
                    })(),
                  // iOS7 doesn't dispatch change events to TextTrackLists when an
                  // associated track's mode changes. Without something like
                  // Object.observe() (also not present on iOS7), it's not
                  // possible to detect changes to the mode attribute and polyfill
                  // the change event. As a poor substitute, we manually dispatch
                  // change events whenever the controls modify the mode.
                  h &&
                    void 0 === h.onchange &&
                    !(function () {
                      var a = void 0;
                      e.on(["tap", "click"], function () {
                        if ("object" != typeof o["default"].Event)
                          // Android 2.3 throws an Illegal Constructor error for window.Event
                          try {
                            a = new o["default"].Event("change");
                          } catch (b) {}
                        a ||
                          ((a = q["default"].createEvent("Event")),
                          a.initEvent("change", !0, !0)),
                          h.dispatchEvent(a);
                      });
                    })();
              }
              /**
               * Handle click on text track
               *
               * @method handleClick
               */
              /**
               * Handle text track change
               *
               * @method handleTracksChange
               */
              return (
                g(b, a),
                (b.prototype.handleClick = function (b) {
                  var c = this.track.kind,
                    d = this.player_.textTracks();
                  if ((a.prototype.handleClick.call(this, b), d))
                    for (var e = 0; e < d.length; e++) {
                      var f = d[e];
                      f.kind === c &&
                        (f === this.track
                          ? (f.mode = "showing")
                          : (f.mode = "disabled"));
                    }
                }),
                (b.prototype.handleTracksChange = function (a) {
                  this.selected("showing" === this.track.mode);
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("TextTrackMenuItem", r),
            (c["default"] = r),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../menu/menu-item.js": 110,
          "../../utils/fn.js": 144,
          "global/document": 1,
          "global/window": 2,
        },
      ],
      94: [
        function (a, b, c) {
          /**
           * @file current-time-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/dom.js"),
            k = d(j),
            l = a("../../utils/format-time.js"),
            m = e(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.on(c, "timeupdate", this.updateContent);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Update current time display
               *
               * @method updateContent
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, "div", {
                    className: "vjs-current-time vjs-time-control vjs-control",
                  });
                  return (
                    (this.contentEl_ = k.createEl(
                      "div",
                      {
                        className: "vjs-current-time-display",
                        // label the current time for screen reader users
                        innerHTML:
                          '<span class="vjs-control-text">Current Time </span>0:00',
                      },
                      {
                        // tell screen readers not to automatically read the time as it changes
                        "aria-live": "off",
                      }
                    )),
                    b.appendChild(this.contentEl_),
                    b
                  );
                }),
                (b.prototype.updateContent = function () {
                  // Allows for smooth scrubbing, when player can't keep up.
                  var a = this.player_.scrubbing()
                      ? this.player_.getCache().currentTime
                      : this.player_.currentTime(),
                    b = this.localize("Current Time"),
                    c = m["default"](a, this.player_.duration());
                  c !== this.formattedTime_ &&
                    ((this.formattedTime_ = c),
                    (this.contentEl_.innerHTML =
                      '<span class="vjs-control-text">' + b + "</span> " + c));
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("CurrentTimeDisplay", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/format-time.js": 145,
        },
      ],
      95: [
        function (a, b, c) {
          /**
           * @file duration-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/dom.js"),
            k = d(j),
            l = a("../../utils/format-time.js"),
            m = e(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.on(c, "durationchange", this.updateContent);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Update duration time display
               *
               * @method updateContent
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, "div", {
                    className: "vjs-duration vjs-time-control vjs-control",
                  });
                  return (
                    (this.contentEl_ = k.createEl(
                      "div",
                      {
                        className: "vjs-duration-display",
                        // label the duration time for screen reader users
                        innerHTML:
                          '<span class="vjs-control-text">' +
                          this.localize("Duration Time") +
                          "</span> 0:00",
                      },
                      {
                        // tell screen readers not to automatically read the time as it changes
                        "aria-live": "off",
                      }
                    )),
                    b.appendChild(this.contentEl_),
                    b
                  );
                }),
                (b.prototype.updateContent = function () {
                  var a = this.player_.duration();
                  if (a && this.duration_ !== a) {
                    this.duration_ = a;
                    var b = this.localize("Duration Time"),
                      c = m["default"](a);
                    this.contentEl_.innerHTML =
                      '<span class="vjs-control-text">' + b + "</span> " + c;
                  }
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("DurationDisplay", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/format-time.js": 145,
        },
      ],
      96: [
        function (a, b, c) {
          /**
           * @file remaining-time-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../component.js"),
            i = e(h),
            j = a("../../utils/dom.js"),
            k = d(j),
            l = a("../../utils/format-time.js"),
            m = e(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.on(c, "timeupdate", this.updateContent),
                  this.on(c, "durationchange", this.updateContent);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Update remaining time display
               *
               * @method updateContent
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = a.prototype.createEl.call(this, "div", {
                    className:
                      "vjs-remaining-time vjs-time-control vjs-control",
                  });
                  return (
                    (this.contentEl_ = k.createEl(
                      "div",
                      {
                        className: "vjs-remaining-time-display",
                        // label the remaining time for screen reader users
                        innerHTML:
                          '<span class="vjs-control-text">' +
                          this.localize("Remaining Time") +
                          "</span> -0:00",
                      },
                      {
                        // tell screen readers not to automatically read the time as it changes
                        "aria-live": "off",
                      }
                    )),
                    b.appendChild(this.contentEl_),
                    b
                  );
                }),
                (b.prototype.updateContent = function () {
                  if (this.player_.duration()) {
                    var a = this.localize("Remaining Time"),
                      b = m["default"](this.player_.remainingTime());
                    b !== this.formattedTime_ &&
                      ((this.formattedTime_ = b),
                      (this.contentEl_.innerHTML =
                        '<span class="vjs-control-text">' +
                        a +
                        "</span> -" +
                        b));
                  }
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("RemainingTimeDisplay", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../utils/dom.js": 142,
          "../../utils/format-time.js": 145,
        },
      ],
      97: [
        function (a, b, c) {
          /**
           * @file time-divider.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../component.js"),
            h = d(g),
            i = (function (a) {
              function b() {
                e(this, b), a.apply(this, arguments);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                f(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-time-control vjs-time-divider",
                    innerHTML: "<div><span>/</span></div>",
                  });
                }),
                b
              );
            })(h["default"]);
          h["default"].registerComponent("TimeDivider", i),
            (c["default"] = i),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67 },
      ],
      98: [
        function (a, b, c) {
          /**
           * @file track-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../menu/menu-button.js"),
            i = e(h),
            j = a("../component.js"),
            k = e(j),
            l = a("../utils/fn.js"),
            m = d(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b);
                var e = d.tracks;
                if (
                  (a.call(this, c, d), this.items.length <= 1 && this.hide(), e)
                ) {
                  var g = m.bind(this, this.update);
                  e.addEventListener("removetrack", g),
                    e.addEventListener("addtrack", g),
                    this.player_.on("dispose", function () {
                      e.removeEventListener("removetrack", g),
                        e.removeEventListener("addtrack", g);
                    });
                }
              }
              return g(b, a), b;
            })(i["default"]);
          k["default"].registerComponent("TrackButton", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "../menu/menu-button.js": 109,
          "../utils/fn.js": 144,
        },
      ],
      99: [
        function (a, b, c) {
          /**
           * @file volume-bar.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../../slider/slider.js"),
            i = e(h),
            j = a("../../component.js"),
            k = e(j),
            l = a("../../utils/fn.js"),
            m = d(l),
            n = a("./volume-level.js"),
            o =
              (e(n),
              (function (a) {
                function b(c, d) {
                  f(this, b),
                    a.call(this, c, d),
                    this.on(c, "volumechange", this.updateARIAAttributes),
                    c.ready(m.bind(this, this.updateARIAAttributes));
                }
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                /**
                 * Handle mouse move on volume bar
                 *
                 * @method handleMouseMove
                 */
                /**
                 * Get percent of volume level
                 *
                 * @retun {Number} Volume level percent
                 * @method getPercent
                 */
                /**
                 * Increase volume level for keyboard users
                 *
                 * @method stepForward
                 */
                /**
                 * Decrease volume level for keyboard users
                 *
                 * @method stepBack
                 */
                /**
                 * Update ARIA accessibility attributes
                 *
                 * @method updateARIAAttributes
                 */
                return (
                  g(b, a),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(
                      this,
                      "div",
                      { className: "vjs-volume-bar vjs-slider-bar" },
                      { "aria-label": "volume level" }
                    );
                  }),
                  (b.prototype.handleMouseMove = function (a) {
                    this.checkMuted(),
                      this.player_.volume(this.calculateDistance(a));
                  }),
                  (b.prototype.checkMuted = function () {
                    this.player_.muted() && this.player_.muted(!1);
                  }),
                  (b.prototype.getPercent = function () {
                    return this.player_.muted() ? 0 : this.player_.volume();
                  }),
                  (b.prototype.stepForward = function () {
                    this.checkMuted(),
                      this.player_.volume(this.player_.volume() + 0.1);
                  }),
                  (b.prototype.stepBack = function () {
                    this.checkMuted(),
                      this.player_.volume(this.player_.volume() - 0.1);
                  }),
                  (b.prototype.updateARIAAttributes = function () {
                    // Current value of volume bar as a percentage
                    var a = (100 * this.player_.volume()).toFixed(2);
                    this.el_.setAttribute("aria-valuenow", a),
                      this.el_.setAttribute("aria-valuetext", a + "%");
                  }),
                  b
                );
              })(i["default"]));
          (o.prototype.options_ = {
            children: ["volumeLevel"],
            barName: "volumeLevel",
          }),
            (o.prototype.playerEvent = "volumechange"),
            k["default"].registerComponent("VolumeBar", o),
            (c["default"] = o),
            (b.exports = c["default"]);
        },
        {
          "../../component.js": 67,
          "../../slider/slider.js": 119,
          "../../utils/fn.js": 144,
          "./volume-level.js": 101,
        },
      ],
      100: [
        function (a, b, c) {
          /**
           * @file volume-control.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../component.js"),
            h = d(g),
            i = a("./volume-bar.js"),
            j =
              (d(i),
              (function (a) {
                function b(c, d) {
                  e(this, b),
                    a.call(this, c, d),
                    // hide volume controls when they're not supported by the current tech
                    c.tech_ &&
                      c.tech_.featuresVolumeControl === !1 &&
                      this.addClass("vjs-hidden"),
                    this.on(c, "loadstart", function () {
                      c.tech_.featuresVolumeControl === !1
                        ? this.addClass("vjs-hidden")
                        : this.removeClass("vjs-hidden");
                    });
                }
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                return (
                  f(b, a),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(this, "div", {
                      className: "vjs-volume-control vjs-control",
                    });
                  }),
                  b
                );
              })(h["default"]));
          (j.prototype.options_ = { children: ["volumeBar"] }),
            h["default"].registerComponent("VolumeControl", j),
            (c["default"] = j),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67, "./volume-bar.js": 99 },
      ],
      101: [
        function (a, b, c) {
          /**
           * @file volume-level.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../../component.js"),
            h = d(g),
            i = (function (a) {
              function b() {
                e(this, b), a.apply(this, arguments);
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                f(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-volume-level",
                    innerHTML: '<span class="vjs-control-text"></span>',
                  });
                }),
                b
              );
            })(h["default"]);
          h["default"].registerComponent("VolumeLevel", i),
            (c["default"] = i),
            (b.exports = c["default"]);
        },
        { "../../component.js": 67 },
      ],
      102: [
        function (a, b, c) {
          /**
           * @file volume-menu-button.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../utils/fn.js"),
            i = e(h),
            j = a("../component.js"),
            k = d(j),
            l = a("../popup/popup.js"),
            m = d(l),
            n = a("../popup/popup-button.js"),
            o = d(n),
            p = a("./mute-toggle.js"),
            q = d(p),
            r = a("./volume-control/volume-bar.js"),
            s = d(r),
            t = (function (a) {
              function b(c) {
                // hide mute toggle if the current tech doesn't support volume control
                function d() {
                  c.tech_ && c.tech_.featuresVolumeControl === !1
                    ? this.addClass("vjs-hidden")
                    : this.removeClass("vjs-hidden");
                }
                var e =
                  arguments.length <= 1 || void 0 === arguments[1]
                    ? {}
                    : arguments[1];
                f(this, b),
                  // Default to inline
                  void 0 === e.inline && (e.inline = !0),
                  // If the vertical option isn't passed at all, default to true.
                  void 0 === e.vertical &&
                    // If an inline volumeMenuButton is used, we should default to using
                    // a horizontal slider for obvious reasons.
                    (e.inline ? (e.vertical = !1) : (e.vertical = !0)),
                  // The vertical option needs to be set on the volumeBar as well,
                  // since that will need to be passed along to the VolumeBar constructor
                  (e.volumeBar = e.volumeBar || {}),
                  (e.volumeBar.vertical = !!e.vertical),
                  a.call(this, c, e),
                  // Same listeners as MuteToggle
                  this.on(c, "volumechange", this.volumeUpdate),
                  this.on(c, "loadstart", this.volumeUpdate),
                  d.call(this),
                  this.on(c, "loadstart", d),
                  this.on(
                    this.volumeBar,
                    ["slideractive", "focus"],
                    function () {
                      this.addClass("vjs-slider-active");
                    }
                  ),
                  this.on(
                    this.volumeBar,
                    ["sliderinactive", "blur"],
                    function () {
                      this.removeClass("vjs-slider-active");
                    }
                  ),
                  this.on(this.volumeBar, ["focus"], function () {
                    this.addClass("vjs-lock-showing");
                  }),
                  this.on(this.volumeBar, ["blur"], function () {
                    this.removeClass("vjs-lock-showing");
                  });
              }
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {Popup} The volume popup button
               * @method createPopup
               */
              /**
               * Handle click on volume popup and calls super
               *
               * @method handleClick
               */
              return (
                g(b, a),
                (b.prototype.buildCSSClass = function () {
                  var b = "";
                  return (
                    (b = this.options_.vertical
                      ? "vjs-volume-menu-button-vertical"
                      : "vjs-volume-menu-button-horizontal"),
                    "vjs-volume-menu-button " +
                      a.prototype.buildCSSClass.call(this) +
                      " " +
                      b
                  );
                }),
                (b.prototype.createPopup = function () {
                  var a = new m["default"](this.player_, {
                      contentElType: "div",
                    }),
                    b = new s["default"](this.player_, this.options_.volumeBar);
                  return (
                    a.addChild(b),
                    (this.menuContent = a),
                    (this.volumeBar = b),
                    this.attachVolumeBarEvents(),
                    a
                  );
                }),
                (b.prototype.handleClick = function () {
                  q["default"].prototype.handleClick.call(this),
                    a.prototype.handleClick.call(this);
                }),
                (b.prototype.attachVolumeBarEvents = function () {
                  this.menuContent.on(
                    ["mousedown", "touchdown"],
                    i.bind(this, this.handleMouseDown)
                  );
                }),
                (b.prototype.handleMouseDown = function (a) {
                  this.on(
                    ["mousemove", "touchmove"],
                    i.bind(this.volumeBar, this.volumeBar.handleMouseMove)
                  ),
                    this.on(
                      this.el_.ownerDocument,
                      ["mouseup", "touchend"],
                      this.handleMouseUp
                    );
                }),
                (b.prototype.handleMouseUp = function (a) {
                  this.off(
                    ["mousemove", "touchmove"],
                    i.bind(this.volumeBar, this.volumeBar.handleMouseMove)
                  );
                }),
                b
              );
            })(o["default"]);
          (t.prototype.volumeUpdate = q["default"].prototype.update),
            (t.prototype.controlText_ = "Mute"),
            k["default"].registerComponent("VolumeMenuButton", t),
            (c["default"] = t),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "../popup/popup-button.js": 115,
          "../popup/popup.js": 116,
          "../utils/fn.js": 144,
          "./mute-toggle.js": 73,
          "./volume-control/volume-bar.js": 99,
        },
      ],
      103: [
        function (a, b, c) {
          /**
           * @file error-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./component"),
            i = e(h),
            j = a("./modal-dialog"),
            k = e(j),
            l = a("./utils/dom"),
            m = (d(l), a("./utils/merge-options")),
            n = e(m),
            o = (function (a) {
              /**
               * Constructor for error display modal.
               *
               * @param  {Player} player
               * @param  {Object} [options]
               */
              function b(c, d) {
                f(this, b), a.call(this, c, d), this.on(c, "error", this.open);
              }
              /**
               * Include the old class for backward-compatibility.
               *
               * This can be removed in 6.0.
               *
               * @method buildCSSClass
               * @deprecated
               * @return {String}
               */
              /**
               * Generates the modal content based on the player error.
               *
               * @return {String|Null}
               */
              return (
                g(b, a),
                (b.prototype.buildCSSClass = function () {
                  return (
                    "vjs-error-display " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.content = function () {
                  var a = this.player().error();
                  return a ? this.localize(a.message) : "";
                }),
                b
              );
            })(k["default"]);
          (o.prototype.options_ = n["default"](
            k["default"].prototype.options_,
            { fillAlways: !0, temporary: !1, uncloseable: !0 }
          )),
            i["default"].registerComponent("ErrorDisplay", o),
            (c["default"] = o),
            (b.exports = c["default"]);
        },
        {
          "./component": 67,
          "./modal-dialog": 112,
          "./utils/dom": 142,
          "./utils/merge-options": 148,
        },
      ],
      104: [
        function (a, b, c) {
          /**
           * @file event-target.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          c.__esModule = !0;
          var e = a("./utils/events.js"),
            f = d(e),
            g = function () {};
          (g.prototype.allowedEvents_ = {}),
            (g.prototype.on = function (a, b) {
              // Remove the addEventListener alias before calling Events.on
              // so we don't get into an infinite type loop
              var c = this.addEventListener;
              (this.addEventListener = function () {}),
                f.on(this, a, b),
                (this.addEventListener = c);
            }),
            (g.prototype.addEventListener = g.prototype.on),
            (g.prototype.off = function (a, b) {
              f.off(this, a, b);
            }),
            (g.prototype.removeEventListener = g.prototype.off),
            (g.prototype.one = function (a, b) {
              // Remove the addEventListener alias before calling Events.on
              // so we don't get into an infinite type loop
              var c = this.addEventListener;
              (this.addEventListener = function () {}),
                f.one(this, a, b),
                (this.addEventListener = c);
            }),
            (g.prototype.trigger = function (a) {
              var b = a.type || a;
              "string" == typeof a && (a = { type: b }),
                (a = f.fixEvent(a)),
                this.allowedEvents_[b] && this["on" + b] && this["on" + b](a),
                f.trigger(this, a);
            }),
            // The standard DOM EventTarget.dispatchEvent() is aliased to trigger()
            (g.prototype.dispatchEvent = g.prototype.trigger),
            (c["default"] = g),
            (b.exports = c["default"]);
        },
        { "./utils/events.js": 143 },
      ],
      105: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          var e = a("./utils/log"),
            f = d(e),
            g = function (a, b) {
              if ("function" != typeof b && null !== b)
                throw new TypeError(
                  "Super expression must either be null or a function, not " +
                    typeof b
                );
              (a.prototype = Object.create(b && b.prototype, {
                constructor: {
                  value: a,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              })),
                b &&
                  // node
                  (a.super_ = b);
            },
            h = function (a) {
              var b =
                  arguments.length <= 1 || void 0 === arguments[1]
                    ? {}
                    : arguments[1],
                c = function () {
                  a.apply(this, arguments);
                },
                d = {};
              "object" == typeof b
                ? ("function" == typeof b.init &&
                    (f["default"].warn(
                      "Constructor logic via init() is deprecated; please use constructor() instead."
                    ),
                    (b.constructor = b.init)),
                  b.constructor !== Object.prototype.constructor &&
                    (c = b.constructor),
                  (d = b))
                : "function" == typeof b && (c = b),
                g(c, a);
              // Extend subObj's prototype with functions and other properties from props
              for (var e in d) d.hasOwnProperty(e) && (c.prototype[e] = d[e]);
              return c;
            };
          (c["default"] = h), (b.exports = c["default"]);
        },
        { "./utils/log": 147 },
      ],
      106: [
        function (a, b, c) {
          /**
           * @file fullscreen-api.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          // determine the supported set of functions
          for (
            var e = a("global/document"),
              f = d(e),
              g = {},
              h = [
                // Spec: https://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html
                [
                  "requestFullscreen",
                  "exitFullscreen",
                  "fullscreenElement",
                  "fullscreenEnabled",
                  "fullscreenchange",
                  "fullscreenerror",
                ],
                // WebKit
                [
                  "webkitRequestFullscreen",
                  "webkitExitFullscreen",
                  "webkitFullscreenElement",
                  "webkitFullscreenEnabled",
                  "webkitfullscreenchange",
                  "webkitfullscreenerror",
                ],
                // Old WebKit (Safari 5.1)
                [
                  "webkitRequestFullScreen",
                  "webkitCancelFullScreen",
                  "webkitCurrentFullScreenElement",
                  "webkitCancelFullScreen",
                  "webkitfullscreenchange",
                  "webkitfullscreenerror",
                ],
                // Mozilla
                [
                  "mozRequestFullScreen",
                  "mozCancelFullScreen",
                  "mozFullScreenElement",
                  "mozFullScreenEnabled",
                  "mozfullscreenchange",
                  "mozfullscreenerror",
                ],
                // Microsoft
                [
                  "msRequestFullscreen",
                  "msExitFullscreen",
                  "msFullscreenElement",
                  "msFullscreenEnabled",
                  "MSFullscreenChange",
                  "MSFullscreenError",
                ],
              ],
              i = h[0],
              j = void 0,
              k = 0;
            k < h.length;
            k++
          )
            // check for exitFullscreen function
            if (h[k][1] in f["default"]) {
              j = h[k];
              break;
            }
          // map the browser API names to the spec API names
          if (j) for (var k = 0; k < j.length; k++) g[i[k]] = j[k];
          (c["default"] = g), (b.exports = c["default"]);
        },
        { "global/document": 1 },
      ],
      107: [
        function (a, b, c) {
          /**
           * @file loading-spinner.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("./component"),
            h = d(g),
            i = (function (a) {
              function b() {
                e(this, b), a.apply(this, arguments);
              }
              /**
               * Create the component's DOM element
               *
               * @method createEl
               */
              return (
                f(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: "vjs-loading-spinner",
                    dir: "ltr",
                  });
                }),
                b
              );
            })(h["default"]);
          h["default"].registerComponent("LoadingSpinner", i),
            (c["default"] = i),
            (b.exports = c["default"]);
        },
        { "./component": 67 },
      ],
      108: [
        function (a, b, c) {
          /**
           * @file media-error.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }

          function e(a) {
            return a instanceof e
              ? a
              : ("number" == typeof a
                  ? (this.code = a)
                  : "string" == typeof a
                  ? (this.message = a)
                  : "object" == typeof a &&
                    ("number" == typeof a.code && (this.code = a.code),
                    g["default"](this, a)),
                void (
                  this.message ||
                  (this.message = e.defaultMessages[this.code] || "")
                ));
          }
          c.__esModule = !0;
          var f = a("object.assign"),
            g = d(f);
          /*
           * The error code that refers two one of the defined
           * MediaError types
           *
           * @type {Number}
           */
          (e.prototype.code = 0),
            /*
             * An optional message to be shown with the error.
             * Message is not part of the HTML5 video spec
             * but allows for more informative custom errors.
             *
             * @type {String}
             */ (e.prototype.message = ""),
            /*
             * An optional status code that can be set by plugins
             * to allow even more detail about the error.
             * For example the HLS plugin might provide the specific
             * HTTP status code that was returned when the error
             * occurred, then allowing a custom error overlay
             * to display more information.
             *
             * @type {Array}
             */ (e.prototype.status = null),
            (e.errorTypes = [
              "MEDIA_ERR_CUSTOM", // = 0
              "MEDIA_ERR_ABORTED", // = 1
              "MEDIA_ERR_NETWORK", // = 2
              "MEDIA_ERR_DECODE", // = 3
              "MEDIA_ERR_SRC_NOT_SUPPORTED", // = 4
              "MEDIA_ERR_ENCRYPTED",
            ]),
            (e.defaultMessages = {
              1: "You aborted the media playback",
              2: "A network error caused the media download to fail part-way.",
              3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
              4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
              5: "The media is encrypted and we do not have the keys to decrypt it.",
            });
          // Add types as properties on MediaError
          // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;
          for (var h = 0; h < e.errorTypes.length; h++)
            (e[e.errorTypes[h]] = h),
              // values should be accessible on both the class and instance
              (e.prototype[e.errorTypes[h]] = h);
          (c["default"] = e), (b.exports = c["default"]);
        },
        { "object.assign": 45 },
      ],
      109: [
        function (a, b, c) {
          /**
           * @file menu-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../clickable-component.js"),
            i = e(h),
            j = a("../component.js"),
            k = e(j),
            l = a("./menu.js"),
            m = e(l),
            n = a("../utils/dom.js"),
            o = d(n),
            p = a("../utils/fn.js"),
            q = d(p),
            r = a("../utils/to-title-case.js"),
            s = e(r),
            t = (function (a) {
              function b(c) {
                var d =
                  arguments.length <= 1 || void 0 === arguments[1]
                    ? {}
                    : arguments[1];
                f(this, b),
                  a.call(this, c, d),
                  this.update(),
                  (this.enabled_ = !0),
                  this.el_.setAttribute("aria-haspopup", "true"),
                  this.el_.setAttribute("role", "menuitem"),
                  this.on("keydown", this.handleSubmenuKeyPress);
              }
              /**
               * Update menu
               *
               * @method update
               */
              /**
               * Create menu
               *
               * @return {Menu} The constructed menu
               * @method createMenu
               */
              /**
               * Create the list of menu items. Specific to each subclass.
               *
               * @method createItems
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Allow sub components to stack CSS class names
               *
               * @return {String} The constructed class name
               * @method buildCSSClass
               */
              /**
               * When you click the button it adds focus, which
               * will show the menu indefinitely.
               * So we'll remove focus when the mouse leaves the button.
               * Focus is needed for tab navigation.
               * Allow sub components to stack CSS class names
               *
               * @method handleClick
               */
              /**
               * Handle key press on menu
               *
               * @param {Object} event Key press event
               * @method handleKeyPress
               */
              /**
               * Handle key press on submenu
               *
               * @param {Object} event Key press event
               * @method handleSubmenuKeyPress
               */
              /**
               * Makes changes based on button pressed
               *
               * @method pressButton
               */
              /**
               * Makes changes based on button unpressed
               *
               * @method unpressButton
               */
              /**
               * Disable the menu button
               *
               * @return {Component}
               * @method disable
               */
              /**
               * Enable the menu button
               *
               * @return {Component}
               * @method disable
               */
              return (
                g(b, a),
                (b.prototype.update = function () {
                  var a = this.createMenu();
                  this.menu && this.removeChild(this.menu),
                    (this.menu = a),
                    this.addChild(a),
                    /**
                     * Track the state of the menu button
                     *
                     * @type {Boolean}
                     * @private
                     */
                    (this.buttonPressed_ = !1),
                    this.el_.setAttribute("aria-expanded", "false"),
                    this.items && 0 === this.items.length
                      ? this.hide()
                      : this.items && this.items.length > 1 && this.show();
                }),
                (b.prototype.createMenu = function () {
                  var a = new m["default"](this.player_);
                  // Add a title list item to the top
                  if (this.options_.title) {
                    var b = o.createEl("li", {
                      className: "vjs-menu-title",
                      innerHTML: s["default"](this.options_.title),
                      tabIndex: -1,
                    });
                    a.children_.unshift(b), o.insertElFirst(b, a.contentEl());
                  }
                  if (((this.items = this.createItems()), this.items))
                    // Add menu items to the menu
                    for (var c = 0; c < this.items.length; c++)
                      a.addItem(this.items[c]);
                  return a;
                }),
                (b.prototype.createItems = function () {}),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(this, "div", {
                    className: this.buildCSSClass(),
                  });
                }),
                (b.prototype.buildCSSClass = function () {
                  var b = "vjs-menu-button";
                  // If the inline option is passed, we want to use different styles altogether.
                  return (
                    (b += this.options_.inline === !0 ? "-inline" : "-popup"),
                    "vjs-menu-button " +
                      b +
                      " " +
                      a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleClick = function () {
                  this.one(
                    this.menu.contentEl(),
                    "mouseleave",
                    q.bind(this, function (a) {
                      this.unpressButton(), this.el_.blur();
                    })
                  ),
                    this.buttonPressed_
                      ? this.unpressButton()
                      : this.pressButton();
                }),
                (b.prototype.handleKeyPress = function (b) {
                  // Escape (27) key or Tab (9) key unpress the 'button'
                  27 === b.which || 9 === b.which
                    ? (this.buttonPressed_ && this.unpressButton(),
                      // Don't preventDefault for Tab key - we still want to lose focus
                      9 !== b.which && b.preventDefault())
                    : 38 === b.which || 40 === b.which
                    ? this.buttonPressed_ ||
                      (this.pressButton(), b.preventDefault())
                    : a.prototype.handleKeyPress.call(this, b);
                }),
                (b.prototype.handleSubmenuKeyPress = function (a) {
                  // Escape (27) key or Tab (9) key unpress the 'button'
                  (27 !== a.which && 9 !== a.which) ||
                    (this.buttonPressed_ && this.unpressButton(),
                    // Don't preventDefault for Tab key - we still want to lose focus
                    9 !== a.which && a.preventDefault());
                }),
                (b.prototype.pressButton = function () {
                  this.enabled_ &&
                    ((this.buttonPressed_ = !0),
                    this.menu.lockShowing(),
                    this.el_.setAttribute("aria-expanded", "true"),
                    this.menu.focus());
                }),
                (b.prototype.unpressButton = function () {
                  this.enabled_ &&
                    ((this.buttonPressed_ = !1),
                    this.menu.unlockShowing(),
                    this.el_.setAttribute("aria-expanded", "false"),
                    this.el_.focus());
                }),
                (b.prototype.disable = function () {
                  // Unpress, but don't force focus on this button
                  return (
                    (this.buttonPressed_ = !1),
                    this.menu.unlockShowing(),
                    this.el_.setAttribute("aria-expanded", "false"),
                    (this.enabled_ = !1),
                    a.prototype.disable.call(this)
                  );
                }),
                (b.prototype.enable = function () {
                  return (this.enabled_ = !0), a.prototype.enable.call(this);
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("MenuButton", t),
            (c["default"] = t),
            (b.exports = c["default"]);
        },
        {
          "../clickable-component.js": 65,
          "../component.js": 67,
          "../utils/dom.js": 142,
          "../utils/fn.js": 144,
          "../utils/to-title-case.js": 151,
          "./menu.js": 111,
        },
      ],
      110: [
        function (a, b, c) {
          /**
           * @file menu-item.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../clickable-component.js"),
            h = d(g),
            i = a("../component.js"),
            j = d(i),
            k = a("object.assign"),
            l = d(k),
            m = (function (a) {
              function b(c, d) {
                e(this, b),
                  a.call(this, c, d),
                  (this.selectable = d.selectable),
                  this.selected(d.selected),
                  this.selectable
                    ? // TODO: May need to be either menuitemcheckbox or menuitemradio,
                      //       and may need logical grouping of menu items.
                      this.el_.setAttribute("role", "menuitemcheckbox")
                    : this.el_.setAttribute("role", "menuitem");
              }
              /**
               * Create the component's DOM element
               *
               * @param {String=} type Desc
               * @param {Object=} props Desc
               * @return {Element}
               * @method createEl
               */
              /**
               * Handle a click on the menu item, and set it to selected
               *
               * @method handleClick
               */
              /**
               * Set this menu item as selected or not
               *
               * @param  {Boolean} selected
               * @method selected
               */
              return (
                f(b, a),
                (b.prototype.createEl = function (b, c, d) {
                  return a.prototype.createEl.call(
                    this,
                    "li",
                    l["default"](
                      {
                        className: "vjs-menu-item",
                        innerHTML: this.localize(this.options_.label),
                        tabIndex: -1,
                      },
                      c
                    ),
                    d
                  );
                }),
                (b.prototype.handleClick = function () {
                  this.selected(!0);
                }),
                (b.prototype.selected = function (a) {
                  this.selectable &&
                    (a
                      ? (this.addClass("vjs-selected"),
                        this.el_.setAttribute("aria-checked", "true"),
                        // aria-checked isn't fully supported by browsers/screen readers,
                        // so indicate selected state to screen reader in the control text.
                        this.controlText(", selected"))
                      : (this.removeClass("vjs-selected"),
                        this.el_.setAttribute("aria-checked", "false"),
                        // Indicate un-selected state to screen reader
                        // Note that a space clears out the selected state text
                        this.controlText(" ")));
                }),
                b
              );
            })(h["default"]);
          j["default"].registerComponent("MenuItem", m),
            (c["default"] = m),
            (b.exports = c["default"]);
        },
        {
          "../clickable-component.js": 65,
          "../component.js": 67,
          "object.assign": 45,
        },
      ],
      111: [
        function (a, b, c) {
          /**
           * @file menu.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../component.js"),
            i = e(h),
            j = a("../utils/dom.js"),
            k = d(j),
            l = a("../utils/fn.js"),
            m = d(l),
            n = a("../utils/events.js"),
            o = d(n),
            p = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  (this.focusedChild_ = -1),
                  this.on("keydown", this.handleKeyPress);
              }
              /**
               * Add a menu item to the menu
               *
               * @param {Object|String} component Component or component type to add
               * @method addItem
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Handle key press for menu
               *
               * @param {Object} event Event object
               * @method handleKeyPress
               */
              /**
               * Move to next (lower) menu item for keyboard users
               *
               * @method stepForward
               */
              /**
               * Move to previous (higher) menu item for keyboard users
               *
               * @method stepBack
               */
              /**
               * Set focus on a menu item in the menu
               *
               * @param {Object|String} item Index of child item set focus on
               * @method focus
               */
              return (
                g(b, a),
                (b.prototype.addItem = function (a) {
                  this.addChild(a),
                    a.on(
                      "click",
                      m.bind(this, function () {
                        this.unlockShowing();
                      })
                    );
                }),
                (b.prototype.createEl = function () {
                  var b = this.options_.contentElType || "ul";
                  (this.contentEl_ = k.createEl(b, {
                    className: "vjs-menu-content",
                  })),
                    this.contentEl_.setAttribute("role", "menu");
                  var c = a.prototype.createEl.call(this, "div", {
                    append: this.contentEl_,
                    className: "vjs-menu",
                  });
                  // Prevent clicks from bubbling up. Needed for Menu Buttons,
                  // where a click on the parent is significant
                  return (
                    c.setAttribute("role", "presentation"),
                    c.appendChild(this.contentEl_),
                    o.on(c, "click", function (a) {
                      a.preventDefault(), a.stopImmediatePropagation();
                    }),
                    c
                  );
                }),
                (b.prototype.handleKeyPress = function (a) {
                  37 === a.which || 40 === a.which
                    ? // Left and Down Arrows
                      (a.preventDefault(), this.stepForward())
                    : (38 !== a.which && 39 !== a.which) ||
                      // Up and Right Arrows
                      (a.preventDefault(), this.stepBack());
                }),
                (b.prototype.stepForward = function () {
                  var a = 0;
                  void 0 !== this.focusedChild_ && (a = this.focusedChild_ + 1),
                    this.focus(a);
                }),
                (b.prototype.stepBack = function () {
                  var a = 0;
                  void 0 !== this.focusedChild_ && (a = this.focusedChild_ - 1),
                    this.focus(a);
                }),
                (b.prototype.focus = function () {
                  var a =
                      arguments.length <= 0 || void 0 === arguments[0]
                        ? 0
                        : arguments[0],
                    b = this.children().slice(),
                    c =
                      b.length &&
                      b[0].className &&
                      /vjs-menu-title/.test(b[0].className);
                  c && b.shift(),
                    b.length > 0 &&
                      (a < 0 ? (a = 0) : a >= b.length && (a = b.length - 1),
                      (this.focusedChild_ = a),
                      b[a].el_.focus());
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("Menu", p),
            (c["default"] = p),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "../utils/dom.js": 142,
          "../utils/events.js": 143,
          "../utils/fn.js": 144,
        },
      ],
      112: [
        function (a, b, c) {
          /**
           * @file modal-dialog.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./utils/dom"),
            i = e(h),
            j = a("./utils/fn"),
            k = e(j),
            l = a("./utils/log"),
            m = (d(l), a("./component")),
            n = d(m),
            o = a("./close-button"),
            p = (d(o), "vjs-modal-dialog"),
            q = 27,
            r = (function (a) {
              /**
               * Constructor for modals.
               *
               * @param  {Player} player
               * @param  {Object} [options]
               * @param  {Mixed} [options.content=undefined]
               *         Provide customized content for this modal.
               *
               * @param  {String} [options.description]
               *         A text description for the modal, primarily for accessibility.
               *
               * @param  {Boolean} [options.fillAlways=false]
               *         Normally, modals are automatically filled only the first time
               *         they open. This tells the modal to refresh its content
               *         every time it opens.
               *
               * @param  {String} [options.label]
               *         A text label for the modal, primarily for accessibility.
               *
               * @param  {Boolean} [options.temporary=true]
               *         If `true`, the modal can only be opened once; it will be
               *         disposed as soon as it's closed.
               *
               * @param  {Boolean} [options.uncloseable=false]
               *         If `true`, the user will not be able to close the modal
               *         through the UI in the normal ways. Programmatic closing is
               *         still possible.
               *
               */
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  (this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = !1),
                  this.closeable(!this.options_.uncloseable),
                  this.content(this.options_.content),
                  // Make sure the contentEl is defined AFTER any children are initialized
                  // because we only want the contents of the modal in the contentEl
                  // (not the UI elements like the close button).
                  (this.contentEl_ = i.createEl(
                    "div",
                    { className: p + "-content" },
                    { role: "document" }
                  )),
                  (this.descEl_ = i.createEl("p", {
                    className: p + "-description vjs-offscreen",
                    id: this.el().getAttribute("aria-describedby"),
                  })),
                  i.textContent(this.descEl_, this.description()),
                  this.el_.appendChild(this.descEl_),
                  this.el_.appendChild(this.contentEl_);
              }
              /*
               * Modal dialog default options.
               *
               * @type {Object}
               * @private
               */
              /**
               * Create the modal's DOM element
               *
               * @method createEl
               * @return {Element}
               */
              /**
               * Build the modal's CSS class.
               *
               * @method buildCSSClass
               * @return {String}
               */
              /**
               * Handles key presses on the document, looking for ESC, which closes
               * the modal.
               *
               * @method handleKeyPress
               * @param  {Event} e
               */
              /**
               * Returns the label string for this modal. Primarily used for accessibility.
               *
               * @return {String}
               */
              /**
               * Returns the description string for this modal. Primarily used for
               * accessibility.
               *
               * @return {String}
               */
              /**
               * Opens the modal.
               *
               * @method open
               * @return {ModalDialog}
               */
              /**
               * Whether or not the modal is opened currently.
               *
               * @method opened
               * @param  {Boolean} [value]
               *         If given, it will open (`true`) or close (`false`) the modal.
               *
               * @return {Boolean}
               */
              /**
               * Closes the modal.
               *
               * @method close
               * @return {ModalDialog}
               */
              /**
               * Whether or not the modal is closeable via the UI.
               *
               * @method closeable
               * @param  {Boolean} [value]
               *         If given as a Boolean, it will set the `closeable` option.
               *
               * @return {Boolean}
               */
              /**
               * Fill the modal's content element with the modal's "content" option.
               *
               * The content element will be emptied before this change takes place.
               *
               * @method fill
               * @return {ModalDialog}
               */
              /**
               * Fill the modal's content element with arbitrary content.
               *
               * The content element will be emptied before this change takes place.
               *
               * @method fillWith
               * @param  {Mixed} [content]
               *         The same rules apply to this as apply to the `content` option.
               *
               * @return {ModalDialog}
               */
              /**
               * Empties the content element.
               *
               * This happens automatically anytime the modal is filled.
               *
               * @method empty
               * @return {ModalDialog}
               */
              /**
               * Gets or sets the modal content, which gets normalized before being
               * rendered into the DOM.
               *
               * This does not update the DOM or fill the modal, but it is called during
               * that process.
               *
               * @method content
               * @param  {Mixed} [value]
               *         If defined, sets the internal content value to be used on the
               *         next call(s) to `fill`. This value is normalized before being
               *         inserted. To "clear" the internal content value, pass `null`.
               *
               * @return {Mixed}
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(
                    this,
                    "div",
                    { className: this.buildCSSClass(), tabIndex: -1 },
                    {
                      "aria-describedby": this.id() + "_description",
                      "aria-hidden": "true",
                      "aria-label": this.label(),
                      role: "dialog",
                    }
                  );
                }),
                (b.prototype.buildCSSClass = function () {
                  return (
                    p + " vjs-hidden " + a.prototype.buildCSSClass.call(this)
                  );
                }),
                (b.prototype.handleKeyPress = function (a) {
                  a.which === q && this.closeable() && this.close();
                }),
                (b.prototype.label = function () {
                  return this.options_.label || this.localize("Modal Window");
                }),
                (b.prototype.description = function () {
                  var a =
                    this.options_.description ||
                    this.localize("This is a modal window.");
                  // Append a universal closeability message if the modal is closeable.
                  return (
                    this.closeable() &&
                      (a +=
                        " " +
                        this.localize(
                          "This modal can be closed by pressing the Escape key or activating the close button."
                        )),
                    a
                  );
                }),
                (b.prototype.open = function () {
                  if (!this.opened_) {
                    var a = this.player();
                    this.trigger("beforemodalopen"),
                      (this.opened_ = !0),
                      // Fill content if the modal has never opened before and
                      // never been filled.
                      (this.options_.fillAlways ||
                        (!this.hasBeenOpened_ && !this.hasBeenFilled_)) &&
                        this.fill(),
                      // If the player was playing, pause it and take note of its previously
                      // playing state.
                      (this.wasPlaying_ = !a.paused()),
                      this.wasPlaying_ && a.pause(),
                      this.closeable() &&
                        this.on(
                          this.el_.ownerDocument,
                          "keydown",
                          k.bind(this, this.handleKeyPress)
                        ),
                      a.controls(!1),
                      this.show(),
                      this.el().setAttribute("aria-hidden", "false"),
                      this.trigger("modalopen"),
                      (this.hasBeenOpened_ = !0);
                  }
                  return this;
                }),
                (b.prototype.opened = function (a) {
                  return (
                    "boolean" == typeof a && this[a ? "open" : "close"](),
                    this.opened_
                  );
                }),
                (b.prototype.close = function () {
                  if (this.opened_) {
                    var a = this.player();
                    this.trigger("beforemodalclose"),
                      (this.opened_ = !1),
                      this.wasPlaying_ && a.play(),
                      this.closeable() &&
                        this.off(
                          this.el_.ownerDocument,
                          "keydown",
                          k.bind(this, this.handleKeyPress)
                        ),
                      a.controls(!0),
                      this.hide(),
                      this.el().setAttribute("aria-hidden", "true"),
                      this.trigger("modalclose"),
                      this.options_.temporary && this.dispose();
                  }
                  return this;
                }),
                (b.prototype.closeable = function c(a) {
                  if ("boolean" == typeof a) {
                    var c = (this.closeable_ = !!a),
                      b = this.getChild("closeButton");
                    // If this is being made closeable and has no close button, add one.
                    if (c && !b) {
                      // The close button should be a child of the modal - not its
                      // content element, so temporarily change the content element.
                      var d = this.contentEl_;
                      (this.contentEl_ = this.el_),
                        (b = this.addChild("closeButton", {
                          controlText: "Close Modal Dialog",
                        })),
                        (this.contentEl_ = d),
                        this.on(b, "close", this.close);
                    }
                    // If this is being made uncloseable and has a close button, remove it.
                    !c &&
                      b &&
                      (this.off(b, "close", this.close),
                      this.removeChild(b),
                      b.dispose());
                  }
                  return this.closeable_;
                }),
                (b.prototype.fill = function () {
                  return this.fillWith(this.content());
                }),
                (b.prototype.fillWith = function (a) {
                  var b = this.contentEl(),
                    c = b.parentNode,
                    d = b.nextSibling;
                  // Detach the content element from the DOM before performing
                  // manipulation to avoid modifying the live DOM multiple times.
                  // Re-inject the re-filled content element.
                  return (
                    this.trigger("beforemodalfill"),
                    (this.hasBeenFilled_ = !0),
                    c.removeChild(b),
                    this.empty(),
                    i.insertContent(b, a),
                    this.trigger("modalfill"),
                    d ? c.insertBefore(b, d) : c.appendChild(b),
                    this
                  );
                }),
                (b.prototype.empty = function () {
                  return (
                    this.trigger("beforemodalempty"),
                    i.emptyEl(this.contentEl()),
                    this.trigger("modalempty"),
                    this
                  );
                }),
                (b.prototype.content = function (a) {
                  return (
                    "undefined" != typeof a && (this.content_ = a),
                    this.content_
                  );
                }),
                b
              );
            })(n["default"]);
          (r.prototype.options_ = { temporary: !0 }),
            n["default"].registerComponent("ModalDialog", r),
            (c["default"] = r),
            (b.exports = c["default"]);
        },
        {
          "./close-button": 66,
          "./component": 67,
          "./utils/dom": 142,
          "./utils/fn": 144,
          "./utils/log": 147,
        },
      ],
      113: [
        function (a, b, c) {
          /**
           * @file player.js
           */
          // Subclasses Component
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./component.js"),
            i = e(h),
            j = a("global/document"),
            k = e(j),
            l = a("global/window"),
            m = e(l),
            n = a("./utils/events.js"),
            o = d(n),
            p = a("./utils/dom.js"),
            q = d(p),
            r = a("./utils/fn.js"),
            s = d(r),
            t = a("./utils/guid.js"),
            u = d(t),
            v = a("./utils/browser.js"),
            w = d(v),
            x = a("./utils/log.js"),
            y = e(x),
            z = a("./utils/to-title-case.js"),
            A = e(z),
            B = a("./utils/time-ranges.js"),
            C = a("./utils/buffer.js"),
            D = a("./utils/stylesheet.js"),
            E = d(D),
            F = a("./fullscreen-api.js"),
            G = e(F),
            H = a("./media-error.js"),
            I = e(H),
            J = a("safe-json-parse/tuple"),
            K = e(J),
            L = a("object.assign"),
            M = e(L),
            N = a("./utils/merge-options.js"),
            O = e(N),
            P = a("./tracks/text-track-list-converter.js"),
            Q = e(P),
            R = a("./tracks/audio-track-list.js"),
            S = e(R),
            T = a("./tracks/video-track-list.js"),
            U = e(T),
            V = a("./tech/loader.js"),
            W = (e(V), a("./poster-image.js")),
            X = (e(W), a("./tracks/text-track-display.js")),
            Y = (e(X), a("./loading-spinner.js")),
            Z = (e(Y), a("./big-play-button.js")),
            $ = (e(Z), a("./control-bar/control-bar.js")),
            _ = (e($), a("./error-display.js")),
            aa = (e(_), a("./tracks/text-track-settings.js")),
            ba = (e(aa), a("./modal-dialog")),
            ca = e(ba),
            da = a("./tech/tech.js"),
            ea = e(da),
            fa = a("./tech/html5.js"),
            ga =
              (e(fa),
              (function (a) {
                /**
                 * player's constructor function
                 *
                 * @constructs
                 * @method init
                 * @param {Element} tag        The original video tag used for configuring options
                 * @param {Object=} options    Player options
                 * @param {Function=} ready    Ready callback function
                 */
                function b(c, d, e) {
                  var g = this;
                  // If language is not set, get the closest lang attribute
                  if (
                    (f(this, b),
                    // Make sure tag ID exists
                    (c.id = c.id || "vjs_video_" + u.newGUID()),
                    // Set Options
                    // The options argument overrides options set in the video tag
                    // which overrides globally set options.
                    // This latter part coincides with the load order
                    // (tag must exist before Player)
                    (d = M["default"](b.getTagSettings(c), d)),
                    // Delay the initialization of children because we need to set up
                    // player properties first, and can't use `this` before `super()`
                    (d.initChildren = !1),
                    // Same with creating the element
                    (d.createEl = !1),
                    // we don't want the player to report touch activity on itself
                    // see enableTouchActivity in Component
                    (d.reportTouchActivity = !1),
                    !d.language)
                  )
                    if ("function" == typeof c.closest) {
                      var h = c.closest("[lang]");
                      h && (d.language = h.getAttribute("lang"));
                    } else
                      for (var i = c; i && 1 === i.nodeType; ) {
                        if (q.getElAttributes(i).hasOwnProperty("lang")) {
                          d.language = i.getAttribute("lang");
                          break;
                        }
                        i = i.parentNode;
                      }
                  // if the global option object was accidentally blown away by
                  // someone, bail early with an informative error
                  if (
                    // Run base component initializing with new options
                    (a.call(this, null, d, e),
                    !this.options_ ||
                      !this.options_.techOrder ||
                      !this.options_.techOrder.length)
                  )
                    throw new Error(
                      "No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?"
                    );
                  (this.tag = c), // Store the original tag used to set options
                    // Store the tag attributes used to restore html5 element
                    (this.tagAttributes = c && q.getElAttributes(c)),
                    // Update current language
                    this.language(this.options_.language),
                    // Update Supported Languages
                    d.languages
                      ? !(function () {
                          // Normalise player option languages to lowercase
                          var a = {};
                          Object.getOwnPropertyNames(d.languages).forEach(
                            function (b) {
                              a[b.toLowerCase()] = d.languages[b];
                            }
                          ),
                            (g.languages_ = a);
                        })()
                      : (this.languages_ = b.prototype.options_.languages),
                    // Cache for video property values.
                    (this.cache_ = {}),
                    // Set poster
                    (this.poster_ = d.poster || ""),
                    // Set controls
                    (this.controls_ = !!d.controls),
                    // Original tag settings stored in options
                    // now remove immediately so native controls don't flash.
                    // May be turned back on by HTML5 tech if nativeControlsForTouch is true
                    (c.controls = !1),
                    /*
                     * Store the internal state of scrubbing
                     *
                     * @private
                     * @return {Boolean} True if the user is scrubbing
                     */ (this.scrubbing_ = !1),
                    (this.el_ = this.createEl());
                  // We also want to pass the original player options to each component and plugin
                  // as well so they don't need to reach back into the player for options later.
                  // We also need to do another copy of this.options_ so we don't end up with
                  // an infinite loop.
                  var j = O["default"](this.options_);
                  // Load plugins
                  d.plugins &&
                    !(function () {
                      var a = d.plugins;
                      Object.getOwnPropertyNames(a).forEach(function (b) {
                        "function" == typeof this[b]
                          ? this[b](a[b])
                          : y["default"].error("Unable to find plugin:", b);
                      }, g);
                    })(),
                    (this.options_.playerOptions = j),
                    this.initChildren(),
                    // Set isAudio based on whether or not an audio tag was used
                    this.isAudio("audio" === c.nodeName.toLowerCase()),
                    // Update controls className. Can't do this when the controls are initially
                    // set because the element doesn't exist yet.
                    this.controls()
                      ? this.addClass("vjs-controls-enabled")
                      : this.addClass("vjs-controls-disabled"),
                    // Set ARIA label and region role depending on player type
                    this.el_.setAttribute("role", "region"),
                    this.isAudio();
                  // TODO: Make this smarter. Toggle user state between touching/mousing
                  // using events, since devices can have both touch and mouse events.
                  // if (browser.TOUCH_ENABLED) {
                  //   this.addClass('vjs-touch-enabled');
                  // }
                  // iOS Safari has broken hover handling
                  w.IS_IOS || this.addClass("vjs-workinghover"),
                    // Make player easily findable by ID
                    (b.players[this.id_] = this),
                    // When the player is first initialized, trigger activity so components
                    // like the control bar show themselves if needed
                    this.userActive(!0),
                    this.reportUserActivity(),
                    this.listenForUserActivity_(),
                    this.on("fullscreenchange", this.handleFullscreenChange_),
                    this.on("stageclick", this.handleStageClick_);
                }
                /**
                 * ```js
                 *     myPlayer.dispose();
                 * ```
                 * This is especially helpful if you are dynamically adding and removing videos
                 * to/from the DOM.
                 *
                 * @method dispose
                 */
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                /**
                 * Get/set player width
                 *
                 * @param {Number=} value Value for width
                 * @return {Number} Width when getting
                 * @method width
                 */
                /**
                 * Get/set player height
                 *
                 * @param {Number=} value Value for height
                 * @return {Number} Height when getting
                 * @method height
                 */
                /**
                 * Get/set dimension for player
                 *
                 * @param {String} dimension Either width or height
                 * @param {Number=} value Value for dimension
                 * @return {Component}
                 * @method dimension
                 */
                /**
                 * Add/remove the vjs-fluid class
                 *
                 * @param {Boolean} bool Value of true adds the class, value of false removes the class
                 * @method fluid
                 */
                /**
                 * Get/Set the aspect ratio
                 *
                 * @param {String=} ratio Aspect ratio for player
                 * @return aspectRatio
                 * @method aspectRatio
                 */
                /**
                 * Update styles of the player element (height, width and aspect ratio)
                 *
                 * @method updateStyleEl_
                 */
                /**
                 * Load the Media Playback Technology (tech)
                 * Load/Create an instance of playback technology including element and API methods
                 * And append playback element in player div.
                 *
                 * @param {String} techName Name of the playback technology
                 * @param {String} source Video source
                 * @method loadTech_
                 * @private
                 */
                /**
                 * Unload playback technology
                 *
                 * @method unloadTech_
                 * @private
                 */
                /**
                 * Return a reference to the current tech.
                 * It will only return a reference to the tech if given an object with the
                 * `IWillNotUseThisInPlugins` property on it. This is try and prevent misuse
                 * of techs by plugins.
                 *
                 * @param {Object}
                 * @return {Object} The Tech
                 * @method tech
                 */
                /**
                 * @private
                 * @method addTechControlsListeners_
                 */
                /**
                 * Remove the listeners used for click and tap controls. This is needed for
                 * toggling to controls disabled, where a tap/touch should do nothing.
                 *
                 * @method removeTechControlsListeners_
                 * @private
                 */
                /**
                 * Player waits for the tech to be ready
                 *
                 * @method handleTechReady_
                 * @private
                 */
                /**
                 * Fired when the user agent begins looking for media data
                 *
                 * @private
                 * @method handleTechLoadStart_
                 */
                /**
                 * Add/remove the vjs-has-started class
                 *
                 * @param {Boolean} hasStarted The value of true adds the class the value of false remove the class
                 * @return {Boolean} Boolean value if has started
                 * @private
                 * @method hasStarted
                 */
                /**
                 * Fired whenever the media begins or resumes playback
                 *
                 * @private
                 * @method handleTechPlay_
                 */
                /**
                 * Fired whenever the media begins waiting
                 *
                 * @private
                 * @method handleTechWaiting_
                 */
                /**
                 * A handler for events that signal that waiting has ended
                 * which is not consistent between browsers. See #1351
                 *
                 * @private
                 * @method handleTechCanPlay_
                 */
                /**
                 * A handler for events that signal that waiting has ended
                 * which is not consistent between browsers. See #1351
                 *
                 * @private
                 * @method handleTechCanPlayThrough_
                 */
                /**
                 * A handler for events that signal that waiting has ended
                 * which is not consistent between browsers. See #1351
                 *
                 * @private
                 * @method handleTechPlaying_
                 */
                /**
                 * Fired whenever the player is jumping to a new time
                 *
                 * @private
                 * @method handleTechSeeking_
                 */
                /**
                 * Fired when the player has finished jumping to a new time
                 *
                 * @private
                 * @method handleTechSeeked_
                 */
                /**
                 *
                 * @private
                 * @method handleTechFirstPlay_
                 */
                /**
                 * Fired whenever the media has been paused
                 *
                 * @private
                 * @method handleTechPause_
                 */
                /**
                 * Fired while the user agent is downloading media data
                 *
                 * @private
                 * @method handleTechProgress_
                 */
                /**
                 * Fired when the end of the media resource is reached (currentTime == duration)
                 *
                 * @private
                 * @method handleTechEnded_
                 */
                /**
                 * Fired when the duration of the media resource is first known or changed
                 *
                 * @private
                 * @method handleTechDurationChange_
                 */
                /**
                 * Handle a click on the media element to play/pause
                 *
                 * @param {Object=} event Event object
                 * @private
                 * @method handleTechClick_
                 */
                /**
                 * Handle a tap on the media element. It will toggle the user
                 * activity state, which hides and shows the controls.
                 *
                 * @private
                 * @method handleTechTap_
                 */
                /**
                 * Handle touch to start
                 *
                 * @private
                 * @method handleTechTouchStart_
                 */
                /**
                 * Handle touch to move
                 *
                 * @private
                 * @method handleTechTouchMove_
                 */
                /**
                 * Handle touch to end
                 *
                 * @private
                 * @method handleTechTouchEnd_
                 */
                /**
                 * Fired when the player switches in or out of fullscreen mode
                 *
                 * @private
                 * @method handleFullscreenChange_
                 */
                /**
                 * native click events on the SWF aren't triggered on IE11, Win8.1RT
                 * use stageclick events triggered from inside the SWF instead
                 *
                 * @private
                 * @method handleStageClick_
                 */
                /**
                 * Handle Tech Fullscreen Change
                 *
                 * @private
                 * @method handleTechFullscreenChange_
                 */
                /**
                 * Fires when an error occurred during the loading of an audio/video
                 *
                 * @private
                 * @method handleTechError_
                 */
                /**
                 * Fires when the browser is intentionally not getting media data
                 *
                 * @private
                 * @method handleTechSuspend_
                 */
                /**
                 *
                 * @private
                 * @method handleTechAbort_
                 */
                /**
                 * Fires when the current playlist is empty
                 *
                 * @private
                 * @method handleTechEmptied_
                 */
                /**
                 * Fires when the browser is trying to get media data, but data is not available
                 *
                 * @private
                 * @method handleTechStalled_
                 */
                /**
                 * Fires when the browser has loaded meta data for the audio/video
                 *
                 * @private
                 * @method handleTechLoadedMetaData_
                 */
                /**
                 * Fires when the browser has loaded the current frame of the audio/video
                 *
                 * @private
                 * @method handleTechLoadedData_
                 */
                /**
                 * Fires when the current playback position has changed
                 *
                 * @private
                 * @method handleTechTimeUpdate_
                 */
                /**
                 * Fires when the playing speed of the audio/video is changed
                 *
                 * @private
                 * @method handleTechRateChange_
                 */
                /**
                 * Fires when the volume has been changed
                 *
                 * @private
                 * @method handleTechVolumeChange_
                 */
                /**
                 * Fires when the text track has been changed
                 *
                 * @private
                 * @method handleTechTextTrackChange_
                 */
                /**
                 * Get object for cached values.
                 *
                 * @return {Object}
                 * @method getCache
                 */
                /**
                 * Pass values to the playback tech
                 *
                 * @param {String=} method Method
                 * @param {Object=} arg Argument
                 * @private
                 * @method techCall_
                 */
                /**
                 * Get calls can't wait for the tech, and sometimes don't need to.
                 *
                 * @param {String} method Tech method
                 * @return {Method}
                 * @private
                 * @method techGet_
                 */
                /**
                 * start media playback
                 * ```js
                 *     myPlayer.play();
                 * ```
                 *
                 * @return {Player} self
                 * @method play
                 */
                /**
                 * Pause the video playback
                 * ```js
                 *     myPlayer.pause();
                 * ```
                 *
                 * @return {Player} self
                 * @method pause
                 */
                /**
                 * Check if the player is paused
                 * ```js
                 *     var isPaused = myPlayer.paused();
                 *     var isPlaying = !myPlayer.paused();
                 * ```
                 *
                 * @return {Boolean} false if the media is currently playing, or true otherwise
                 * @method paused
                 */
                /**
                 * Returns whether or not the user is "scrubbing". Scrubbing is when the user
                 * has clicked the progress bar handle and is dragging it along the progress bar.
                 *
                 * @param  {Boolean} isScrubbing   True/false the user is scrubbing
                 * @return {Boolean}               The scrubbing status when getting
                 * @return {Object}                The player when setting
                 * @method scrubbing
                 */
                /**
                 * Get or set the current time (in seconds)
                 * ```js
                 *     // get
                 *     var whereYouAt = myPlayer.currentTime();
                 *     // set
                 *     myPlayer.currentTime(120); // 2 minutes into the video
                 * ```
                 *
                 * @param  {Number|String=} seconds The time to seek to
                 * @return {Number}        The time in seconds, when not setting
                 * @return {Player}    self, when the current time is set
                 * @method currentTime
                 */
                /**
                 *
                 * @param {Number} seconds Duration when setting
                 * @return {Number} The duration of the video in seconds when getting
                 * @method duration
                 */
                /**
                 * Calculates how much time is left.
                 * ```js
                 *     var timeLeft = myPlayer.remainingTime();
                 * ```
                 * Not a native video element function, but useful
                 *
                 * @return {Number} The time remaining in seconds
                 * @method remainingTime
                 */
                // http://dev.w3.org/html5/spec/video.html#dom-media-buffered
                // Buffered returns a timerange object.
                /**
                 * ```
                 *
                 * @return {Object} A mock TimeRange object (following HTML spec)
                 * @method buffered
                 */
                /**
                 * Get the percent (as a decimal) of the video that's been downloaded
                 * ```js
                 *     var howMuchIsDownloaded = myPlayer.bufferedPercent();
                 * ```
                 * 0 means none, 1 means all.
                 * (This method isn't in the HTML5 spec, but it's very convenient)
                 *
                 * @return {Number} A decimal between 0 and 1 representing the percent
                 * @method bufferedPercent
                 */
                /**
                 * Get the ending time of the last buffered time range
                 * This is used in the progress bar to encapsulate all time ranges.
                 *
                 * @return {Number} The end of the last buffered time range
                 * @method bufferedEnd
                 */
                /**
                 * Get or set the current volume of the media
                 * ```js
                 *     // get
                 *     var howLoudIsIt = myPlayer.volume();
                 *     // set
                 *     myPlayer.volume(0.5); // Set volume to half
                 * ```
                 * 0 is off (muted), 1.0 is all the way up, 0.5 is half way.
                 *
                 * @param  {Number} percentAsDecimal The new volume as a decimal percent
                 * @return {Number}              The current volume when getting
                 * @return {Player}              self when setting
                 * @method volume
                 */
                /**
                 * Get the current muted state, or turn mute on or off
                 * ```js
                 *     // get
                 *     var isVolumeMuted = myPlayer.muted();
                 *     // set
                 *     myPlayer.muted(true); // mute the volume
                 * ```
                 *
                 * @param  {Boolean=} muted True to mute, false to unmute
                 * @return {Boolean} True if mute is on, false if not when getting
                 * @return {Player} self when setting mute
                 * @method muted
                 */
                // Check if current tech can support native fullscreen
                // (e.g. with built in controls like iOS, so not our flash swf)
                /**
                 * Check to see if fullscreen is supported
                 *
                 * @return {Boolean}
                 * @method supportsFullScreen
                 */
                /**
                 * Check if the player is in fullscreen mode
                 * ```js
                 *     // get
                 *     var fullscreenOrNot = myPlayer.isFullscreen();
                 *     // set
                 *     myPlayer.isFullscreen(true); // tell the player it's in fullscreen
                 * ```
                 * NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official
                 * property and instead document.fullscreenElement is used. But isFullscreen is
                 * still a valuable property for internal player workings.
                 *
                 * @param  {Boolean=} isFS Update the player's fullscreen state
                 * @return {Boolean} true if fullscreen false if not when getting
                 * @return {Player} self when setting
                 * @method isFullscreen
                 */
                /**
                 * @return {Player} self
                 * @method requestFullscreen
                 */
                /**
                 *
                 * @return {Player} self
                 * @method exitFullscreen
                 */
                /**
                 * When fullscreen isn't supported we can stretch the video container to as wide as the browser will let us.
                 *
                 * @method enterFullWindow
                 */
                /**
                 * Check for call to either exit full window or full screen on ESC key
                 *
                 * @param {String} event Event to check for key press
                 * @method fullWindowOnEscKey
                 */
                /**
                 * Exit full window
                 *
                 * @method exitFullWindow
                 */
                /**
                 * Check whether the player can play a given mimetype
                 *
                 * @param {String} type The mimetype to check
                 * @return {String} 'probably', 'maybe', or '' (empty string)
                 * @method canPlayType
                 */
                /**
                 * Select source based on tech-order or source-order
                 * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,
                 * defaults to tech-order selection
                 *
                 * @param {Array} sources The sources for a media asset
                 * @return {Object|Boolean} Object of source and tech order, otherwise false
                 * @method selectSource
                 */
                /**
                 * The source function updates the video source
                 * There are three types of variables you can pass as the argument.
                 * **URL String**: A URL to the the video file. Use this method if you are sure
                 * @param  {String|Object|Array=} source The source URL, object, or array of sources
                 * @return {String} The current video source when getting
                 * @return {String} The player when setting
                 * @method src
                 */
                /**
                 * Handle an array of source objects
                 *
                 * @param  {Array} sources Array of source objects
                 * @private
                 * @method sourceList_
                 */
                /**
                 * Begin loading the src data.
                 *
                 * @return {Player} Returns the player
                 * @method load
                 */
                /**
                 * Reset the player. Loads the first tech in the techOrder,
                 * and calls `reset` on the tech`.
                 *
                 * @return {Player} Returns the player
                 * @method reset
                 */
                /**
                 * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4
                 * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.
                 *
                 * @return {String} The current source
                 * @method currentSrc
                 */
                /**
                 * Get the current source type e.g. video/mp4
                 * This can allow you rebuild the current source object so that you could load the same
                 * source and tech later
                 *
                 * @return {String} The source MIME type
                 * @method currentType
                 */
                /**
                 * Get or set the preload attribute
                 *
                 * @param {Boolean} value Boolean to determine if preload should be used
                 * @return {String} The preload attribute value when getting
                 * @return {Player} Returns the player when setting
                 * @method preload
                 */
                /**
                 * Get or set the autoplay attribute.
                 *
                 * @param {Boolean} value Boolean to determine if video should autoplay
                 * @return {String} The autoplay attribute value when getting
                 * @return {Player} Returns the player when setting
                 * @method autoplay
                 */
                /**
                 * Get or set the loop attribute on the video element.
                 *
                 * @param {Boolean} value Boolean to determine if video should loop
                 * @return {String} The loop attribute value when getting
                 * @return {Player} Returns the player when setting
                 * @method loop
                 */
                /**
                 * Get or set the poster image source url
                 *
                 * ##### EXAMPLE:
                 * ```js
                 *     // get
                 *     var currentPoster = myPlayer.poster();
                 *     // set
                 *     myPlayer.poster('http://example.com/myImage.jpg');
                 * ```
                 *
                 * @param  {String=} src Poster image source URL
                 * @return {String} poster URL when getting
                 * @return {Player} self when setting
                 * @method poster
                 * @param  {Boolean} bool Set controls to showing or not
                 * @return {Boolean}    Controls are showing
                 * @method controls
                 */
                /**
                 * Toggle native controls on/off. Native controls are the controls built into
                 * devices (e.g. default iPhone controls), Flash, or other techs
                 * (e.g. Vimeo Controls)
                 * **This should only be set by the current tech, because only the tech knows
                 * if it can support native controls**
                 *
                 * @param  {Boolean} bool    True signals that native controls are on
                 * @return {Player}      Returns the player
                 * @private
                 * @method usingNativeControls
                 */
                /**
                 * Set or get the current MediaError
                 *
                 * @param  {*} err A MediaError or a String/Number to be turned into a MediaError
                 * @return {MediaError|null}     when getting
                 * @return {Player}              when setting
                 * @method error
                 */
                /**
                 * Returns whether or not the player is in the "ended" state.
                 *
                 * @return {Boolean} True if the player is in the ended state, false if not.
                 * @method ended
                 */
                /**
                 * Returns whether or not the player is in the "seeking" state.
                 *
                 * @return {Boolean} True if the player is in the seeking state, false if not.
                 * @method seeking
                 */
                /**
                 * Returns the TimeRanges of the media that are currently available
                 * for seeking to.
                 *
                 * @return {TimeRanges} the seekable intervals of the media timeline
                 * @method seekable
                 */
                /**
                 * Report user activity
                 *
                 * @param {Object} event Event object
                 * @method reportUserActivity
                 */
                /**
                 * Get/set if user is active
                 *
                 * @param {Boolean} bool Value when setting
                 * @return {Boolean} Value if user is active user when getting
                 * @method userActive
                 */
                /**
                 * Listen for user activity based on timeout value
                 *
                 * @private
                 * @method listenForUserActivity_
                 */
                /**
                 * Gets or sets the current playback rate.  A playback rate of
                 * 1.0 represents normal speed and 0.5 would indicate half-speed
                 * playback, for instance.
                 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate
                 *
                 * @param  {Number} rate    New playback rate to set.
                 * @return {Number}         Returns the new playback rate when setting
                 * @return {Number}         Returns the current playback rate when getting
                 * @method playbackRate
                 */
                /**
                 * Gets or sets the audio flag
                 *
                 * @param  {Boolean} bool    True signals that this is an audio player.
                 * @return {Boolean}         Returns true if player is audio, false if not when getting
                 * @return {Player}      Returns the player if setting
                 * @private
                 * @method isAudio
                 */
                /**
                 * Returns the current state of network activity for the element, from
                 * the codes in the list below.
                 * - NETWORK_EMPTY (numeric value 0)
                 *   The element has not yet been initialised. All attributes are in
                 *   their initial states.
                 * - NETWORK_IDLE (numeric value 1)
                 *   The element's resource selection algorithm is active and has
                 *   selected a resource, but it is not actually using the network at
                 *   this time.
                 * - NETWORK_LOADING (numeric value 2)
                 *   The user agent is actively trying to download data.
                 * - NETWORK_NO_SOURCE (numeric value 3)
                 *   The element's resource selection algorithm is active, but it has
                 *   not yet found a resource to use.
                 *
                 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states
                 * @return {Number} the current network activity state
                 * @method networkState
                 */
                /**
                 * Returns a value that expresses the current state of the element
                 * with respect to rendering the current playback position, from the
                 * codes in the list below.
                 * - HAVE_NOTHING (numeric value 0)
                 *   No information regarding the media resource is available.
                 * - HAVE_METADATA (numeric value 1)
                 *   Enough of the resource has been obtained that the duration of the
                 *   resource is available.
                 * - HAVE_CURRENT_DATA (numeric value 2)
                 *   Data for the immediate current playback position is available.
                 * - HAVE_FUTURE_DATA (numeric value 3)
                 *   Data for the immediate current playback position is available, as
                 *   well as enough data for the user agent to advance the current
                 *   playback position in the direction of playback.
                 * - HAVE_ENOUGH_DATA (numeric value 4)
                 *   The user agent estimates that enough data is available for
                 *   playback to proceed uninterrupted.
                 *
                 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate
                 * @return {Number} the current playback rendering state
                 * @method readyState
                 */
                /**
                 * Get a video track list
                 * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist
                 *
                 * @return {VideoTrackList} thes current video track list
                 * @method videoTracks
                 */
                /**
                 * Get an audio track list
                 * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist
                 *
                 * @return {AudioTrackList} thes current audio track list
                 * @method audioTracks
                 */
                /*
                 * Text tracks are tracks of timed text events.
                 * Captions - text displayed over the video for the hearing impaired
                 * Subtitles - text displayed over the video for those who don't understand language in the video
                 * Chapters - text displayed in a menu allowing the user to jump to particular points (chapters) in the video
                 * Descriptions (not supported yet) - audio descriptions that are read back to the user by a screen reading device
                 */
                /**
                 * Get an array of associated text tracks. captions, subtitles, chapters, descriptions
                 * http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks
                 *
                 * @return {Array}           Array of track objects
                 * @method textTracks
                 */
                /**
                 * Get an array of remote text tracks
                 *
                 * @return {Array}
                 * @method remoteTextTracks
                 */
                /**
                 * Get an array of remote html track elements
                 *
                 * @return {HTMLTrackElement[]}
                 * @method remoteTextTrackEls
                 */
                /**
                 * Add a text track
                 * In addition to the W3C settings we allow adding additional info through options.
                 * http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack
                 *
                 * @param {String}  kind        Captions, subtitles, chapters, descriptions, or metadata
                 * @param {String=} label       Optional label
                 * @param {String=} language    Optional language
                 * @method addTextTrack
                 */
                /**
                 * Add a remote text track
                 *
                 * @param {Object} options    Options for remote text track
                 * @method addRemoteTextTrack
                 */
                /**
                 * Remove a remote text track
                 *
                 * @param {Object} track    Remote text track to remove
                 * @method removeRemoteTextTrack
                 */
                // destructure the input into an object with a track argument, defaulting to arguments[0]
                // default the whole argument to an empty object if nothing was passed in
                /**
                 * Get video width
                 *
                 * @return {Number} Video width
                 * @method videoWidth
                 */
                /**
                 * Get video height
                 *
                 * @return {Number} Video height
                 * @method videoHeight
                 */
                // Methods to add support for
                // initialTime: function(){ return this.techCall_('initialTime'); },
                // startOffsetTime: function(){ return this.techCall_('startOffsetTime'); },
                // played: function(){ return this.techCall_('played'); },
                // defaultPlaybackRate: function(){ return this.techCall_('defaultPlaybackRate'); },
                // defaultMuted: function(){ return this.techCall_('defaultMuted'); }
                /**
                 * The player's language code
                 * NOTE: The language should be set in the player options if you want the
                 * the controls to be built with a specific language. Changing the lanugage
                 * later will not update controls text.
                 *
                 * @param {String} code  The locale string
                 * @return {String}      The locale string when getting
                 * @return {Player}      self when setting
                 * @method language
                 */
                /**
                 * Get the player's language dictionary
                 * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time
                 * Languages specified directly in the player options have precedence
                 *
                 * @return {Array} Array of languages
                 * @method languages
                 */
                /**
                 * Converts track info to JSON
                 *
                 * @return {Object} JSON object of options
                 * @method toJSON
                 */
                /**
                 * Creates a simple modal dialog (an instance of the `ModalDialog`
                 * component) that immediately overlays the player with arbitrary
                 * content and removes itself when closed.
                 *
                 * @param {String|Function|Element|Array|Null} content
                 *        Same as `ModalDialog#content`'s param of the same name.
                 *
                 *        The most straight-forward usage is to provide a string or DOM
                 *        element.
                 *
                 * @param {Object} [options]
                 *        Extra options which will be passed on to the `ModalDialog`.
                 *
                 * @return {ModalDialog}
                 */
                /**
                 * Gets tag settings
                 *
                 * @param {Element} tag The player tag
                 * @return {Array} An array of sources and track objects
                 * @static
                 * @method getTagSettings
                 */
                return (
                  g(b, a),
                  (b.prototype.dispose = function () {
                    this.trigger("dispose"),
                      // prevent dispose from being called twice
                      this.off("dispose"),
                      this.styleEl_ &&
                        this.styleEl_.parentNode &&
                        this.styleEl_.parentNode.removeChild(this.styleEl_),
                      // Kill reference to this player
                      (b.players[this.id_] = null),
                      this.tag && this.tag.player && (this.tag.player = null),
                      this.el_ && this.el_.player && (this.el_.player = null),
                      this.tech_ && this.tech_.dispose(),
                      a.prototype.dispose.call(this);
                  }),
                  (b.prototype.createEl = function () {
                    var b = (this.el_ = a.prototype.createEl.call(this, "div")),
                      c = this.tag;
                    // Remove width/height attrs from tag so CSS can make it 100% width/height
                    c.removeAttribute("width"), c.removeAttribute("height");
                    // Copy over all the attributes from the tag, including ID and class
                    // ID will now reference player box, not the video tag
                    var d = q.getElAttributes(c);
                    // Add a style element in the player that we'll use to set the width/height
                    // of the player in a way that's still overrideable by CSS, just like the
                    // video element
                    if (
                      (Object.getOwnPropertyNames(d).forEach(function (a) {
                        // workaround so we don't totally break IE7
                        // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7
                        "class" === a
                          ? (b.className = d[a])
                          : b.setAttribute(a, d[a]);
                      }),
                      (c.playerId = c.id),
                      (c.id += "_html5_api"),
                      (c.className = "vjs-tech"),
                      // Make player findable on elements
                      (c.player = b.player = this),
                      // Default state of video is paused
                      this.addClass("vjs-paused"),
                      m["default"].VIDEOJS_NO_DYNAMIC_STYLE !== !0)
                    ) {
                      this.styleEl_ = E.createStyleElement(
                        "vjs-styles-dimensions"
                      );
                      var e = q.$(".vjs-styles-defaults"),
                        f = q.$("head");
                      f.insertBefore(
                        this.styleEl_,
                        e ? e.nextSibling : f.firstChild
                      );
                    }
                    // Pass in the width/height/aspectRatio options which will update the style el
                    this.width(this.options_.width),
                      this.height(this.options_.height),
                      this.fluid(this.options_.fluid),
                      this.aspectRatio(this.options_.aspectRatio);
                    for (
                      var g = c.getElementsByTagName("a"), h = 0;
                      h < g.length;
                      h++
                    ) {
                      var i = g.item(h);
                      q.addElClass(i, "vjs-hidden"),
                        i.setAttribute("hidden", "hidden");
                    }
                    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so
                    // keep track of the original for later so we can know if the source originally failed
                    // Wrap video tag in div (el/box) container
                    // insert the tag as the first child of the player element
                    // then manually add it to the children array so that this.addChild
                    // will work properly for other components
                    // Breaks iPhone, fixed in HTML5 setup.
                    return (
                      (c.initNetworkState_ = c.networkState),
                      c.parentNode && c.parentNode.insertBefore(b, c),
                      q.insertElFirst(c, b),
                      this.children_.unshift(c),
                      (this.el_ = b),
                      b
                    );
                  }),
                  (b.prototype.width = function (a) {
                    return this.dimension("width", a);
                  }),
                  (b.prototype.height = function (a) {
                    return this.dimension("height", a);
                  }),
                  (b.prototype.dimension = function (a, b) {
                    var c = a + "_";
                    if (void 0 === b) return this[c] || 0;
                    if ("" === b)
                      // If an empty string is given, reset the dimension to be automatic
                      this[c] = void 0;
                    else {
                      var d = parseFloat(b);
                      if (isNaN(d))
                        return (
                          y["default"].error(
                            'Improper value "' + b + '" supplied for for ' + a
                          ),
                          this
                        );
                      this[c] = d;
                    }
                    return this.updateStyleEl_(), this;
                  }),
                  (b.prototype.fluid = function (a) {
                    return void 0 === a
                      ? !!this.fluid_
                      : ((this.fluid_ = !!a),
                        void (a
                          ? this.addClass("vjs-fluid")
                          : this.removeClass("vjs-fluid")));
                  }),
                  (b.prototype.aspectRatio = function (a) {
                    if (void 0 === a) return this.aspectRatio_;
                    // Check for width:height format
                    if (!/^\d+\:\d+$/.test(a))
                      throw new Error(
                        "Improper value supplied for aspect ratio. The format should be width:height, for example 16:9."
                      );
                    (this.aspectRatio_ = a),
                      // We're assuming if you set an aspect ratio you want fluid mode,
                      // because in fixed mode you could calculate width and height yourself.
                      this.fluid(!0),
                      this.updateStyleEl_();
                  }),
                  (b.prototype.updateStyleEl_ = function () {
                    if (m["default"].VIDEOJS_NO_DYNAMIC_STYLE === !0) {
                      var a =
                          "number" == typeof this.width_
                            ? this.width_
                            : this.options_.width,
                        b =
                          "number" == typeof this.height_
                            ? this.height_
                            : this.options_.height,
                        c = this.tech_ && this.tech_.el();
                      return void (
                        c && (a >= 0 && (c.width = a), b >= 0 && (c.height = b))
                      );
                    }
                    var d = void 0,
                      e = void 0,
                      f = void 0,
                      g = void 0;
                    // The aspect ratio is either used directly or to calculate width and height.
                    // Use any aspectRatio that's been specifically set
                    f =
                      void 0 !== this.aspectRatio_ &&
                      "auto" !== this.aspectRatio_
                        ? this.aspectRatio_
                        : this.videoWidth()
                        ? this.videoWidth() + ":" + this.videoHeight()
                        : "16:9";
                    // Get the ratio as a decimal we can use to calculate dimensions
                    var h = f.split(":"),
                      i = h[1] / h[0];
                    // Use any width that's been specifically set
                    (d =
                      void 0 !== this.width_
                        ? this.width_
                        : void 0 !== this.height_
                        ? this.height_ / i
                        : this.videoWidth() || 300),
                      // Use any height that's been specifically set
                      (e = void 0 !== this.height_ ? this.height_ : d * i),
                      // Ensure the CSS class is valid by starting with an alpha character
                      (g = /^[^a-zA-Z]/.test(this.id())
                        ? "dimensions-" + this.id()
                        : this.id() + "-dimensions"),
                      // Ensure the right class is still on the player for the style element
                      this.addClass(g),
                      E.setTextContent(
                        this.styleEl_,
                        "\n      ." +
                          g +
                          " {\n        width: " +
                          d +
                          "px;\n        height: " +
                          e +
                          "px;\n      }\n\n      ." +
                          g +
                          ".vjs-fluid {\n        padding-top: " +
                          100 * i +
                          "%;\n      }\n    "
                      );
                  }),
                  (b.prototype.loadTech_ = function (a, b) {
                    // Pause and remove current playback technology
                    this.tech_ && this.unloadTech_(),
                      // get rid of the HTML5 video tag as soon as we are using another tech
                      "Html5" !== a &&
                        this.tag &&
                        (ea["default"]
                          .getTech("Html5")
                          .disposeMediaElement(this.tag),
                        (this.tag.player = null),
                        (this.tag = null)),
                      (this.techName_ = a),
                      (this.isReady_ = !1);
                    // Grab tech-specific options from player options and add source and parent element to use.
                    var c = M["default"](
                      {
                        nativeControlsForTouch: this.options_
                          .nativeControlsForTouch,
                        source: b,
                        playerId: this.id(),
                        techId: this.id() + "_" + a + "_api",
                        videoTracks: this.videoTracks_,
                        textTracks: this.textTracks_,
                        audioTracks: this.audioTracks_,
                        autoplay: this.options_.autoplay,
                        preload: this.options_.preload,
                        loop: this.options_.loop,
                        muted: this.options_.muted,
                        poster: this.poster(),
                        language: this.language(),
                        "vtt.js": this.options_["vtt.js"],
                      },
                      this.options_[a.toLowerCase()]
                    );
                    this.tag && (c.tag = this.tag),
                      b &&
                        ((this.currentType_ = b.type),
                        b.src === this.cache_.src &&
                          this.cache_.currentTime > 0 &&
                          (c.startTime = this.cache_.currentTime),
                        (this.cache_.src = b.src));
                    // Initialize tech instance
                    var d = ea["default"].getTech(a);
                    // Support old behavior of techs being registered as components.
                    // Remove once that deprecated behavior is removed.
                    d || (d = i["default"].getComponent(a)),
                      (this.tech_ = new d(c)),
                      this.tech_.ready(s.bind(this, this.handleTechReady_), !0),
                      Q["default"].jsonToTextTracks(
                        this.textTracksJson_ || [],
                        this.tech_
                      ),
                      // Listen to all HTML5-defined events and trigger them on the player
                      this.on(
                        this.tech_,
                        "loadstart",
                        this.handleTechLoadStart_
                      ),
                      this.on(this.tech_, "waiting", this.handleTechWaiting_),
                      this.on(this.tech_, "canplay", this.handleTechCanPlay_),
                      this.on(
                        this.tech_,
                        "canplaythrough",
                        this.handleTechCanPlayThrough_
                      ),
                      this.on(this.tech_, "playing", this.handleTechPlaying_),
                      this.on(this.tech_, "ended", this.handleTechEnded_),
                      this.on(this.tech_, "seeking", this.handleTechSeeking_),
                      this.on(this.tech_, "seeked", this.handleTechSeeked_),
                      this.on(this.tech_, "play", this.handleTechPlay_),
                      this.on(
                        this.tech_,
                        "firstplay",
                        this.handleTechFirstPlay_
                      ),
                      this.on(this.tech_, "pause", this.handleTechPause_),
                      this.on(this.tech_, "progress", this.handleTechProgress_),
                      this.on(
                        this.tech_,
                        "durationchange",
                        this.handleTechDurationChange_
                      ),
                      this.on(
                        this.tech_,
                        "fullscreenchange",
                        this.handleTechFullscreenChange_
                      ),
                      this.on(this.tech_, "error", this.handleTechError_),
                      this.on(this.tech_, "suspend", this.handleTechSuspend_),
                      this.on(this.tech_, "abort", this.handleTechAbort_),
                      this.on(this.tech_, "emptied", this.handleTechEmptied_),
                      this.on(this.tech_, "stalled", this.handleTechStalled_),
                      this.on(
                        this.tech_,
                        "loadedmetadata",
                        this.handleTechLoadedMetaData_
                      ),
                      this.on(
                        this.tech_,
                        "loadeddata",
                        this.handleTechLoadedData_
                      ),
                      this.on(
                        this.tech_,
                        "timeupdate",
                        this.handleTechTimeUpdate_
                      ),
                      this.on(
                        this.tech_,
                        "ratechange",
                        this.handleTechRateChange_
                      ),
                      this.on(
                        this.tech_,
                        "volumechange",
                        this.handleTechVolumeChange_
                      ),
                      this.on(
                        this.tech_,
                        "texttrackchange",
                        this.handleTechTextTrackChange_
                      ),
                      this.on(
                        this.tech_,
                        "loadedmetadata",
                        this.updateStyleEl_
                      ),
                      this.on(
                        this.tech_,
                        "posterchange",
                        this.handleTechPosterChange_
                      ),
                      this.on(this.tech_, "textdata", this.handleTechTextData_),
                      this.usingNativeControls(this.techGet_("controls")),
                      this.controls() &&
                        !this.usingNativeControls() &&
                        this.addTechControlsListeners_(),
                      // Add the tech element in the DOM if it was not already there
                      // Make sure to not insert the original video element if using Html5
                      this.tech_.el().parentNode === this.el() ||
                        ("Html5" === a && this.tag) ||
                        q.insertElFirst(this.tech_.el(), this.el()),
                      // Get rid of the original video tag reference after the first tech is loaded
                      this.tag && ((this.tag.player = null), (this.tag = null));
                  }),
                  (b.prototype.unloadTech_ = function () {
                    // Save the current text tracks so that we can reuse the same text tracks with the next tech
                    (this.videoTracks_ = this.videoTracks()),
                      (this.textTracks_ = this.textTracks()),
                      (this.audioTracks_ = this.audioTracks()),
                      (this.textTracksJson_ = Q["default"].textTracksToJson(
                        this.tech_
                      )),
                      (this.isReady_ = !1),
                      this.tech_.dispose(),
                      (this.tech_ = !1);
                  }),
                  (b.prototype.tech = function (a) {
                    if (a && a.IWillNotUseThisInPlugins) return this.tech_;
                    throw (m["default"].alert(b), new Error(b));
                  }),
                  (b.prototype.addTechControlsListeners_ = function () {
                    // Make sure to remove all the previous listeners in case we are called multiple times.
                    this.removeTechControlsListeners_(),
                      // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do
                      // trigger mousedown/up.
                      // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object
                      // Any touch events are set to block the mousedown event from happening
                      this.on(this.tech_, "mousedown", this.handleTechClick_),
                      // If the controls were hidden we don't want that to change without a tap event
                      // so we'll check if the controls were already showing before reporting user
                      // activity
                      this.on(
                        this.tech_,
                        "touchstart",
                        this.handleTechTouchStart_
                      ),
                      this.on(
                        this.tech_,
                        "touchmove",
                        this.handleTechTouchMove_
                      ),
                      this.on(this.tech_, "touchend", this.handleTechTouchEnd_),
                      // The tap listener needs to come after the touchend listener because the tap
                      // listener cancels out any reportedUserActivity when setting userActive(false)
                      this.on(this.tech_, "tap", this.handleTechTap_);
                  }),
                  (b.prototype.removeTechControlsListeners_ = function () {
                    // We don't want to just use `this.off()` because there might be other needed
                    // listeners added by techs that extend this.
                    this.off(this.tech_, "tap", this.handleTechTap_),
                      this.off(
                        this.tech_,
                        "touchstart",
                        this.handleTechTouchStart_
                      ),
                      this.off(
                        this.tech_,
                        "touchmove",
                        this.handleTechTouchMove_
                      ),
                      this.off(
                        this.tech_,
                        "touchend",
                        this.handleTechTouchEnd_
                      ),
                      this.off(this.tech_, "mousedown", this.handleTechClick_);
                  }),
                  (b.prototype.handleTechReady_ = function () {
                    // Chrome and Safari both have issues with autoplay.
                    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.
                    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)
                    // This fixes both issues. Need to wait for API, so it updates displays correctly
                    if (
                      (this.triggerReady(),
                      // Keep the same volume as before
                      this.cache_.volume &&
                        this.techCall_("setVolume", this.cache_.volume),
                      // Look if the tech found a higher resolution poster while loading
                      this.handleTechPosterChange_(),
                      // Update the duration if available
                      this.handleTechDurationChange_(),
                      (this.src() || this.currentSrc()) &&
                        this.tag &&
                        this.options_.autoplay &&
                        this.paused())
                    ) {
                      try {
                        delete this.tag.poster;
                      } catch (a) {
                        y["default"](
                          "deleting tag.poster throws in some browsers",
                          a
                        );
                      }
                      this.play();
                    }
                  }),
                  (b.prototype.handleTechLoadStart_ = function () {
                    // TODO: Update to use `emptied` event instead. See #1277.
                    this.removeClass("vjs-ended"),
                      // reset the error state
                      this.error(null),
                      // If it's already playing we want to trigger a firstplay event now.
                      // The firstplay event relies on both the play and loadstart events
                      // which can happen in any order for a new source
                      this.paused()
                        ? // reset the hasStarted state
                          (this.hasStarted(!1), this.trigger("loadstart"))
                        : (this.trigger("loadstart"),
                          this.trigger("firstplay"));
                  }),
                  (b.prototype.hasStarted = function (a) {
                    // only update if this is a new value
                    // trigger the firstplay event if this newly has played
                    return void 0 !== a
                      ? (this.hasStarted_ !== a &&
                          ((this.hasStarted_ = a),
                          a
                            ? (this.addClass("vjs-has-started"),
                              this.trigger("firstplay"))
                            : this.removeClass("vjs-has-started")),
                        this)
                      : !!this.hasStarted_;
                  }),
                  (b.prototype.handleTechPlay_ = function () {
                    this.removeClass("vjs-ended"),
                      this.removeClass("vjs-paused"),
                      this.addClass("vjs-playing"),
                      // hide the poster when the user hits play
                      // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play
                      this.hasStarted(!0),
                      this.trigger("play");
                  }),
                  (b.prototype.handleTechWaiting_ = function () {
                    var a = this;
                    this.addClass("vjs-waiting"),
                      this.trigger("waiting"),
                      this.one("timeupdate", function () {
                        return a.removeClass("vjs-waiting");
                      });
                  }),
                  (b.prototype.handleTechCanPlay_ = function () {
                    this.removeClass("vjs-waiting"), this.trigger("canplay");
                  }),
                  (b.prototype.handleTechCanPlayThrough_ = function () {
                    this.removeClass("vjs-waiting"),
                      this.trigger("canplaythrough");
                  }),
                  (b.prototype.handleTechPlaying_ = function () {
                    this.removeClass("vjs-waiting"), this.trigger("playing");
                  }),
                  (b.prototype.handleTechSeeking_ = function () {
                    this.addClass("vjs-seeking"), this.trigger("seeking");
                  }),
                  (b.prototype.handleTechSeeked_ = function () {
                    this.removeClass("vjs-seeking"), this.trigger("seeked");
                  }),
                  (b.prototype.handleTechFirstPlay_ = function () {
                    //If the first starttime attribute is specified
                    //then we will start at the given offset in seconds
                    this.options_.starttime &&
                      this.currentTime(this.options_.starttime),
                      this.addClass("vjs-has-started"),
                      this.trigger("firstplay");
                  }),
                  (b.prototype.handleTechPause_ = function () {
                    this.removeClass("vjs-playing"),
                      this.addClass("vjs-paused"),
                      this.trigger("pause");
                  }),
                  (b.prototype.handleTechProgress_ = function () {
                    this.trigger("progress");
                  }),
                  (b.prototype.handleTechEnded_ = function () {
                    this.addClass("vjs-ended"),
                      this.options_.loop
                        ? (this.currentTime(0), this.play())
                        : this.paused() || this.pause(),
                      this.trigger("ended");
                  }),
                  (b.prototype.handleTechDurationChange_ = function () {
                    this.duration(this.techGet_("duration"));
                  }),
                  (b.prototype.handleTechClick_ = function (a) {
                    // We're using mousedown to detect clicks thanks to Flash, but mousedown
                    // will also be triggered with right-clicks, so we need to prevent that
                    0 === a.button &&
                      this.controls() &&
                      (this.paused() ? this.play() : this.pause());
                  }),
                  (b.prototype.handleTechTap_ = function () {
                    this.userActive(!this.userActive());
                  }),
                  (b.prototype.handleTechTouchStart_ = function () {
                    this.userWasActive = this.userActive();
                  }),
                  (b.prototype.handleTechTouchMove_ = function () {
                    this.userWasActive && this.reportUserActivity();
                  }),
                  (b.prototype.handleTechTouchEnd_ = function (a) {
                    // Stop the mouse events from also happening
                    a.preventDefault();
                  }),
                  (b.prototype.handleFullscreenChange_ = function () {
                    this.isFullscreen()
                      ? this.addClass("vjs-fullscreen")
                      : this.removeClass("vjs-fullscreen");
                  }),
                  (b.prototype.handleStageClick_ = function () {
                    this.reportUserActivity();
                  }),
                  (b.prototype.handleTechFullscreenChange_ = function (a, b) {
                    b && this.isFullscreen(b.isFullscreen),
                      this.trigger("fullscreenchange");
                  }),
                  (b.prototype.handleTechError_ = function () {
                    var a = this.tech_.error();
                    this.error(a);
                  }),
                  (b.prototype.handleTechSuspend_ = function () {
                    this.trigger("suspend");
                  }),
                  (b.prototype.handleTechAbort_ = function () {
                    this.trigger("abort");
                  }),
                  (b.prototype.handleTechEmptied_ = function () {
                    this.trigger("emptied");
                  }),
                  (b.prototype.handleTechStalled_ = function () {
                    this.trigger("stalled");
                  }),
                  (b.prototype.handleTechLoadedMetaData_ = function () {
                    this.trigger("loadedmetadata");
                  }),
                  (b.prototype.handleTechTextData_ = function () {
                    var a = null;
                    arguments.length > 1 && (a = arguments[1]),
                      this.trigger("textdata", a);
                  }),
                  (b.prototype.handleTechLoadedData_ = function () {
                    this.trigger("loadeddata");
                  }),
                  (b.prototype.handleTechTimeUpdate_ = function () {
                    this.trigger("timeupdate");
                  }),
                  (b.prototype.handleTechRateChange_ = function () {
                    this.trigger("ratechange");
                  }),
                  (b.prototype.handleTechVolumeChange_ = function () {
                    this.trigger("volumechange");
                  }),
                  (b.prototype.handleTechTextTrackChange_ = function () {
                    this.trigger("texttrackchange");
                  }),
                  (b.prototype.getCache = function () {
                    return this.cache_;
                  }),
                  (b.prototype.techCall_ = function (a, b) {
                    // If it's not ready yet, call method when it is
                    if (this.tech_ && !this.tech_.isReady_)
                      this.tech_.ready(function () {
                        this[a](b);
                      }, !0);
                    else
                      try {
                        this.tech_ && this.tech_[a](b);
                      } catch (c) {
                        throw (y["default"](c), c);
                      }
                  }),
                  (b.prototype.techGet_ = function (a) {
                    if (this.tech_ && this.tech_.isReady_)
                      // Flash likes to die and reload when you hide or reposition it.
                      // In these cases the object methods go away and we get errors.
                      // When that happens we'll catch the errors and inform tech that it's not ready any more.
                      try {
                        return this.tech_[a]();
                      } catch (b) {
                        // When building additional tech libs, an expected method may not be defined yet
                        // When a method isn't available on the object it throws a TypeError
                        throw (
                          (void 0 === this.tech_[a]
                            ? y["default"](
                                a +
                                  " method not defined for " +
                                  this.techName_ +
                                  " playback technology.",
                                b
                              )
                            : "TypeError" === b.name
                            ? (y["default"](
                                a +
                                  " unavailable on " +
                                  this.techName_ +
                                  " playback technology element.",
                                b
                              ),
                              (this.tech_.isReady_ = !1))
                            : y["default"](b),
                          b)
                        );
                      }
                  }),
                  (b.prototype.play = function () {
                    // Only calls the tech's play if we already have a src loaded
                    return (
                      this.src() || this.currentSrc()
                        ? this.techCall_("play")
                        : this.tech_.one("loadstart", function () {
                            this.play();
                          }),
                      this
                    );
                  }),
                  (b.prototype.pause = function () {
                    return this.techCall_("pause"), this;
                  }),
                  (b.prototype.paused = function () {
                    // The initial state of paused should be true (in Safari it's actually false)
                    return this.techGet_("paused") !== !1;
                  }),
                  (b.prototype.scrubbing = function (a) {
                    return void 0 !== a
                      ? ((this.scrubbing_ = !!a),
                        a
                          ? this.addClass("vjs-scrubbing")
                          : this.removeClass("vjs-scrubbing"),
                        this)
                      : this.scrubbing_;
                  }),
                  (b.prototype.currentTime = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setCurrentTime", a), this)
                      : (this.cache_.currentTime =
                          this.techGet_("currentTime") || 0);
                  }),
                  (b.prototype.duration = function (a) {
                    // Standardize on Inifity for signaling video is live
                    // Cache the last set value for optimized scrubbing (esp. Flash)
                    return void 0 === a
                      ? this.cache_.duration || 0
                      : ((a = parseFloat(a) || 0),
                        a < 0 && (a = 1 / 0),
                        a !== this.cache_.duration &&
                          ((this.cache_.duration = a),
                          a === 1 / 0
                            ? this.addClass("vjs-live")
                            : this.removeClass("vjs-live"),
                          this.trigger("durationchange")),
                        this);
                  }),
                  (b.prototype.remainingTime = function () {
                    return this.duration() - this.currentTime();
                  }),
                  (b.prototype.buffered = function c() {
                    var c = this.techGet_("buffered");
                    return (c && c.length) || (c = B.createTimeRange(0, 0)), c;
                  }),
                  (b.prototype.bufferedPercent = function () {
                    return C.bufferedPercent(this.buffered(), this.duration());
                  }),
                  (b.prototype.bufferedEnd = function () {
                    var a = this.buffered(),
                      b = this.duration(),
                      c = a.end(a.length - 1);
                    return c > b && (c = b), c;
                  }),
                  (b.prototype.volume = function (a) {
                    var b = void 0; // Force value to between 0 and 1
                    // Default to 1 when returning current volume.
                    return void 0 !== a
                      ? ((b = Math.max(0, Math.min(1, parseFloat(a)))),
                        (this.cache_.volume = b),
                        this.techCall_("setVolume", b),
                        this)
                      : ((b = parseFloat(this.techGet_("volume"))),
                        isNaN(b) ? 1 : b);
                  }),
                  (b.prototype.muted = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setMuted", a), this)
                      : this.techGet_("muted") || !1;
                  }),
                  (b.prototype.supportsFullScreen = function () {
                    return this.techGet_("supportsFullScreen") || !1;
                  }),
                  (b.prototype.isFullscreen = function (a) {
                    return void 0 !== a
                      ? ((this.isFullscreen_ = !!a), this)
                      : !!this.isFullscreen_;
                  }),
                  (b.prototype.requestFullscreen = function () {
                    var a = G["default"];
                    return (
                      this.isFullscreen(!0),
                      a.requestFullscreen
                        ? (o.on(
                            k["default"],
                            a.fullscreenchange,
                            s.bind(this, function b(c) {
                              this.isFullscreen(
                                k["default"][a.fullscreenElement]
                              ),
                                // If cancelling fullscreen, remove event listener.
                                this.isFullscreen() === !1 &&
                                  o.off(k["default"], a.fullscreenchange, b),
                                this.trigger("fullscreenchange");
                            })
                          ),
                          this.el_[a.requestFullscreen]())
                        : this.tech_.supportsFullScreen()
                        ? this.techCall_("enterFullScreen")
                        : (this.enterFullWindow(),
                          this.trigger("fullscreenchange")),
                      this
                    );
                  }),
                  (b.prototype.exitFullscreen = function () {
                    var a = G["default"];
                    // Check for browser element fullscreen support
                    return (
                      this.isFullscreen(!1),
                      a.requestFullscreen
                        ? k["default"][a.exitFullscreen]()
                        : this.tech_.supportsFullScreen()
                        ? this.techCall_("exitFullScreen")
                        : (this.exitFullWindow(),
                          this.trigger("fullscreenchange")),
                      this
                    );
                  }),
                  (b.prototype.enterFullWindow = function () {
                    (this.isFullWindow = !0),
                      // Storing original doc overflow value to return to when fullscreen is off
                      (this.docOrigOverflow =
                        k["default"].documentElement.style.overflow),
                      // Add listener for esc key to exit fullscreen
                      o.on(
                        k["default"],
                        "keydown",
                        s.bind(this, this.fullWindowOnEscKey)
                      ),
                      // Hide any scroll bars
                      (k["default"].documentElement.style.overflow = "hidden"),
                      // Apply fullscreen styles
                      q.addElClass(k["default"].body, "vjs-full-window"),
                      this.trigger("enterFullWindow");
                  }),
                  (b.prototype.fullWindowOnEscKey = function (a) {
                    27 === a.keyCode &&
                      (this.isFullscreen() === !0
                        ? this.exitFullscreen()
                        : this.exitFullWindow());
                  }),
                  (b.prototype.exitFullWindow = function () {
                    (this.isFullWindow = !1),
                      o.off(k["default"], "keydown", this.fullWindowOnEscKey),
                      // Unhide scroll bars.
                      (k[
                        "default"
                      ].documentElement.style.overflow = this.docOrigOverflow),
                      // Remove fullscreen styles
                      q.removeElClass(k["default"].body, "vjs-full-window"),
                      // Resize the box, controller, and poster to original sizes
                      // this.positionAll();
                      this.trigger("exitFullWindow");
                  }),
                  (b.prototype.canPlayType = function (a) {
                    // Loop through each playback technology in the options order
                    for (
                      var b = void 0, c = 0, d = this.options_.techOrder;
                      c < d.length;
                      c++
                    ) {
                      var e = A["default"](d[c]),
                        f = ea["default"].getTech(e);
                      // Check if the current tech is defined before continuing
                      if (
                        // Support old behavior of techs being registered as components.
                        // Remove once that deprecated behavior is removed.
                        (f || (f = i["default"].getComponent(e)), f)
                      ) {
                        // Check if the browser supports this technology
                        if (f.isSupported() && (b = f.canPlayType(a))) return b;
                      } else
                        y["default"].error(
                          'The "' +
                            e +
                            '" tech is undefined. Skipped browser support check for that tech.'
                        );
                    }
                    return "";
                  }),
                  (b.prototype.selectSource = function (a) {
                    var b = this,
                      c = this.options_.techOrder
                        .map(A["default"])
                        .map(function (a) {
                          // `Component.getComponent(...)` is for support of old behavior of techs
                          // being registered as components.
                          // Remove once that deprecated behavior is removed.
                          return [
                            a,
                            ea["default"].getTech(a) ||
                              i["default"].getComponent(a),
                          ];
                        })
                        .filter(function (a) {
                          var b = a[0],
                            c = a[1];
                          // Check if the current tech is defined before continuing
                          // Check if the current tech is defined before continuing
                          return c
                            ? c.isSupported()
                            : (y["default"].error(
                                'The "' +
                                  b +
                                  '" tech is undefined. Skipped browser support check for that tech.'
                              ),
                              !1);
                        }),
                      d = function (a, b, c) {
                        var d = void 0;
                        return (
                          a.some(function (a) {
                            return b.some(function (b) {
                              if ((d = c(a, b))) return !0;
                            });
                          }),
                          d
                        );
                      },
                      e = void 0,
                      f = function (a) {
                        return function (b, c) {
                          return a(c, b);
                        };
                      },
                      g = function (a, c) {
                        var d = a[0],
                          e = a[1];
                        if (e.canPlaySource(c, b.options_[d.toLowerCase()]))
                          return { source: c, tech: d };
                      };
                    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources
                    // to select from them based on their priority.
                    // Source-first ordering
                    return (
                      (e = this.options_.sourceOrder
                        ? d(a, c, f(g))
                        : d(c, a, g)),
                      e || !1
                    );
                  }),
                  (b.prototype.src = function (a) {
                    if (void 0 === a) return this.techGet_("src");
                    var b = ea["default"].getTech(this.techName_);
                    // Support old behavior of techs being registered as components.
                    // Remove once that deprecated behavior is removed.
                    // case: Array of source objects to choose from and pick the best to play
                    // create a source object from the string
                    // check if the source has a type and the loaded tech cannot play the source
                    // if there's no type we'll just try the current tech
                    // create a source list with the current source and send through
                    // the tech loop to check for a compatible technology
                    // wait until the tech is ready to set the source
                    return (
                      b || (b = i["default"].getComponent(this.techName_)),
                      Array.isArray(a)
                        ? this.sourceList_(a)
                        : "string" == typeof a
                        ? this.src({ src: a })
                        : a instanceof Object &&
                          (a.type &&
                          !b.canPlaySource(
                            a,
                            this.options_[this.techName_.toLowerCase()]
                          )
                            ? this.sourceList_([a])
                            : ((this.cache_.src = a.src),
                              (this.currentType_ = a.type || ""),
                              this.ready(function () {
                                // The setSource tech method was added with source handlers
                                // so older techs won't support it
                                // We need to check the direct prototype for the case where subclasses
                                // of the tech do not support source handlers
                                b.prototype.hasOwnProperty("setSource")
                                  ? this.techCall_("setSource", a)
                                  : this.techCall_("src", a.src),
                                  "auto" === this.options_.preload &&
                                    this.load(),
                                  this.options_.autoplay && this.play();
                              }, !0))),
                      this
                    );
                  }),
                  (b.prototype.sourceList_ = function (a) {
                    var b = this.selectSource(a);
                    b
                      ? b.tech === this.techName_
                        ? // if this technology is already loaded, set the source
                          this.src(b.source)
                        : // load this technology with the chosen source
                          this.loadTech_(b.tech, b.source)
                      : // We need to wrap this in a timeout to give folks a chance to add error event handlers
                        (this.setTimeout(function () {
                          this.error({
                            code: 4,
                            message: this.localize(
                              this.options_.notSupportedMessage
                            ),
                          });
                        }, 0),
                        // we could not find an appropriate tech, but let's still notify the delegate that this is it
                        // this needs a better comment about why this is needed
                        this.triggerReady());
                  }),
                  (b.prototype.load = function () {
                    return this.techCall_("load"), this;
                  }),
                  (b.prototype.reset = function () {
                    return (
                      this.loadTech_(
                        A["default"](this.options_.techOrder[0]),
                        null
                      ),
                      this.techCall_("reset"),
                      this
                    );
                  }),
                  (b.prototype.currentSrc = function () {
                    return this.techGet_("currentSrc") || this.cache_.src || "";
                  }),
                  (b.prototype.currentType = function () {
                    return this.currentType_ || "";
                  }),
                  (b.prototype.preload = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setPreload", a),
                        (this.options_.preload = a),
                        this)
                      : this.techGet_("preload");
                  }),
                  (b.prototype.autoplay = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setAutoplay", a),
                        (this.options_.autoplay = a),
                        this)
                      : this.techGet_("autoplay", a);
                  }),
                  (b.prototype.loop = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setLoop", a),
                        (this.options_.loop = a),
                        this)
                      : this.techGet_("loop");
                  }),
                  (b.prototype.poster = function (a) {
                    // The correct way to remove a poster is to set as an empty string
                    // other falsey values will throw errors
                    // update the internal poster variable
                    // update the tech's poster
                    // alert components that the poster has been set
                    return void 0 === a
                      ? this.poster_
                      : (a || (a = ""),
                        (this.poster_ = a),
                        this.techCall_("setPoster", a),
                        this.trigger("posterchange"),
                        this);
                  }),
                  (b.prototype.handleTechPosterChange_ = function () {
                    !this.poster_ &&
                      this.tech_ &&
                      this.tech_.poster &&
                      ((this.poster_ = this.tech_.poster() || ""),
                      // Let components know the poster has changed
                      this.trigger("posterchange"));
                  }),
                  (b.prototype.controls = function (a) {
                    // force boolean
                    // Don't trigger a change event unless it actually changed
                    return void 0 !== a
                      ? ((a = !!a),
                        this.controls_ !== a &&
                          ((this.controls_ = a),
                          this.usingNativeControls() &&
                            this.techCall_("setControls", a),
                          a
                            ? (this.removeClass("vjs-controls-disabled"),
                              this.addClass("vjs-controls-enabled"),
                              this.trigger("controlsenabled"),
                              this.usingNativeControls() ||
                                this.addTechControlsListeners_())
                            : (this.removeClass("vjs-controls-enabled"),
                              this.addClass("vjs-controls-disabled"),
                              this.trigger("controlsdisabled"),
                              this.usingNativeControls() ||
                                this.removeTechControlsListeners_())),
                        this)
                      : !!this.controls_;
                  }),
                  (b.prototype.usingNativeControls = function (a) {
                    // force boolean
                    // Don't trigger a change event unless it actually changed
                    /**
                     * player is using the native device controls
                     *
                     * @event usingnativecontrols
                     * @memberof Player
                     * @instance
                     * @private
                     */
                    /**
                     * player is using the custom HTML controls
                     *
                     * @event usingcustomcontrols
                     * @memberof Player
                     * @instance
                     * @private
                     */
                    return void 0 !== a
                      ? ((a = !!a),
                        this.usingNativeControls_ !== a &&
                          ((this.usingNativeControls_ = a),
                          a
                            ? (this.addClass("vjs-using-native-controls"),
                              this.trigger("usingnativecontrols"))
                            : (this.removeClass("vjs-using-native-controls"),
                              this.trigger("usingcustomcontrols"))),
                        this)
                      : !!this.usingNativeControls_;
                  }),
                  (b.prototype.error = function (a) {
                    // restoring to default
                    // add the vjs-error classname to the player
                    // log the name of the error type and any message
                    // ie8 just logs "[object object]" if you just log the error object
                    // fire an error event on the player
                    return void 0 === a
                      ? this.error_ || null
                      : null === a
                      ? ((this.error_ = a),
                        this.removeClass("vjs-error"),
                        this.errorDisplay && this.errorDisplay.close(),
                        this)
                      : ((this.error_ = new I["default"](a)),
                        this.addClass("vjs-error"),
                        y["default"].error(
                          "(CODE:" +
                            this.error_.code +
                            " " +
                            I["default"].errorTypes[this.error_.code] +
                            ")",
                          this.error_.message,
                          this.error_
                        ),
                        this.trigger("error"),
                        this);
                  }),
                  (b.prototype.ended = function () {
                    return this.techGet_("ended");
                  }),
                  (b.prototype.seeking = function () {
                    return this.techGet_("seeking");
                  }),
                  (b.prototype.seekable = function () {
                    return this.techGet_("seekable");
                  }),
                  (b.prototype.reportUserActivity = function (a) {
                    this.userActivity_ = !0;
                  }),
                  (b.prototype.userActive = function (a) {
                    // If the user was inactive and is now active we want to reset the
                    // inactivity timer
                    // We're switching the state to inactive manually, so erase any other
                    // activity
                    // Chrome/Safari/IE have bugs where when you change the cursor it can
                    // trigger a mousemove event. This causes an issue when you're hiding
                    // the cursor when the user is inactive, and a mousemove signals user
                    // activity. Making it impossible to go into inactive mode. Specifically
                    // this happens in fullscreen when we really need to hide the cursor.
                    //
                    // When this gets resolved in ALL browsers it can be removed
                    // https://code.google.com/p/chromium/issues/detail?id=103041
                    return void 0 !== a
                      ? ((a = !!a),
                        a !== this.userActive_ &&
                          ((this.userActive_ = a),
                          a
                            ? ((this.userActivity_ = !0),
                              this.removeClass("vjs-user-inactive"),
                              this.addClass("vjs-user-active"),
                              this.trigger("useractive"))
                            : ((this.userActivity_ = !1),
                              this.tech_ &&
                                this.tech_.one("mousemove", function (a) {
                                  a.stopPropagation(), a.preventDefault();
                                }),
                              this.removeClass("vjs-user-active"),
                              this.addClass("vjs-user-inactive"),
                              this.trigger("userinactive"))),
                        this)
                      : this.userActive_;
                  }),
                  (b.prototype.listenForUserActivity_ = function () {
                    var a = void 0,
                      b = void 0,
                      c = void 0,
                      d = s.bind(this, this.reportUserActivity),
                      e = function (a) {
                        // #1068 - Prevent mousemove spamming
                        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970
                        (a.screenX === b && a.screenY === c) ||
                          ((b = a.screenX), (c = a.screenY), d());
                      },
                      f = function () {
                        d(),
                          // For as long as the they are touching the device or have their mouse down,
                          // we consider them active even if they're not moving their finger or mouse.
                          // So we want to continue to update that they are active
                          this.clearInterval(a),
                          // Setting userActivity=true now and setting the interval to the same time
                          // as the activityCheck interval (250) should ensure we never miss the
                          // next activityCheck
                          (a = this.setInterval(d, 250));
                      },
                      g = function (b) {
                        d(),
                          // Stop the interval that maintains activity if the mouse/touch is down
                          this.clearInterval(a);
                      };
                    // Any mouse movement will be considered user activity
                    this.on("mousedown", f),
                      this.on("mousemove", e),
                      this.on("mouseup", g),
                      // Listen for keyboard navigation
                      // Shouldn't need to use inProgress interval because of key repeat
                      this.on("keydown", d),
                      this.on("keyup", d);
                    // Run an interval every 250 milliseconds instead of stuffing everything into
                    // the mousemove/touchmove function itself, to prevent performance degradation.
                    // `this.reportUserActivity` simply sets this.userActivity_ to true, which
                    // then gets picked up by this loop
                    // http://ejohn.org/blog/learning-from-twitter/
                    var h = void 0;
                    this.setInterval(function () {
                      // Check to see if mouse/touch activity has happened
                      if (this.userActivity_) {
                        // Reset the activity tracker
                        (this.userActivity_ = !1),
                          // If the user state was inactive, set the state to active
                          this.userActive(!0),
                          // Clear any existing inactivity timeout to start the timer over
                          this.clearTimeout(h);
                        var a = this.options_.inactivityTimeout;
                        a > 0 &&
                          // In <timeout> milliseconds, if no more activity has occurred the
                          // user will be considered inactive
                          (h = this.setTimeout(function () {
                            // Protect against the case where the inactivityTimeout can trigger just
                            // before the next user activity is picked up by the activityCheck loop
                            // causing a flicker
                            this.userActivity_ || this.userActive(!1);
                          }, a));
                      }
                    }, 250);
                  }),
                  (b.prototype.playbackRate = function (a) {
                    return void 0 !== a
                      ? (this.techCall_("setPlaybackRate", a), this)
                      : this.tech_ && this.tech_.featuresPlaybackRate
                      ? this.techGet_("playbackRate")
                      : 1;
                  }),
                  (b.prototype.isAudio = function (a) {
                    return void 0 !== a
                      ? ((this.isAudio_ = !!a), this)
                      : !!this.isAudio_;
                  }),
                  (b.prototype.networkState = function () {
                    return this.techGet_("networkState");
                  }),
                  (b.prototype.readyState = function () {
                    return this.techGet_("readyState");
                  }),
                  (b.prototype.videoTracks = function () {
                    // if we have not yet loadTech_, we create videoTracks_
                    // these will be passed to the tech during loading
                    // if we have not yet loadTech_, we create videoTracks_
                    // these will be passed to the tech during loading
                    return this.tech_
                      ? this.tech_.videoTracks()
                      : ((this.videoTracks_ =
                          this.videoTracks_ || new U["default"]()),
                        this.videoTracks_);
                  }),
                  (b.prototype.audioTracks = function () {
                    // if we have not yet loadTech_, we create videoTracks_
                    // these will be passed to the tech during loading
                    // if we have not yet loadTech_, we create videoTracks_
                    // these will be passed to the tech during loading
                    return this.tech_
                      ? this.tech_.audioTracks()
                      : ((this.audioTracks_ =
                          this.audioTracks_ || new S["default"]()),
                        this.audioTracks_);
                  }),
                  (b.prototype.textTracks = function () {
                    // cannot use techGet_ directly because it checks to see whether the tech is ready.
                    // Flash is unlikely to be ready in time but textTracks should still work.
                    return this.tech_ && this.tech_.textTracks();
                  }),
                  (b.prototype.remoteTextTracks = function () {
                    return this.tech_ && this.tech_.remoteTextTracks();
                  }),
                  (b.prototype.remoteTextTrackEls = function () {
                    return this.tech_ && this.tech_.remoteTextTrackEls();
                  }),
                  (b.prototype.addTextTrack = function (a, b, c) {
                    return this.tech_ && this.tech_.addTextTrack(a, b, c);
                  }),
                  (b.prototype.addRemoteTextTrack = function (a) {
                    return this.tech_ && this.tech_.addRemoteTextTrack(a);
                  }),
                  (b.prototype.removeRemoteTextTrack = function () {
                    var a =
                        arguments.length <= 0 || void 0 === arguments[0]
                          ? {}
                          : arguments[0],
                      b = a.track,
                      c = void 0 === b ? arguments[0] : b;
                    // jshint ignore:line
                    this.tech_ && this.tech_.removeRemoteTextTrack(c);
                  }),
                  (b.prototype.videoWidth = function () {
                    return (
                      (this.tech_ &&
                        this.tech_.videoWidth &&
                        this.tech_.videoWidth()) ||
                      0
                    );
                  }),
                  (b.prototype.videoHeight = function () {
                    return (
                      (this.tech_ &&
                        this.tech_.videoHeight &&
                        this.tech_.videoHeight()) ||
                      0
                    );
                  }),
                  (b.prototype.language = function (a) {
                    return void 0 === a
                      ? this.language_
                      : ((this.language_ = ("" + a).toLowerCase()), this);
                  }),
                  (b.prototype.languages = function () {
                    return O["default"](
                      b.prototype.options_.languages,
                      this.languages_
                    );
                  }),
                  (b.prototype.toJSON = function () {
                    var a = O["default"](this.options_),
                      b = a.tracks;
                    a.tracks = [];
                    for (var c = 0; c < b.length; c++) {
                      var d = b[c];
                      // deep merge tracks and null out player so no circular references
                      (d = O["default"](d)),
                        (d.player = void 0),
                        (a.tracks[c] = d);
                    }
                    return a;
                  }),
                  (b.prototype.createModal = function (a, b) {
                    var c = this;
                    (b = b || {}), (b.content = a || "");
                    var d = new ca["default"](c, b);
                    return (
                      c.addChild(d),
                      d.on("dispose", function () {
                        c.removeChild(d);
                      }),
                      d.open()
                    );
                  }),
                  (b.getTagSettings = function (a) {
                    var b = { sources: [], tracks: [] },
                      c = q.getElAttributes(a),
                      d = c["data-setup"];
                    // Check if data-setup attr exists.
                    if (null !== d) {
                      // Parse options JSON
                      var e = K["default"](d || "{}"),
                        f = e[0],
                        g = e[1];
                      f && y["default"].error(f), M["default"](c, g);
                    }
                    // Get tag children settings
                    if ((M["default"](b, c), a.hasChildNodes()))
                      for (
                        var h = a.childNodes, i = 0, j = h.length;
                        i < j;
                        i++
                      ) {
                        var k = h[i],
                          l = k.nodeName.toLowerCase();
                        "source" === l
                          ? b.sources.push(q.getElAttributes(k))
                          : "track" === l &&
                            b.tracks.push(q.getElAttributes(k));
                      }
                    return b;
                  }),
                  b
                );
              })(i["default"]));
          ga.players = {};
          var ha = m["default"].navigator;
          /*
           * Player instance options, surfaced using options
           * options = Player.prototype.options_
           * Make changes in options, not here.
           *
           * @type {Object}
           * @private
           */
          (ga.prototype.options_ = {
            // Default order of fallback technology
            techOrder: ["html5", "flash"],
            // techOrder: ['flash','html5'],
            html5: {},
            flash: {},
            // defaultVolume: 0.85,
            defaultVolume: 0, // The freakin seaguls are driving me crazy!
            // default inactivity timeout
            inactivityTimeout: 2e3,
            // default playback rates
            playbackRates: [],
            // Add playback rate selection by adding rates
            // 'playbackRates': [0.5, 1, 1.5, 2],
            // Included control sets
            children: [
              "mediaLoader",
              "posterImage",
              "textTrackDisplay",
              "loadingSpinner",
              "bigPlayButton",
              "controlBar",
              "errorDisplay",
              "textTrackSettings",
            ],
            language:
              (ha.languages && ha.languages[0]) ||
              ha.userLanguage ||
              ha.language ||
              "en",
            // locales and their language translations
            languages: {},
            // Default message to show when a video cannot be played.
            notSupportedMessage:
              "No compatible source was found for this media.",
          }),
            /**
             * Fired when the user agent begins looking for media data
             *
             * @event loadstart
             */ ga.prototype.handleTechLoadStart_,
            /**
             * Fired when the player has initial duration and dimension information
             *
             * @event loadedmetadata
             */ ga.prototype.handleLoadedMetaData_,
            /**
             * Fired when the player receives text data
             *
             * @event textdata
             */ ga.prototype.handleTextData_,
            /**
             * Fired when the player has downloaded data at the current playback position
             *
             * @event loadeddata
             */ ga.prototype.handleLoadedData_,
            /**
             * Fired when the user is active, e.g. moves the mouse over the player
             *
             * @event useractive
             */ ga.prototype.handleUserActive_,
            /**
             * Fired when the user is inactive, e.g. a short delay after the last mouse move or control interaction
             *
             * @event userinactive
             */ ga.prototype.handleUserInactive_,
            /**
             * Fired when the current playback position has changed *
             * During playback this is fired every 15-250 milliseconds, depending on the
             * playback technology in use.
             *
             * @event timeupdate
             */ ga.prototype.handleTimeUpdate_,
            /**
             * Fired when video playback ends
             *
             * @event ended
             */ ga.prototype.handleTechEnded_,
            /**
             * Fired when the volume changes
             *
             * @event volumechange
             */ ga.prototype.handleVolumeChange_,
            /**
             * Fired when an error occurs
             *
             * @event error
             */ ga.prototype.handleError_,
            (ga.prototype.flexNotSupported_ = function () {
              var a = k["default"].createElement("i");
              // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more
              // common flex features that we can rely on when checking for flex support.
              return !(
                "flexBasis" in a.style ||
                "webkitFlexBasis" in a.style ||
                "mozFlexBasis" in a.style ||
                "msFlexBasis" in a.style ||
                "msFlexOrder" in a.style
              );
            }),
            i["default"].registerComponent("Player", ga),
            (c["default"] = ga),
            (b.exports = c["default"]);
        },
        {
          "./big-play-button.js": 63,
          "./component.js": 67,
          "./control-bar/control-bar.js": 70,
          "./error-display.js": 103,
          "./fullscreen-api.js": 106,
          "./loading-spinner.js": 107,
          "./media-error.js": 108,
          "./modal-dialog": 112,
          "./poster-image.js": 117,
          "./tech/html5.js": 122,
          "./tech/loader.js": 123,
          "./tech/tech.js": 124,
          "./tracks/audio-track-list.js": 125,
          "./tracks/text-track-display.js": 130,
          "./tracks/text-track-list-converter.js": 131,
          "./tracks/text-track-settings.js": 133,
          "./tracks/video-track-list.js": 138,
          "./utils/browser.js": 140,
          "./utils/buffer.js": 141,
          "./utils/dom.js": 142,
          "./utils/events.js": 143,
          "./utils/fn.js": 144,
          "./utils/guid.js": 146,
          "./utils/log.js": 147,
          "./utils/merge-options.js": 148,
          "./utils/stylesheet.js": 149,
          "./utils/time-ranges.js": 150,
          "./utils/to-title-case.js": 151,
          "global/document": 1,
          "global/window": 2,
          "object.assign": 45,
          "safe-json-parse/tuple": 54,
        },
      ],
      114: [
        function (a, b, c) {
          /**
           * @file plugins.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          var e = a("./player.js"),
            f = d(e),
            g = function (a, b) {
              f["default"].prototype[a] = b;
            };
          (c["default"] = g), (b.exports = c["default"]);
        },
        { "./player.js": 113 },
      ],
      115: [
        function (a, b, c) {
          /**
           * @file popup-button.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../clickable-component.js"),
            i = e(h),
            j = a("../component.js"),
            k = e(j),
            l = a("./popup.js"),
            m = (e(l), a("../utils/dom.js")),
            n = (d(m), a("../utils/fn.js")),
            o = (d(n), a("../utils/to-title-case.js")),
            p =
              (e(o),
              (function (a) {
                function b(c) {
                  var d =
                    arguments.length <= 1 || void 0 === arguments[1]
                      ? {}
                      : arguments[1];
                  f(this, b), a.call(this, c, d), this.update();
                }
                /**
                 * Update popup
                 *
                 * @method update
                 */
                /**
                 * Create popup - Override with specific functionality for component
                 *
                 * @return {Popup} The constructed popup
                 * @method createPopup
                 */
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                /**
                 * Allow sub components to stack CSS class names
                 *
                 * @return {String} The constructed class name
                 * @method buildCSSClass
                 */
                return (
                  g(b, a),
                  (b.prototype.update = function () {
                    var a = this.createPopup();
                    this.popup && this.removeChild(this.popup),
                      (this.popup = a),
                      this.addChild(a),
                      this.items && 0 === this.items.length
                        ? this.hide()
                        : this.items && this.items.length > 1 && this.show();
                  }),
                  (b.prototype.createPopup = function () {}),
                  (b.prototype.createEl = function () {
                    return a.prototype.createEl.call(this, "div", {
                      className: this.buildCSSClass(),
                    });
                  }),
                  (b.prototype.buildCSSClass = function () {
                    var b = "vjs-menu-button";
                    // If the inline option is passed, we want to use different styles altogether.
                    return (
                      (b += this.options_.inline === !0 ? "-inline" : "-popup"),
                      "vjs-menu-button " +
                        b +
                        " " +
                        a.prototype.buildCSSClass.call(this)
                    );
                  }),
                  b
                );
              })(i["default"]));
          k["default"].registerComponent("PopupButton", p),
            (c["default"] = p),
            (b.exports = c["default"]);
        },
        {
          "../clickable-component.js": 65,
          "../component.js": 67,
          "../utils/dom.js": 142,
          "../utils/fn.js": 144,
          "../utils/to-title-case.js": 151,
          "./popup.js": 116,
        },
      ],
      116: [
        function (a, b, c) {
          /**
           * @file popup.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../component.js"),
            i = e(h),
            j = a("../utils/dom.js"),
            k = d(j),
            l = a("../utils/fn.js"),
            m = d(l),
            n = a("../utils/events.js"),
            o = d(n),
            p = (function (a) {
              function b() {
                f(this, b), a.apply(this, arguments);
              }
              /**
               * Add a popup item to the popup
               *
               * @param {Object|String} component Component or component type to add
               * @method addItem
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              return (
                g(b, a),
                (b.prototype.addItem = function (a) {
                  this.addChild(a),
                    a.on(
                      "click",
                      m.bind(this, function () {
                        this.unlockShowing();
                      })
                    );
                }),
                (b.prototype.createEl = function () {
                  var b = this.options_.contentElType || "ul";
                  this.contentEl_ = k.createEl(b, {
                    className: "vjs-menu-content",
                  });
                  var c = a.prototype.createEl.call(this, "div", {
                    append: this.contentEl_,
                    className: "vjs-menu",
                  });
                  // Prevent clicks from bubbling up. Needed for Popup Buttons,
                  // where a click on the parent is significant
                  return (
                    c.appendChild(this.contentEl_),
                    o.on(c, "click", function (a) {
                      a.preventDefault(), a.stopImmediatePropagation();
                    }),
                    c
                  );
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("Popup", p),
            (c["default"] = p),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "../utils/dom.js": 142,
          "../utils/events.js": 143,
          "../utils/fn.js": 144,
        },
      ],
      117: [
        function (a, b, c) {
          /**
           * @file poster-image.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./clickable-component.js"),
            i = e(h),
            j = a("./component.js"),
            k = e(j),
            l = a("./utils/fn.js"),
            m = d(l),
            n = a("./utils/dom.js"),
            o = d(n),
            p = a("./utils/browser.js"),
            q = d(p),
            r = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.update(),
                  c.on("posterchange", m.bind(this, this.update));
              }
              /**
               * Clean up the poster image
               *
               * @method dispose
               */
              /**
               * Create the poster's image element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Event handler for updates to the player's poster source
               *
               * @method update
               */
              /**
               * Set the poster source depending on the display method
               *
               * @param {String} url The URL to the poster source
               * @method setSrc
               */
              /**
               * Event handler for clicks on the poster image
               *
               * @method handleClick
               */
              return (
                g(b, a),
                (b.prototype.dispose = function () {
                  this.player().off("posterchange", this.update),
                    a.prototype.dispose.call(this);
                }),
                (b.prototype.createEl = function () {
                  var a = o.createEl("div", {
                    className: "vjs-poster",
                    // Don't want poster to be tabbable.
                    tabIndex: -1,
                  });
                  // To ensure the poster image resizes while maintaining its original aspect
                  // ratio, use a div with `background-size` when available. For browsers that
                  // do not support `background-size` (e.g. IE8), fall back on using a regular
                  // img element.
                  return (
                    q.BACKGROUND_SIZE_SUPPORTED ||
                      ((this.fallbackImg_ = o.createEl("img")),
                      a.appendChild(this.fallbackImg_)),
                    a
                  );
                }),
                (b.prototype.update = function () {
                  var a = this.player().poster();
                  this.setSrc(a),
                    // If there's no poster source we should display:none on this component
                    // so it's not still clickable or right-clickable
                    a ? this.show() : this.hide();
                }),
                (b.prototype.setSrc = function (a) {
                  if (this.fallbackImg_) this.fallbackImg_.src = a;
                  else {
                    var b = "";
                    // Any falsey values should stay as an empty string, otherwise
                    // this will throw an extra error
                    a && (b = 'url("' + a + '")'),
                      (this.el_.style.backgroundImage = b);
                  }
                }),
                (b.prototype.handleClick = function () {
                  // We don't want a click to trigger playback when controls are disabled
                  // but CSS should be hiding the poster to prevent that from happening
                  this.player_.paused()
                    ? this.player_.play()
                    : this.player_.pause();
                }),
                b
              );
            })(i["default"]);
          k["default"].registerComponent("PosterImage", r),
            (c["default"] = r),
            (b.exports = c["default"]);
        },
        {
          "./clickable-component.js": 65,
          "./component.js": 67,
          "./utils/browser.js": 140,
          "./utils/dom.js": 142,
          "./utils/fn.js": 144,
        },
      ],
      118: [
        function (a, b, c) {
          /**
           * @file setup.js
           *
           * Functions for automatically setting up a player
           * based on the data-setup attribute of the video tag
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          c.__esModule = !0;
          var f = a("./utils/events.js"),
            g = e(f),
            h = a("global/document"),
            i = d(h),
            j = a("global/window"),
            k = d(j),
            l = !1,
            m = void 0,
            n = function () {
              // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*
              // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));
              // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));
              // var mediaEls = vids.concat(audios);
              // Because IE8 doesn't support calling slice on a node list, we need to loop through each list of elements
              // to build up a new, combined list of elements.
              var a = i["default"].getElementsByTagName("video"),
                b = i["default"].getElementsByTagName("audio"),
                c = [];
              if (a && a.length > 0)
                for (var d = 0, e = a.length; d < e; d++) c.push(a[d]);
              if (b && b.length > 0)
                for (var d = 0, e = b.length; d < e; d++) c.push(b[d]);
              // Check if any media elements exist
              if (c && c.length > 0)
                for (var d = 0, e = c.length; d < e; d++) {
                  var f = c[d];
                  // Check if element exists, has getAttribute func.
                  // IE seems to consider typeof el.getAttribute == 'object' instead of 'function' like expected, at least when loading the player immediately.
                  if (!f || !f.getAttribute) {
                    o(1);
                    break;
                  }
                  // Make sure this player hasn't already been set up.
                  if (void 0 === f.player) {
                    var g = f.getAttribute("data-setup");
                    // Check if data-setup attr exists.
                    // We only auto-setup if they've added the data-setup attr.
                    if (null !== g) {
                      m(f);
                    }
                  }
                }
              else l || o(1);
            },
            o = function (a, b) {
              b && (m = b), setTimeout(n, a);
            };
          "complete" === i["default"].readyState
            ? (l = !0)
            : g.one(k["default"], "load", function () {
                l = !0;
              });
          var p = function () {
            return l;
          };
          (c.autoSetup = n), (c.autoSetupTimeout = o), (c.hasLoaded = p);
        },
        { "./utils/events.js": 143, "global/document": 1, "global/window": 2 },
      ],
      119: [
        function (a, b, c) {
          /**
           * @file slider.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../component.js"),
            i = e(h),
            j = a("../utils/dom.js"),
            k = d(j),
            l = a("object.assign"),
            m = e(l),
            n = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  // Set property names to bar to match with the child Slider class is looking for
                  (this.bar = this.getChild(this.options_.barName)),
                  // Set a horizontal or vertical class on the slider depending on the slider type
                  this.vertical(!!this.options_.vertical),
                  this.on("mousedown", this.handleMouseDown),
                  this.on("touchstart", this.handleMouseDown),
                  this.on("focus", this.handleFocus),
                  this.on("blur", this.handleBlur),
                  this.on("click", this.handleClick),
                  this.on(c, "controlsvisible", this.update),
                  this.on(c, this.playerEvent, this.update);
              }
              /**
               * Create the component's DOM element
               *
               * @param {String} type Type of element to create
               * @param {Object=} props List of properties in Object form
               * @return {Element}
               * @method createEl
               */
              /**
               * Handle mouse down on slider
               *
               * @param {Object} event Mouse down event object
               * @method handleMouseDown
               */
              /**
               * To be overridden by a subclass
               *
               * @method handleMouseMove
               */
              /**
               * Handle mouse up on Slider
               *
               * @method handleMouseUp
               */
              /**
               * Update slider
               *
               * @method update
               */
              /**
               * Calculate distance for slider
               *
               * @param {Object} event Event object
               * @method calculateDistance
               */
              /**
               * Handle on focus for slider
               *
               * @method handleFocus
               */
              /**
               * Handle key press for slider
               *
               * @param {Object} event Event object
               * @method handleKeyPress
               */
              /**
               * Handle on blur for slider
               *
               * @method handleBlur
               */
              /**
               * Listener for click events on slider, used to prevent clicks
               *   from bubbling up to parent elements like button menus.
               *
               * @param {Object} event Event object
               * @method handleClick
               */
              /**
               * Get/set if slider is horizontal for vertical
               *
               * @param {Boolean} bool True if slider is vertical, false is horizontal
               * @return {Boolean} True if slider is vertical, false is horizontal
               * @method vertical
               */
              return (
                g(b, a),
                (b.prototype.createEl = function (b) {
                  var c =
                      arguments.length <= 1 || void 0 === arguments[1]
                        ? {}
                        : arguments[1],
                    d =
                      arguments.length <= 2 || void 0 === arguments[2]
                        ? {}
                        : arguments[2];
                  // Add the slider element class to all sub classes
                  return (
                    (c.className = c.className + " vjs-slider"),
                    (c = m["default"]({ tabIndex: 0 }, c)),
                    (d = m["default"](
                      {
                        role: "slider",
                        "aria-valuenow": 0,
                        "aria-valuemin": 0,
                        "aria-valuemax": 100,
                        tabIndex: 0,
                      },
                      d
                    )),
                    a.prototype.createEl.call(this, b, c, d)
                  );
                }),
                (b.prototype.handleMouseDown = function (a) {
                  var b = this.bar.el_.ownerDocument;
                  a.preventDefault(),
                    k.blockTextSelection(),
                    this.addClass("vjs-sliding"),
                    this.trigger("slideractive"),
                    this.on(b, "mousemove", this.handleMouseMove),
                    this.on(b, "mouseup", this.handleMouseUp),
                    this.on(b, "touchmove", this.handleMouseMove),
                    this.on(b, "touchend", this.handleMouseUp),
                    this.handleMouseMove(a);
                }),
                (b.prototype.handleMouseMove = function () {}),
                (b.prototype.handleMouseUp = function () {
                  var a = this.bar.el_.ownerDocument;
                  k.unblockTextSelection(),
                    this.removeClass("vjs-sliding"),
                    this.trigger("sliderinactive"),
                    this.off(a, "mousemove", this.handleMouseMove),
                    this.off(a, "mouseup", this.handleMouseUp),
                    this.off(a, "touchmove", this.handleMouseMove),
                    this.off(a, "touchend", this.handleMouseUp),
                    this.update();
                }),
                (b.prototype.update = function () {
                  // In VolumeBar init we have a setTimeout for update that pops and update to the end of the
                  // execution stack. The player is destroyed before then update will cause an error
                  if (this.el_) {
                    // If scrubbing, we could use a cached value to make the handle keep up with the user's mouse.
                    // On HTML5 browsers scrubbing is really smooth, but some flash players are slow, so we might want to utilize this later.
                    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();
                    var a = this.getPercent(),
                      b = this.bar;
                    // If there's no bar...
                    if (b) {
                      // Protect against no duration and other division issues
                      ("number" != typeof a ||
                        a !== a ||
                        a < 0 ||
                        a === 1 / 0) &&
                        (a = 0);
                      // Convert to a percentage for setting
                      var c = (100 * a).toFixed(2) + "%";
                      // Set the new bar width or height
                      this.vertical()
                        ? (b.el().style.height = c)
                        : (b.el().style.width = c);
                    }
                  }
                }),
                (b.prototype.calculateDistance = function (a) {
                  var b = k.getPointerPosition(this.el_, a);
                  return this.vertical() ? b.y : b.x;
                }),
                (b.prototype.handleFocus = function () {
                  this.on(
                    this.bar.el_.ownerDocument,
                    "keydown",
                    this.handleKeyPress
                  );
                }),
                (b.prototype.handleKeyPress = function (a) {
                  37 === a.which || 40 === a.which
                    ? // Left and Down Arrows
                      (a.preventDefault(), this.stepBack())
                    : (38 !== a.which && 39 !== a.which) ||
                      // Up and Right Arrows
                      (a.preventDefault(), this.stepForward());
                }),
                (b.prototype.handleBlur = function () {
                  this.off(
                    this.bar.el_.ownerDocument,
                    "keydown",
                    this.handleKeyPress
                  );
                }),
                (b.prototype.handleClick = function (a) {
                  a.stopImmediatePropagation(), a.preventDefault();
                }),
                (b.prototype.vertical = function (a) {
                  return void 0 === a
                    ? this.vertical_ || !1
                    : ((this.vertical_ = !!a),
                      this.vertical_
                        ? this.addClass("vjs-slider-vertical")
                        : this.addClass("vjs-slider-horizontal"),
                      this);
                }),
                b
              );
            })(i["default"]);
          i["default"].registerComponent("Slider", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        { "../component.js": 67, "../utils/dom.js": 142, "object.assign": 45 },
      ],
      120: [
        function (a, b, c) {
          /**
           * @file flash-rtmp.js
           */
          "use strict";
          function d(a) {
            // RTMP has four variations, any string starting
            // with one of these protocols should be valid
            /**
             * A source handler for RTMP urls
             * @type {Object}
             */
            /**
             * Check if Flash can play the given videotype
             * @param  {String} type    The mimetype to check
             * @return {String}         'probably', 'maybe', or '' (empty string)
             */
            /**
             * Check if Flash can handle the source natively
             * @param  {Object} source  The source object
             * @param  {Object} options The options passed to the tech
             * @return {String}         'probably', 'maybe', or '' (empty string)
             */
            /**
             * Pass the source to the flash object
             * Adaptive source handlers will have more complicated workflows before passing
             * video data to the video element
             * @param  {Object} source   The source object
             * @param  {Flash}  tech     The instance of the Flash tech
             * @param  {Object} options  The options to pass to the source
             */
            // Register the native source handler
            return (
              (a.streamingFormats = { "rtmp/mp4": "MP4", "rtmp/flv": "FLV" }),
              (a.streamFromParts = function (a, b) {
                return a + "&" + b;
              }),
              (a.streamToParts = function (a) {
                var b = { connection: "", stream: "" };
                if (!a) return b;
                // Look for the normal URL separator we expect, '&'.
                // If found, we split the URL into two pieces around the
                // first '&'.
                var c = a.search(/&(?!\w+=)/),
                  d = void 0;
                // If there's not a '&', we use the last '/' as the delimiter.
                // really, there's not a '/'?
                return (
                  c !== -1
                    ? (d = c + 1)
                    : ((c = d = a.lastIndexOf("/") + 1),
                      0 === c && (c = d = a.length)),
                  (b.connection = a.substring(0, c)),
                  (b.stream = a.substring(d, a.length)),
                  b
                );
              }),
              (a.isStreamingType = function (b) {
                return b in a.streamingFormats;
              }),
              (a.RTMP_RE = /^rtmp[set]?:\/\//i),
              (a.isStreamingSrc = function (b) {
                return a.RTMP_RE.test(b);
              }),
              (a.rtmpSourceHandler = {}),
              (a.rtmpSourceHandler.canPlayType = function (b) {
                return a.isStreamingType(b) ? "maybe" : "";
              }),
              (a.rtmpSourceHandler.canHandleSource = function (b, c) {
                var d = a.rtmpSourceHandler.canPlayType(b.type);
                return d ? d : a.isStreamingSrc(b.src) ? "maybe" : "";
              }),
              (a.rtmpSourceHandler.handleSource = function (b, c, d) {
                var e = a.streamToParts(b.src);
                c.setRtmpConnection(e.connection), c.setRtmpStream(e.stream);
              }),
              a.registerSourceHandler(a.rtmpSourceHandler),
              a
            );
          }
          (c.__esModule = !0), (c["default"] = d), (b.exports = c["default"]);
        },
        {},
      ],
      121: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          function h(a) {
            var b = a.charAt(0).toUpperCase() + a.slice(1);
            A["set" + b] = function (b) {
              return this.el_.vjs_setProperty(a, b);
            };
          }
          function i(a) {
            A[a] = function () {
              return this.el_.vjs_getProperty(a);
            };
          }
          c.__esModule = !0;
          // Create getter and setters for all read/write attributes
          for (
            var j = a("./tech"),
              k = e(j),
              l = a("../utils/dom.js"),
              m = d(l),
              n = a("../utils/url.js"),
              o = d(n),
              p = a("../utils/time-ranges.js"),
              q = a("./flash-rtmp"),
              r = e(q),
              s = a("../component"),
              t = e(s),
              u = a("global/window"),
              v = e(u),
              w = a("object.assign"),
              x = e(w),
              y = v["default"].navigator,
              z = (function (a) {
                function b(c, d) {
                  f(this, b),
                    a.call(this, c, d),
                    // Set the source when ready
                    c.source &&
                      this.ready(function () {
                        this.setSource(c.source);
                      }, !0),
                    // Having issues with Flash reloading on certain page actions (hide/resize/fullscreen) in certain browsers
                    // This allows resetting the playhead when we catch the reload
                    c.startTime &&
                      this.ready(function () {
                        this.load(), this.play(), this.currentTime(c.startTime);
                      }, !0),
                    // Add global window functions that the swf expects
                    // A 4.x workflow we weren't able to solve for in 5.0
                    // because of the need to hard code these functions
                    // into the swf for security reasons
                    (v["default"].videojs = v["default"].videojs || {}),
                    (v["default"].videojs.Flash =
                      v["default"].videojs.Flash || {}),
                    (v["default"].videojs.Flash.onReady = b.onReady),
                    (v["default"].videojs.Flash.onEvent = b.onEvent),
                    (v["default"].videojs.Flash.onError = b.onError),
                    this.on("seeked", function () {
                      this.lastSeekTarget_ = void 0;
                    });
                }
                // Create setters and getters for attributes
                /**
                 * Create the component's DOM element
                 *
                 * @return {Element}
                 * @method createEl
                 */
                /**
                 * Play for flash tech
                 *
                 * @method play
                 */
                /**
                 * Pause for flash tech
                 *
                 * @method pause
                 */
                /**
                 * Get/set video
                 *
                 * @param {Object=} src Source object
                 * @return {Object}
                 * @method src
                 */
                /**
                 * Set video
                 *
                 * @param {Object=} src Source object
                 * @deprecated
                 * @method setSrc
                 */
                /**
                 * Returns true if the tech is currently seeking.
                 * @return {boolean} true if seeking
                 */
                /**
                 * Set current time
                 *
                 * @param {Number} time Current time of video
                 * @method setCurrentTime
                 */
                /**
                 * Get current time
                 *
                 * @param {Number=} time Current time of video
                 * @return {Number} Current time
                 * @method currentTime
                 */
                /**
                 * Get current source
                 *
                 * @method currentSrc
                 */
                /**
                 * Get media duration
                 *
                 * @returns {Number} Media duration
                 */
                /**
                 * Load media into player
                 *
                 * @method load
                 */
                /**
                 * Get poster
                 *
                 * @method poster
                 */
                /**
                 * Poster images are not handled by the Flash tech so make this a no-op
                 *
                 * @method setPoster
                 */
                /**
                 * Determine if can seek in media
                 *
                 * @return {TimeRangeObject}
                 * @method seekable
                 */
                /**
                 * Get buffered time range
                 *
                 * @return {TimeRangeObject}
                 * @method buffered
                 */
                /**
                 * Get fullscreen support -
                 * Flash does not allow fullscreen through javascript
                 * so always returns false
                 *
                 * @return {Boolean} false
                 * @method supportsFullScreen
                 */
                /**
                 * Request to enter fullscreen
                 * Flash does not allow fullscreen through javascript
                 * so always returns false
                 *
                 * @return {Boolean} false
                 * @method enterFullScreen
                 */
                return (
                  g(b, a),
                  (b.prototype.createEl = function () {
                    var a = this.options_;
                    a.swf ||
                      (a.swf = "//vjs.zencdn.net/swf/5.1.0/video-js.swf");
                    // Generate ID for swf object
                    var c = a.techId,
                      d = x["default"](
                        {
                          // SWF Callback Functions
                          readyFunction: "videojs.Flash.onReady",
                          eventProxyFunction: "videojs.Flash.onEvent",
                          errorEventProxyFunction: "videojs.Flash.onError",
                          // Player Settings
                          autoplay: a.autoplay,
                          preload: a.preload,
                          loop: a.loop,
                          muted: a.muted,
                        },
                        a.flashVars
                      ),
                      e = x["default"](
                        {
                          wmode: "opaque", // Opaque is needed to overlay controls, but can affect playback performance
                          bgcolor: "#000000",
                        },
                        a.params
                      ),
                      f = x["default"](
                        {
                          id: c,
                          name: c, // Both ID and Name needed or swf to identify itself
                          class: "vjs-tech",
                        },
                        a.attributes
                      );
                    return (
                      (this.el_ = b.embed(a.swf, d, e, f)),
                      (this.el_.tech = this),
                      this.el_
                    );
                  }),
                  (b.prototype.play = function () {
                    this.ended() && this.setCurrentTime(0), this.el_.vjs_play();
                  }),
                  (b.prototype.pause = function () {
                    this.el_.vjs_pause();
                  }),
                  (b.prototype.src = function (a) {
                    return void 0 === a ? this.currentSrc() : this.setSrc(a);
                  }),
                  (b.prototype.setSrc = function (a) {
                    // Currently the SWF doesn't autoplay if you load a source later.
                    // e.g. Load player w/ no source, wait 2s, set src.
                    if (
                      // Make sure source URL is absolute.
                      ((a = o.getAbsoluteURL(a)),
                      this.el_.vjs_src(a),
                      this.autoplay())
                    ) {
                      var b = this;
                      this.setTimeout(function () {
                        b.play();
                      }, 0);
                    }
                  }),
                  (b.prototype.seeking = function () {
                    return void 0 !== this.lastSeekTarget_;
                  }),
                  (b.prototype.setCurrentTime = function (b) {
                    var c = this.seekable();
                    c.length &&
                      // clamp to the current seekable range
                      ((b = b > c.start(0) ? b : c.start(0)),
                      (b = b < c.end(c.length - 1) ? b : c.end(c.length - 1)),
                      (this.lastSeekTarget_ = b),
                      this.trigger("seeking"),
                      this.el_.vjs_setProperty("currentTime", b),
                      a.prototype.setCurrentTime.call(this));
                  }),
                  (b.prototype.currentTime = function (a) {
                    // when seeking make the reported time keep up with the requested time
                    // by reading the time we're seeking to
                    // when seeking make the reported time keep up with the requested time
                    // by reading the time we're seeking to
                    return this.seeking()
                      ? this.lastSeekTarget_ || 0
                      : this.el_.vjs_getProperty("currentTime");
                  }),
                  (b.prototype.currentSrc = function () {
                    return this.currentSource_
                      ? this.currentSource_.src
                      : this.el_.vjs_getProperty("currentSrc");
                  }),
                  (b.prototype.duration = function c() {
                    if (0 === this.readyState()) return NaN;
                    var c = this.el_.vjs_getProperty("duration");
                    return c >= 0 ? c : 1 / 0;
                  }),
                  (b.prototype.load = function () {
                    this.el_.vjs_load();
                  }),
                  (b.prototype.poster = function () {
                    this.el_.vjs_getProperty("poster");
                  }),
                  (b.prototype.setPoster = function () {}),
                  (b.prototype.seekable = function () {
                    var a = this.duration();
                    return 0 === a
                      ? p.createTimeRange()
                      : p.createTimeRange(0, a);
                  }),
                  (b.prototype.buffered = function () {
                    var a = this.el_.vjs_getProperty("buffered");
                    return 0 === a.length
                      ? p.createTimeRange()
                      : p.createTimeRange(a[0][0], a[0][1]);
                  }),
                  (b.prototype.supportsFullScreen = function () {
                    return !1;
                  }),
                  (b.prototype.enterFullScreen = function () {
                    return !1;
                  }),
                  b
                );
              })(k["default"]),
              A = z.prototype,
              B = "rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted".split(
                ","
              ),
              C = "networkState,readyState,initialTime,startOffsetTime,paused,ended,videoWidth,videoHeight".split(
                ","
              ),
              D = 0;
            D < B.length;
            D++
          )
            i(B[D]), h(B[D]);
          // Create getters for read-only attributes
          for (var D = 0; D < C.length; D++)
            i(
              C[D]
            ); /* Flash Support Testing -------------------------------------------------------- */
          (z.isSupported = function () {
            return z.version()[0] >= 10;
          }),
            // Add Source Handler pattern functions to this tech
            k["default"].withSourceHandlers(z),
            /*
             * The default native source handler.
             * This simply passes the source to the video element. Nothing fancy.
             *
             * @param  {Object} source   The source object
             * @param  {Flash} tech  The instance of the Flash tech
             */ (z.nativeSourceHandler = {}),
            /**
             * Check if Flash can play the given videotype
             * @param  {String} type    The mimetype to check
             * @return {String}         'probably', 'maybe', or '' (empty string)
             */ (z.nativeSourceHandler.canPlayType = function (a) {
              return a in z.formats ? "maybe" : "";
            }),
            /*
             * Check Flash can handle the source natively
             *
             * @param  {Object} source  The source object
             * @param  {Object} options The options passed to the tech
             * @return {String}         'probably', 'maybe', or '' (empty string)
             */ (z.nativeSourceHandler.canHandleSource = function (a, b) {
              function c(a) {
                var b = o.getFileExtension(a);
                return b ? "video/" + b : "";
              }
              var d;
              // Strip code information from the type because we don't get that specific
              return (
                (d = a.type
                  ? a.type.replace(/;.*/, "").toLowerCase()
                  : c(a.src)),
                z.nativeSourceHandler.canPlayType(d)
              );
            }),
            /*
             * Pass the source to the flash object
             * Adaptive source handlers will have more complicated workflows before passing
             * video data to the video element
             *
             * @param  {Object} source   The source object
             * @param  {Flash}  tech     The instance of the Flash tech
             * @param  {Object} options  The options to pass to the source
             */ (z.nativeSourceHandler.handleSource = function (a, b, c) {
              b.setSrc(a.src);
            }),
            /*
             * Clean up the source handler when disposing the player or switching sources..
             * (no cleanup is needed when supporting the format natively)
             */ (z.nativeSourceHandler.dispose = function () {}),
            // Register the native source handler
            z.registerSourceHandler(z.nativeSourceHandler),
            (z.formats = {
              "video/flv": "FLV",
              "video/x-flv": "FLV",
              "video/mp4": "MP4",
              "video/m4v": "MP4",
            }),
            (z.onReady = function (a) {
              var b = m.getEl(a),
                c = b && b.tech;
              // if there is no el then the tech has been disposed
              // and the tech element was removed from the player div
              c &&
                c.el() &&
                // check that the flash object is really ready
                z.checkReady(c);
            }),
            // The SWF isn't always ready when it says it is. Sometimes the API functions still need to be added to the object.
            // If it's not ready, we set a timeout to check again shortly.
            (z.checkReady = function (a) {
              // stop worrying if the tech has been disposed
              a.el() &&
                // check if API property exists
                (a.el().vjs_getProperty
                  ? // tell tech it's ready
                    a.triggerReady()
                  : // wait longer
                    this.setTimeout(function () {
                      z.checkReady(a);
                    }, 50));
            }),
            // Trigger events from the swf on the player
            (z.onEvent = function (a, b) {
              var c = m.getEl(a).tech;
              c.trigger(b, Array.prototype.slice.call(arguments, 2));
            }),
            // Log errors from the swf
            (z.onError = function (a, b) {
              var c = m.getEl(a).tech;
              // trigger MEDIA_ERR_SRC_NOT_SUPPORTED
              // trigger MEDIA_ERR_SRC_NOT_SUPPORTED
              // trigger a custom error
              return "srcnotfound" === b
                ? c.error(4)
                : void c.error("FLASH: " + b);
            }),
            // Flash Version Check
            (z.version = function () {
              var a = "0,0,0";
              // IE
              try {
                a = new v["default"].ActiveXObject(
                  "ShockwaveFlash.ShockwaveFlash"
                )
                  .GetVariable("$version")
                  .replace(/\D+/g, ",")
                  .match(/^,?(.+),?$/)[1];
              } catch (b) {
                try {
                  y.mimeTypes["application/x-shockwave-flash"].enabledPlugin &&
                    (a = (
                      y.plugins["Shockwave Flash 2.0"] ||
                      y.plugins["Shockwave Flash"]
                    ).description
                      .replace(/\D+/g, ",")
                      .match(/^,?(.+),?$/)[1]);
                } catch (c) {}
              }
              return a.split(",");
            }),
            // Flash embedding method. Only used in non-iframe mode
            (z.embed = function (a, b, c, d) {
              var e = z.getEmbedCode(a, b, c, d),
                f = m.createEl("div", { innerHTML: e }).childNodes[0];
              return f;
            }),
            (z.getEmbedCode = function (a, b, c, d) {
              var e = '<object type="application/x-shockwave-flash" ',
                f = "",
                g = "",
                h = "";
              // Convert flash vars to string
              // Add swf, flashVars, and other default params
              // Create param tags string
              // Create Attributes string
              return (
                b &&
                  Object.getOwnPropertyNames(b).forEach(function (a) {
                    f += a + "=" + b[a] + "&amp;";
                  }),
                (c = x["default"](
                  {
                    movie: a,
                    flashvars: f,
                    allowScriptAccess: "always", // Required to talk to swf
                    allowNetworking: "all",
                  },
                  c
                )),
                Object.getOwnPropertyNames(c).forEach(function (a) {
                  g += '<param name="' + a + '" value="' + c[a] + '" />';
                }),
                (d = x["default"](
                  {
                    // Add swf to attributes (need both for IE and Others to work)
                    data: a,
                    // Default to 100% width/height
                    width: "100%",
                    height: "100%",
                  },
                  d
                )),
                Object.getOwnPropertyNames(d).forEach(function (a) {
                  h += a + '="' + d[a] + '" ';
                }),
                "" + e + h + ">" + g + "</object>"
              );
            }),
            // Run Flash through the RTMP decorator
            r["default"](z),
            t["default"].registerComponent("Flash", z),
            k["default"].registerTech("Flash", z),
            (c["default"] = z),
            (b.exports = c["default"]);
        },
        {
          "../component": 67,
          "../utils/dom.js": 142,
          "../utils/time-ranges.js": 150,
          "../utils/url.js": 152,
          "./flash-rtmp": 120,
          "./tech": 124,
          "global/window": 2,
          "object.assign": 45,
        },
      ],
      122: [
        function (a, b, c) {
          /**
           * @file html5.js
           * HTML5 Media Controller - Wrapper for HTML5 Media API
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          function h(a, b) {
            return (a.raw = b), a;
          }
          c.__esModule = !0;
          var i = h(
              [
                "Text Tracks are being loaded from another origin but the crossorigin attribute isn't used. \n            This may prevent text tracks from loading.",
              ],
              [
                "Text Tracks are being loaded from another origin but the crossorigin attribute isn't used. \n            This may prevent text tracks from loading.",
              ]
            ),
            j = a("./tech.js"),
            k = e(j),
            l = a("../component"),
            m = e(l),
            n = a("../utils/dom.js"),
            o = d(n),
            p = a("../utils/url.js"),
            q = d(p),
            r = a("../utils/fn.js"),
            s = d(r),
            t = a("../utils/log.js"),
            u = e(t),
            v = a("tsml"),
            w = e(v),
            x = a("../../../src/js/tracks/text-track.js"),
            y = (e(x), a("../utils/browser.js")),
            z = d(y),
            A = a("global/document"),
            B = e(A),
            C = a("global/window"),
            D = e(C),
            E = a("object.assign"),
            F = e(E),
            G = a("../utils/merge-options.js"),
            H = e(G),
            I = a("../utils/to-title-case.js"),
            J = e(I),
            K = (function (a) {
              function b(c, d) {
                var e = this;
                f(this, b), a.call(this, c, d);
                var g = c.source,
                  h = !1;
                if (
                  // Set the source if one is provided
                  // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)
                  // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source
                  // anyway so the error gets fired.
                  (g &&
                  (this.el_.currentSrc !== g.src ||
                    (c.tag && 3 === c.tag.initNetworkState_))
                    ? this.setSource(g)
                    : this.handleLateInit_(this.el_),
                  this.el_.hasChildNodes())
                ) {
                  for (
                    var j = this.el_.childNodes, k = j.length, l = [];
                    k--;

                  ) {
                    var m = j[k],
                      n = m.nodeName.toLowerCase();
                    "track" === n &&
                      (this.featuresNativeTextTracks
                        ? // store HTMLTrackElement and TextTrack to remote list
                          (this.remoteTextTrackEls().addTrackElement_(m),
                          this.remoteTextTracks().addTrack_(m.track),
                          h ||
                            this.el_.hasAttribute("crossorigin") ||
                            !q.isCrossOrigin(m.src) ||
                            (h = !0))
                        : // Empty video tag tracks so the built-in player doesn't use them also.
                          // This may not be fast enough to stop HTML5 browsers from reading the tags
                          // so we'll need to turn off any default tracks if we're manually doing
                          // captions and subtitles. videoElement.textTracks
                          l.push(m));
                  }
                  for (var o = 0; o < l.length; o++) this.el_.removeChild(l[o]);
                }
                var p = ["audio", "video"];
                // ProxyNativeTextTracks
                p.forEach(function (a) {
                  var b = J["default"](a);
                  if (e["featuresNative" + b + "Tracks"]) {
                    var c = e.el()[a + "Tracks"];
                    c &&
                      c.addEventListener &&
                      (c.addEventListener(
                        "change",
                        s.bind(e, e["handle" + b + "TrackChange_"])
                      ),
                      c.addEventListener(
                        "addtrack",
                        s.bind(e, e["handle" + b + "TrackAdd_"])
                      ),
                      c.addEventListener(
                        "removetrack",
                        s.bind(e, e["handle" + b + "TrackRemove_"])
                      ),
                      // Remove (native) trackts that are not used anymore
                      e.on("loadstart", e["removeOld" + b + "Tracks_"]));
                  }
                }),
                  this.featuresNativeTextTracks &&
                    (h && u["default"].warn(w["default"](i)),
                    (this.handleTextTrackChange_ = s.bind(
                      this,
                      this.handleTextTrackChange
                    )),
                    (this.handleTextTrackAdd_ = s.bind(
                      this,
                      this.handleTextTrackAdd
                    )),
                    (this.handleTextTrackRemove_ = s.bind(
                      this,
                      this.handleTextTrackRemove
                    )),
                    this.proxyNativeTextTracks_()),
                  // Determine if native controls should be used
                  // Our goal should be to get the custom controls on mobile solid everywhere
                  // so we can remove this all together. Right now this will block custom
                  // controls on touch enabled laptops like the Chrome Pixel
                  (z.TOUCH_ENABLED || z.IS_IPHONE || z.IS_NATIVE_ANDROID) &&
                    c.nativeControlsForTouch === !0 &&
                    this.setControls(!0),
                  this.triggerReady();
              } /* HTML5 Support Testing ---------------------------------------------------- */
              /*
               * Element for testing browser HTML5 video capabilities
               *
               * @type {Element}
               * @constant
               * @private
               */
              /**
               * Dispose of html5 media element
               *
               * @method dispose
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              // If we're loading the playback object after it has started loading
              // or playing the video (often with autoplay on) then the loadstart event
              // has already fired and we need to fire it manually because many things
              // rely on it.
              /**
               * This is a helper function that is used in removeOldTextTracks_, removeOldAudioTracks_ and
               * removeOldVideoTracks_
               * @param {Track[]} techTracks Tracks for this tech
               * @param {Track[]} elTracks Tracks for the HTML5 video element
               * @private
               */
              /**
               * Play for html5 tech
               *
               * @method play
               */
              /**
               * Pause for html5 tech
               *
               * @method pause
               */
              /**
               * Paused for html5 tech
               *
               * @return {Boolean}
               * @method paused
               */
              /**
               * Get current time
               *
               * @return {Number}
               * @method currentTime
               */
              /**
               * Set current time
               *
               * @param {Number} seconds Current time of video
               * @method setCurrentTime
               */
              /**
               * Get duration
               *
               * @return {Number}
               * @method duration
               */
              /**
               * Get a TimeRange object that represents the intersection
               * of the time ranges for which the user agent has all
               * relevant media
               *
               * @return {TimeRangeObject}
               * @method buffered
               */
              /**
               * Get volume level
               *
               * @return {Number}
               * @method volume
               */
              /**
               * Set volume level
               *
               * @param {Number} percentAsDecimal Volume percent as a decimal
               * @method setVolume
               */
              /**
               * Get if muted
               *
               * @return {Boolean}
               * @method muted
               */
              /**
               * Set muted
               *
               * @param {Boolean} If player is to be muted or note
               * @method setMuted
               */
              /**
               * Get player width
               *
               * @return {Number}
               * @method width
               */
              /**
               * Get player height
               *
               * @return {Number}
               * @method height
               */
              /**
               * Get if there is fullscreen support
               *
               * @return {Boolean}
               * @method supportsFullScreen
               */
              /**
               * Request to enter fullscreen
               *
               * @method enterFullScreen
               */
              /**
               * Request to exit fullscreen
               *
               * @method exitFullScreen
               */
              /**
               * Get/set video
               *
               * @param {Object=} src Source object
               * @return {Object}
               * @method src
               */
              /**
               * Set video
               *
               * @param {Object} src Source object
               * @deprecated
               * @method setSrc
               */
              /**
               * Load media into player
               *
               * @method load
               */
              /**
               * Reset the tech. Removes all sources and calls `load`.
               *
               * @method reset
               */
              /**
               * Get current source
               *
               * @return {Object}
               * @method currentSrc
               */
              /**
               * Get poster
               *
               * @return {String}
               * @method poster
               */
              /**
               * Set poster
               *
               * @param {String} val URL to poster image
               * @method
               */
              /**
               * Get preload attribute
               *
               * @return {String}
               * @method preload
               */
              /**
               * Set preload attribute
               *
               * @param {String} val Value for preload attribute
               * @method setPreload
               */
              /**
               * Get autoplay attribute
               *
               * @return {String}
               * @method autoplay
               */
              /**
               * Set autoplay attribute
               *
               * @param {String} val Value for preload attribute
               * @method setAutoplay
               */
              /**
               * Get controls attribute
               *
               * @return {String}
               * @method controls
               */
              /**
               * Set controls attribute
               *
               * @param {String} val Value for controls attribute
               * @method setControls
               */
              /**
               * Get loop attribute
               *
               * @return {String}
               * @method loop
               */
              /**
               * Set loop attribute
               *
               * @param {String} val Value for loop attribute
               * @method setLoop
               */
              /**
               * Get error value
               *
               * @return {String}
               * @method error
               */
              /**
               * Get whether or not the player is in the "seeking" state
               *
               * @return {Boolean}
               * @method seeking
               */
              /**
               * Get a TimeRanges object that represents the
               * ranges of the media resource to which it is possible
               * for the user agent to seek.
               *
               * @return {TimeRangeObject}
               * @method seekable
               */
              /**
               * Get if video ended
               *
               * @return {Boolean}
               * @method ended
               */
              /**
               * Get the value of the muted content attribute
               * This attribute has no dynamic effect, it only
               * controls the default state of the element
               *
               * @return {Boolean}
               * @method defaultMuted
               */
              /**
               * Get desired speed at which the media resource is to play
               *
               * @return {Number}
               * @method playbackRate
               */
              /**
               * Returns a TimeRanges object that represents the ranges of the
               * media resource that the user agent has played.
               * @return {TimeRangeObject} the range of points on the media
               * timeline that has been reached through normal playback
               * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-played
               */
              /**
               * Set desired speed at which the media resource is to play
               *
               * @param {Number} val Speed at which the media resource is to play
               * @method setPlaybackRate
               */
              /**
               * Get the current state of network activity for the element, from
               * the list below
               * NETWORK_EMPTY (numeric value 0)
               * NETWORK_IDLE (numeric value 1)
               * NETWORK_LOADING (numeric value 2)
               * NETWORK_NO_SOURCE (numeric value 3)
               *
               * @return {Number}
               * @method networkState
               */
              /**
               * Get a value that expresses the current state of the element
               * with respect to rendering the current playback position, from
               * the codes in the list below
               * HAVE_NOTHING (numeric value 0)
               * HAVE_METADATA (numeric value 1)
               * HAVE_CURRENT_DATA (numeric value 2)
               * HAVE_FUTURE_DATA (numeric value 3)
               * HAVE_ENOUGH_DATA (numeric value 4)
               *
               * @return {Number}
               * @method readyState
               */
              /**
               * Get width of video
               *
               * @return {Number}
               * @method videoWidth
               */
              /**
               * Get height of video
               *
               * @return {Number}
               * @method videoHeight
               */
              /**
               * Get text tracks
               *
               * @return {TextTrackList}
               * @method textTracks
               */
              /**
               * Creates and returns a text track object
               *
               * @param {String} kind Text track kind (subtitles, captions, descriptions
               *                                       chapters and metadata)
               * @param {String=} label Label to identify the text track
               * @param {String=} language Two letter language abbreviation
               * @return {TextTrackObject}
               * @method addTextTrack
               */
              /**
               * Creates a remote text track object and returns a html track element
               *
               * @param {Object} options The object should contain values for
               * kind, language, label and src (location of the WebVTT file)
               * @return {HTMLTrackElement}
               * @method addRemoteTextTrack
               */
              /**
               * Remove remote text track from TextTrackList object
               *
               * @param {TextTrackObject} track Texttrack object to remove
               * @method removeRemoteTextTrack
               */
              return (
                g(b, a),
                (b.prototype.dispose = function () {
                  var c = this;
                  // Un-ProxyNativeTracks
                  ["audio", "video", "text"].forEach(function (a) {
                    var b = J["default"](a),
                      d = c.el_[a + "Tracks"];
                    d &&
                      d.removeEventListener &&
                      (d.removeEventListener(
                        "change",
                        c["handle" + b + "TrackChange_"]
                      ),
                      d.removeEventListener(
                        "addtrack",
                        c["handle" + b + "TrackAdd_"]
                      ),
                      d.removeEventListener(
                        "removetrack",
                        c["handle" + b + "TrackRemove_"]
                      )),
                      // Stop removing old text tracks
                      d && c.off("loadstart", c["removeOld" + b + "Tracks_"]);
                  }),
                    b.disposeMediaElement(this.el_),
                    // tech will handle clearing of the emulated track list
                    a.prototype.dispose.call(this);
                }),
                (b.prototype.createEl = function () {
                  var a = this.options_.tag;
                  // Check if this browser supports moving the element into the box.
                  // On the iPhone video will break if you move the element,
                  // So we have to create a brand new element.
                  if (!a || this.movingMediaElementInDOM === !1) {
                    // If the original tag is still there, clone and remove it.
                    if (a) {
                      var c = a.cloneNode(!0);
                      a.parentNode.insertBefore(c, a),
                        b.disposeMediaElement(a),
                        (a = c);
                    } else {
                      a = B["default"].createElement("video");
                      // determine if native controls should be used
                      var d =
                          this.options_.tag &&
                          o.getElAttributes(this.options_.tag),
                        e = H["default"]({}, d);
                      (z.TOUCH_ENABLED &&
                        this.options_.nativeControlsForTouch === !0) ||
                        delete e.controls,
                        o.setElAttributes(
                          a,
                          F["default"](e, {
                            id: this.options_.techId,
                            class: "vjs-tech",
                          })
                        );
                    }
                    a.playerId = this.options_.playerId;
                  }
                  for (
                    var f = ["autoplay", "preload", "loop", "muted"],
                      g = f.length - 1;
                    g >= 0;
                    g--
                  ) {
                    var h = f[g],
                      i = {};
                    "undefined" != typeof this.options_[h] &&
                      (i[h] = this.options_[h]),
                      o.setElAttributes(a, i);
                  }
                  return a;
                }),
                (b.prototype.handleLateInit_ = function (a) {
                  var b = this;
                  if (0 !== a.networkState && 3 !== a.networkState) {
                    if (0 === a.readyState) {
                      var c = (function () {
                        // NetworkState is set synchronously BUT loadstart is fired at the
                        // end of the current stack, usually before setInterval(fn, 0).
                        // So at this point we know loadstart may have already fired or is
                        // about to fire, and either way the player hasn't seen it yet.
                        // We don't want to fire loadstart prematurely here and cause a
                        // double loadstart so we'll wait and see if it happens between now
                        // and the next loop, and fire it if not.
                        // HOWEVER, we also want to make sure it fires before loadedmetadata
                        // which could also happen between now and the next loop, so we'll
                        // watch for that also.
                        var a = !1,
                          c = function () {
                            a = !0;
                          };
                        b.on("loadstart", c);
                        var d = function () {
                          // We did miss the original loadstart. Make sure the player
                          // sees loadstart before loadedmetadata
                          a || this.trigger("loadstart");
                        };
                        return (
                          b.on("loadedmetadata", d),
                          b.ready(function () {
                            this.off("loadstart", c),
                              this.off("loadedmetadata", d),
                              a ||
                                // We did miss the original native loadstart. Fire it now.
                                this.trigger("loadstart");
                          }),
                          { v: void 0 }
                        );
                      })();
                      if ("object" == typeof c) return c.v;
                    }
                    // From here on we know that loadstart already fired and we missed it.
                    // The other readyState events aren't as much of a problem if we double
                    // them, so not going to go to as much trouble as loadstart to prevent
                    // that unless we find reason to.
                    var d = ["loadstart"];
                    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater
                    d.push("loadedmetadata"),
                      // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater
                      a.readyState >= 2 && d.push("loadeddata"),
                      // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater
                      a.readyState >= 3 && d.push("canplay"),
                      // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)
                      a.readyState >= 4 && d.push("canplaythrough"),
                      // We still need to give the player time to add event listeners
                      this.ready(function () {
                        d.forEach(function (a) {
                          this.trigger(a);
                        }, this);
                      });
                  }
                }),
                (b.prototype.proxyNativeTextTracks_ = function () {
                  var a = this.el().textTracks;
                  if (a) {
                    // Add tracks - if player is initialised after DOM loaded, textTracks
                    // will not trigger addtrack
                    for (var b = 0; b < a.length; b++)
                      this.textTracks().addTrack_(a[b]);
                    a.addEventListener &&
                      (a.addEventListener(
                        "change",
                        this.handleTextTrackChange_
                      ),
                      a.addEventListener("addtrack", this.handleTextTrackAdd_),
                      a.addEventListener(
                        "removetrack",
                        this.handleTextTrackRemove_
                      )),
                      // Remove (native) texttracks that are not used anymore
                      this.on("loadstart", this.removeOldTextTracks_);
                  }
                }),
                (b.prototype.handleTextTrackChange = function (a) {
                  var b = this.textTracks();
                  this.textTracks().trigger({
                    type: "change",
                    target: b,
                    currentTarget: b,
                    srcElement: b,
                  });
                }),
                (b.prototype.handleTextTrackAdd = function (a) {
                  this.textTracks().addTrack_(a.track);
                }),
                (b.prototype.handleTextTrackRemove = function (a) {
                  this.textTracks().removeTrack_(a.track);
                }),
                (b.prototype.handleVideoTrackChange_ = function (a) {
                  var b = this.videoTracks();
                  this.videoTracks().trigger({
                    type: "change",
                    target: b,
                    currentTarget: b,
                    srcElement: b,
                  });
                }),
                (b.prototype.handleVideoTrackAdd_ = function (a) {
                  this.videoTracks().addTrack_(a.track);
                }),
                (b.prototype.handleVideoTrackRemove_ = function (a) {
                  this.videoTracks().removeTrack_(a.track);
                }),
                (b.prototype.handleAudioTrackChange_ = function (a) {
                  var b = this.audioTracks();
                  this.audioTracks().trigger({
                    type: "change",
                    target: b,
                    currentTarget: b,
                    srcElement: b,
                  });
                }),
                (b.prototype.handleAudioTrackAdd_ = function (a) {
                  this.audioTracks().addTrack_(a.track);
                }),
                (b.prototype.handleAudioTrackRemove_ = function (a) {
                  this.audioTracks().removeTrack_(a.track);
                }),
                (b.prototype.removeOldTracks_ = function (a, b) {
                  // This will loop over the techTracks and check if they are still used by the HTML5 video element
                  // If not, they will be removed from the emulated list
                  var c = [];
                  if (b) {
                    for (var d = 0; d < a.length; d++) {
                      for (var e = a[d], f = !1, g = 0; g < b.length; g++)
                        if (b[g] === e) {
                          f = !0;
                          break;
                        }
                      f || c.push(e);
                    }
                    for (var d = 0; d < c.length; d++) {
                      var h = c[d];
                      a.removeTrack_(h);
                    }
                  }
                }),
                (b.prototype.removeOldTextTracks_ = function () {
                  var a = this.textTracks(),
                    b = this.el().textTracks;
                  this.removeOldTracks_(a, b);
                }),
                (b.prototype.removeOldAudioTracks_ = function () {
                  var a = this.audioTracks(),
                    b = this.el().audioTracks;
                  this.removeOldTracks_(a, b);
                }),
                (b.prototype.removeOldVideoTracks_ = function () {
                  var a = this.videoTracks(),
                    b = this.el().videoTracks;
                  this.removeOldTracks_(a, b);
                }),
                (b.prototype.play = function () {
                  var a = this.el_.play();
                  // Catch/silence error when a pause interrupts a play request
                  // on browsers which return a promise
                  void 0 !== a &&
                    "function" == typeof a.then &&
                    a.then(null, function (a) {});
                }),
                (b.prototype.pause = function () {
                  this.el_.pause();
                }),
                (b.prototype.paused = function () {
                  return this.el_.paused;
                }),
                (b.prototype.currentTime = function () {
                  return this.el_.currentTime;
                }),
                (b.prototype.setCurrentTime = function (a) {
                  try {
                    this.el_.currentTime = a;
                  } catch (b) {}
                }),
                (b.prototype.duration = function () {
                  return this.el_.duration || 0;
                }),
                (b.prototype.buffered = function () {
                  return this.el_.buffered;
                }),
                (b.prototype.volume = function () {
                  return this.el_.volume;
                }),
                (b.prototype.setVolume = function (a) {
                  this.el_.volume = a;
                }),
                (b.prototype.muted = function () {
                  return this.el_.muted;
                }),
                (b.prototype.setMuted = function (a) {
                  this.el_.muted = a;
                }),
                (b.prototype.width = function () {
                  return this.el_.offsetWidth;
                }),
                (b.prototype.height = function () {
                  return this.el_.offsetHeight;
                }),
                (b.prototype.supportsFullScreen = function () {
                  if ("function" == typeof this.el_.webkitEnterFullScreen) {
                    var a = D["default"].navigator.userAgent;
                    // Seems to be broken in Chromium/Chrome && Safari in Leopard
                    if (/Android/.test(a) || !/Chrome|Mac OS X 10.5/.test(a))
                      return !0;
                  }
                  return !1;
                }),
                (b.prototype.enterFullScreen = function () {
                  var a = this.el_;
                  "webkitDisplayingFullscreen" in a &&
                    this.one("webkitbeginfullscreen", function () {
                      this.one("webkitendfullscreen", function () {
                        this.trigger("fullscreenchange", { isFullscreen: !1 });
                      }),
                        this.trigger("fullscreenchange", { isFullscreen: !0 });
                    }),
                    a.paused && a.networkState <= a.HAVE_METADATA
                      ? // attempt to prime the video element for programmatic access
                        // this isn't necessary on the desktop but shouldn't hurt
                        (this.el_.play(),
                        // playing and pausing synchronously during the transition to fullscreen
                        // can get iOS ~6.1 devices into a play/pause loop
                        this.setTimeout(function () {
                          a.pause(), a.webkitEnterFullScreen();
                        }, 0))
                      : a.webkitEnterFullScreen();
                }),
                (b.prototype.exitFullScreen = function () {
                  this.el_.webkitExitFullScreen();
                }),
                (b.prototype.src = function (a) {
                  // Setting src through `src` instead of `setSrc` will be deprecated
                  return void 0 === a ? this.el_.src : void this.setSrc(a);
                }),
                (b.prototype.setSrc = function (a) {
                  this.el_.src = a;
                }),
                (b.prototype.load = function () {
                  this.el_.load();
                }),
                (b.prototype.reset = function () {
                  b.resetMediaElement(this.el_);
                }),
                (b.prototype.currentSrc = function () {
                  return this.currentSource_
                    ? this.currentSource_.src
                    : this.el_.currentSrc;
                }),
                (b.prototype.poster = function () {
                  return this.el_.poster;
                }),
                (b.prototype.setPoster = function (a) {
                  this.el_.poster = a;
                }),
                (b.prototype.preload = function () {
                  return this.el_.preload;
                }),
                (b.prototype.setPreload = function (a) {
                  this.el_.preload = a;
                }),
                (b.prototype.autoplay = function () {
                  return this.el_.autoplay;
                }),
                (b.prototype.setAutoplay = function (a) {
                  this.el_.autoplay = a;
                }),
                (b.prototype.controls = function () {
                  return this.el_.controls;
                }),
                (b.prototype.setControls = function (a) {
                  this.el_.controls = !!a;
                }),
                (b.prototype.loop = function () {
                  return this.el_.loop;
                }),
                (b.prototype.setLoop = function (a) {
                  this.el_.loop = a;
                }),
                (b.prototype.error = function () {
                  return this.el_.error;
                }),
                (b.prototype.seeking = function () {
                  return this.el_.seeking;
                }),
                (b.prototype.seekable = function () {
                  return this.el_.seekable;
                }),
                (b.prototype.ended = function () {
                  return this.el_.ended;
                }),
                (b.prototype.defaultMuted = function () {
                  return this.el_.defaultMuted;
                }),
                (b.prototype.playbackRate = function () {
                  return this.el_.playbackRate;
                }),
                (b.prototype.played = function () {
                  return this.el_.played;
                }),
                (b.prototype.setPlaybackRate = function (a) {
                  this.el_.playbackRate = a;
                }),
                (b.prototype.networkState = function () {
                  return this.el_.networkState;
                }),
                (b.prototype.readyState = function () {
                  return this.el_.readyState;
                }),
                (b.prototype.videoWidth = function () {
                  return this.el_.videoWidth;
                }),
                (b.prototype.videoHeight = function () {
                  return this.el_.videoHeight;
                }),
                (b.prototype.textTracks = function () {
                  return a.prototype.textTracks.call(this);
                }),
                (b.prototype.addTextTrack = function (b, c, d) {
                  return this.featuresNativeTextTracks
                    ? this.el_.addTextTrack(b, c, d)
                    : a.prototype.addTextTrack.call(this, b, c, d);
                }),
                (b.prototype.addRemoteTextTrack = function () {
                  var b =
                    arguments.length <= 0 || void 0 === arguments[0]
                      ? {}
                      : arguments[0];
                  if (!this.featuresNativeTextTracks)
                    return a.prototype.addRemoteTextTrack.call(this, b);
                  var c = B["default"].createElement("track");
                  // store HTMLTrackElement and TextTrack to remote list
                  return (
                    b.kind && (c.kind = b.kind),
                    b.label && (c.label = b.label),
                    (b.language || b.srclang) &&
                      (c.srclang = b.language || b.srclang),
                    b["default"] && (c["default"] = b["default"]),
                    b.id && (c.id = b.id),
                    b.src && (c.src = b.src),
                    this.el().appendChild(c),
                    this.remoteTextTrackEls().addTrackElement_(c),
                    this.remoteTextTracks().addTrack_(c.track),
                    c
                  );
                }),
                (b.prototype.removeRemoteTextTrack = function (b) {
                  if (!this.featuresNativeTextTracks)
                    return a.prototype.removeRemoteTextTrack.call(this, b);
                  var c = void 0,
                    d = void 0,
                    e = this.remoteTextTrackEls().getTrackElementByTrack_(b);
                  for (
                    // remove HTMLTrackElement and TextTrack from remote list
                    this.remoteTextTrackEls().removeTrackElement_(e),
                      this.remoteTextTracks().removeTrack_(b),
                      c = this.$$("track"),
                      d = c.length;
                    d--;

                  )
                    (b !== c[d] && b !== c[d].track) ||
                      this.el().removeChild(c[d]);
                }),
                b
              );
            })(k["default"]);
          K.TEST_VID = B["default"].createElement("video");
          var L = B["default"].createElement("track");
          (L.kind = "captions"),
            (L.srclang = "en"),
            (L.label = "English"),
            K.TEST_VID.appendChild(L),
            /*
             * Check if HTML5 video is supported by this browser/device
             *
             * @return {Boolean}
             */ (K.isSupported = function () {
              // IE9 with no Media Player is a LIAR! (#984)
              try {
                K.TEST_VID.volume = 0.5;
              } catch (a) {
                return !1;
              }
              return !!K.TEST_VID.canPlayType;
            }),
            // Add Source Handler pattern functions to this tech
            k["default"].withSourceHandlers(K),
            /*
             * The default native source handler.
             * This simply passes the source to the video element. Nothing fancy.
             *
             * @param  {Object} source   The source object
             * @param  {Html5} tech  The instance of the HTML5 tech
             */ (K.nativeSourceHandler = {}),
            (K.nativeSourceHandler.canPlayType = function (a) {
              try {
                return K.TEST_VID.canPlayType(a);
              } catch (b) {
                return "";
              }
            }),
            /*
             * Check if the video element can handle the source natively
             *
             * @param  {Object} source  The source object
             * @param  {Object} options The options passed to the tech
             * @return {String}         'probably', 'maybe', or '' (empty string)
             */ (K.nativeSourceHandler.canHandleSource = function (a, b) {
              var c;
              // If a type was provided we should rely on that
              // If a type was provided we should rely on that
              // If no type, fall back to checking 'video/[EXTENSION]'
              return a.type
                ? K.nativeSourceHandler.canPlayType(a.type)
                : a.src
                ? ((c = q.getFileExtension(a.src)),
                  K.nativeSourceHandler.canPlayType("video/" + c))
                : "";
            }),
            /*
             * Pass the source to the video element
             * Adaptive source handlers will have more complicated workflows before passing
             * video data to the video element
             *
             * @param  {Object} source   The source object
             * @param  {Html5}  tech     The instance of the Html5 tech
             * @param  {Object} options  The options to pass to the source
             */ (K.nativeSourceHandler.handleSource = function (a, b, c) {
              b.setSrc(a.src);
            }),
            /*
             * Clean up the source handler when disposing the player or switching sources..
             * (no cleanup is needed when supporting the format natively)
             */ (K.nativeSourceHandler.dispose = function () {}),
            // Register the native source handler
            K.registerSourceHandler(K.nativeSourceHandler),
            /*
             * Check if the volume can be changed in this browser/device.
             * Volume cannot be changed in a lot of mobile devices.
             * Specifically, it can't be changed from 1 on iOS.
             *
             * @return {Boolean}
             */ (K.canControlVolume = function () {
              // IE will error if Windows Media Player not installed #3315
              try {
                var a = K.TEST_VID.volume;
                return (
                  (K.TEST_VID.volume = a / 2 + 0.1), a !== K.TEST_VID.volume
                );
              } catch (b) {
                return !1;
              }
            }),
            /*
             * Check if playbackRate is supported in this browser/device.
             *
             * @return {Boolean}
             */ (K.canControlPlaybackRate = function () {
              if (z.IS_ANDROID && z.IS_CHROME) return !1;
              // IE will error if Windows Media Player not installed #3315
              try {
                var a = K.TEST_VID.playbackRate;
                return (
                  (K.TEST_VID.playbackRate = a / 2 + 0.1),
                  a !== K.TEST_VID.playbackRate
                );
              } catch (b) {
                return !1;
              }
            }),
            /*
             * Check to see if native text tracks are supported by this browser/device
             *
             * @return {Boolean}
             */ (K.supportsNativeTextTracks = function () {
              var a;
              // Figure out native text track support
              // If mode is a number, we cannot change it because it'll disappear from view.
              // Browsers with numeric modes include IE10 and older (<=2013) samsung android models.
              // Firefox isn't playing nice either with modifying the mode
              //
              return (
                (a = !!K.TEST_VID.textTracks),
                a &&
                  K.TEST_VID.textTracks.length > 0 &&
                  (a = "number" != typeof K.TEST_VID.textTracks[0].mode),
                a && z.IS_FIREFOX && (a = !1),
                !a || "onremovetrack" in K.TEST_VID.textTracks || (a = !1),
                a
              );
            }),
            /*
             * Check to see if native video tracks are supported by this browser/device
             *
             * @return {Boolean}
             */ (K.supportsNativeVideoTracks = function () {
              var a = !!K.TEST_VID.videoTracks;
              return a;
            })(
              /*
               * Check to see if native audio tracks are supported by this browser/device
               *
               * @return {Boolean}
               */ (K.supportsNativeAudioTracks = function () {
                var a = !!K.TEST_VID.audioTracks;
                return a;
              })
            ),
            /**
             * An array of events available on the Html5 tech.
             *
             * @private
             * @type {Array}
             */
            (K.Events = [
              "loadstart",
              "suspend",
              "abort",
              "error",
              "emptied",
              "stalled",
              "loadedmetadata",
              "loadeddata",
              "canplay",
              "canplaythrough",
              "playing",
              "waiting",
              "seeking",
              "seeked",
              "ended",
              "durationchange",
              "timeupdate",
              "progress",
              "play",
              "pause",
              "ratechange",
              "volumechange",
            ]),
            /*
             * Set the tech's volume control support status
             *
             * @type {Boolean}
             */ (K.prototype.featuresVolumeControl = K.canControlVolume()),
            /*
             * Set the tech's playbackRate support status
             *
             * @type {Boolean}
             */ (K.prototype.featuresPlaybackRate = K.canControlPlaybackRate()),
            /*
             * Set the tech's status on moving the video element.
             * In iOS, if you move a video element in the DOM, it breaks video playback.
             *
             * @type {Boolean}
             */ (K.prototype.movingMediaElementInDOM = !z.IS_IOS),
            /*
             * Set the the tech's fullscreen resize support status.
             * HTML video is able to automatically resize when going to fullscreen.
             * (No longer appears to be used. Can probably be removed.)
             */ (K.prototype.featuresFullscreenResize = !0),
            /*
             * Set the tech's progress event support status
             * (this disables the manual progress events of the Tech)
             */ (K.prototype.featuresProgressEvents = !0),
            /*
             * Sets the tech's status on native text track support
             *
             * @type {Boolean}
             */ (K.prototype.featuresNativeTextTracks = K.supportsNativeTextTracks()),
            /**
             * Sets the tech's status on native text track support
             *
             * @type {Boolean}
             */
            (K.prototype.featuresNativeVideoTracks = K.supportsNativeVideoTracks()),
            /**
             * Sets the tech's status on native audio track support
             *
             * @type {Boolean}
             */
            (K.prototype.featuresNativeAudioTracks = K.supportsNativeAudioTracks());
          // HTML5 Feature detection and Device Fixes --------------------------------- //
          var M = void 0,
            N = /^application\/(?:x-|vnd\.apple\.)mpegurl/i,
            O = /^video\/mp4/i;
          (K.patchCanPlayType = function () {
            // Android 4.0 and above can play HLS to some extent but it reports being unable to do so
            z.ANDROID_VERSION >= 4 &&
              (M || (M = K.TEST_VID.constructor.prototype.canPlayType),
              (K.TEST_VID.constructor.prototype.canPlayType = function (a) {
                return a && N.test(a) ? "maybe" : M.call(this, a);
              })),
              // Override Android 2.2 and less canPlayType method which is broken
              z.IS_OLD_ANDROID &&
                (M || (M = K.TEST_VID.constructor.prototype.canPlayType),
                (K.TEST_VID.constructor.prototype.canPlayType = function (a) {
                  return a && O.test(a) ? "maybe" : M.call(this, a);
                }));
          }),
            (K.unpatchCanPlayType = function () {
              var a = K.TEST_VID.constructor.prototype.canPlayType;
              return (
                (K.TEST_VID.constructor.prototype.canPlayType = M),
                (M = null),
                a
              );
            }),
            // by default, patch the video element
            K.patchCanPlayType(),
            (K.disposeMediaElement = function (a) {
              if (a) {
                // remove any child track or source nodes to prevent their loading
                for (
                  a.parentNode && a.parentNode.removeChild(a);
                  a.hasChildNodes();

                )
                  a.removeChild(a.firstChild);
                // remove any src reference. not setting `src=''` because that causes a warning
                // in firefox
                a.removeAttribute("src"),
                  // force the media element to update its loading state by calling load()
                  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)
                  "function" == typeof a.load &&
                    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
                    !(function () {
                      try {
                        a.load();
                      } catch (b) {}
                    })();
              }
            }),
            (K.resetMediaElement = function (a) {
              if (a) {
                for (var b = a.querySelectorAll("source"), c = b.length; c--; )
                  a.removeChild(b[c]);
                // remove any src reference.
                // not setting `src=''` because that throws an error
                a.removeAttribute("src"),
                  "function" == typeof a.load &&
                    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)
                    !(function () {
                      try {
                        a.load();
                      } catch (b) {}
                    })();
              }
            }),
            m["default"].registerComponent("Html5", K),
            k["default"].registerTech("Html5", K),
            (c["default"] = K),
            (b.exports = c["default"]);
        },
        {
          "../../../src/js/tracks/text-track.js": 134,
          "../component": 67,
          "../utils/browser.js": 140,
          "../utils/dom.js": 142,
          "../utils/fn.js": 144,
          "../utils/log.js": 147,
          "../utils/merge-options.js": 148,
          "../utils/to-title-case.js": 151,
          "../utils/url.js": 152,
          "./tech.js": 124,
          "global/document": 1,
          "global/window": 2,
          "object.assign": 45,
          tsml: 55,
        },
      ],
      123: [
        function (a, b, c) {
          /**
           * @file loader.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var g = a("../component.js"),
            h = d(g),
            i = a("./tech.js"),
            j = d(i),
            k = a("global/window"),
            l = (d(k), a("../utils/to-title-case.js")),
            m = d(l),
            n = (function (a) {
              function b(c, d, f) {
                // If there are no sources when the player is initialized,
                // load the first supported playback technology.
                if (
                  (e(this, b),
                  a.call(this, c, d, f),
                  d.playerOptions.sources &&
                    0 !== d.playerOptions.sources.length)
                )
                  // // Loop through playback technologies (HTML5, Flash) and check for support.
                  // // Then load the best source.
                  // // A few assumptions here:
                  // //   All playback technologies respect preload false.
                  c.src(d.playerOptions.sources);
                else
                  for (
                    var g = 0, i = d.playerOptions.techOrder;
                    g < i.length;
                    g++
                  ) {
                    var k = m["default"](i[g]),
                      l = j["default"].getTech(k);
                    // Check if the browser supports this technology
                    if (
                      // Support old behavior of techs being registered as components.
                      // Remove once that deprecated behavior is removed.
                      (k || (l = h["default"].getComponent(k)),
                      l && l.isSupported())
                    ) {
                      c.loadTech_(k);
                      break;
                    }
                  }
              }
              return f(b, a), b;
            })(h["default"]);
          h["default"].registerComponent("MediaLoader", n),
            (c["default"] = n),
            (b.exports = c["default"]);
        },
        {
          "../component.js": 67,
          "../utils/to-title-case.js": 151,
          "./tech.js": 124,
          "global/window": 2,
        },
      ],
      124: [
        function (a, b, c) {
          /**
           * @file tech.js
           * Media Technology Controller - Base class for media playback
           * technology controllers like Flash and HTML5
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../component"),
            i = e(h),
            j = a("../tracks/html-track-element"),
            k = e(j),
            l = a("../tracks/html-track-element-list"),
            m = e(l),
            n = a("../utils/merge-options.js"),
            o = e(n),
            p = a("../tracks/text-track"),
            q = e(p),
            r = a("../tracks/text-track-list"),
            s = e(r),
            t = a("../tracks/video-track"),
            u = (e(t), a("../tracks/video-track-list")),
            v = e(u),
            w = a("../tracks/audio-track-list"),
            x = e(w),
            y = a("../tracks/audio-track"),
            z = (e(y), a("../utils/fn.js")),
            A = d(z),
            B = a("../utils/log.js"),
            C = e(B),
            D = a("../utils/time-ranges.js"),
            E = a("../utils/buffer.js"),
            F = a("../media-error.js"),
            G = e(F),
            H = a("global/window"),
            I = e(H),
            J = a("global/document"),
            K = e(J),
            L = (function (a) {
              function b() {
                var c =
                    arguments.length <= 0 || void 0 === arguments[0]
                      ? {}
                      : arguments[0],
                  d =
                    arguments.length <= 1 || void 0 === arguments[1]
                      ? function () {}
                      : arguments[1];
                f(this, b),
                  // we don't want the tech to report user activity automatically.
                  // This is done manually in addControlsListeners
                  (c.reportTouchActivity = !1),
                  a.call(this, null, c, d),
                  // keep track of whether the current source has played at all to
                  // implement a very limited played()
                  (this.hasStarted_ = !1),
                  this.on("playing", function () {
                    this.hasStarted_ = !0;
                  }),
                  this.on("loadstart", function () {
                    this.hasStarted_ = !1;
                  }),
                  (this.textTracks_ = c.textTracks),
                  (this.videoTracks_ = c.videoTracks),
                  (this.audioTracks_ = c.audioTracks),
                  // Manually track progress in cases where the browser/flash player doesn't report it.
                  this.featuresProgressEvents || this.manualProgressOn(),
                  // Manually track timeupdates in cases where the browser/flash player doesn't report it.
                  this.featuresTimeupdateEvents || this.manualTimeUpdatesOn(),
                  (c.nativeCaptions !== !1 && c.nativeTextTracks !== !1) ||
                    (this.featuresNativeTextTracks = !1),
                  this.featuresNativeTextTracks ||
                    this.on("ready", this.emulateTextTracks),
                  this.initTextTrackListeners(),
                  this.initTrackListeners(),
                  // Turn on component tap events
                  this.emitTapEvents();
              }
              /**
               * List of associated text tracks
               *
               * @type {TextTrackList}
               * @private
               */
              /* Fallbacks for unsupported event types
      ================================================================================ */
              // Manually trigger progress events based on changes to the buffered amount
              // Many flash players and older HTML5 browsers don't send progress or progress-like events
              /**
               * Turn on progress events
               *
               * @method manualProgressOn
               */
              /**
               * Turn off progress events
               *
               * @method manualProgressOff
               */
              /**
               * Track progress
               *
               * @method trackProgress
               */
              /**
               * Update duration
               *
               * @method onDurationChange
               */
              /**
               * Create and get TimeRange object for buffering
               *
               * @return {TimeRangeObject}
               * @method buffered
               */
              /**
               * Get buffered percent
               *
               * @return {Number}
               * @method bufferedPercent
               */
              /**
               * Stops tracking progress by clearing progress interval
               *
               * @method stopTrackingProgress
               */
              /*! Time Tracking -------------------------------------------------------------- */
              /**
               * Set event listeners for on play and pause and tracking current time
               *
               * @method manualTimeUpdatesOn
               */
              /**
               * Remove event listeners for on play and pause and tracking current time
               *
               * @method manualTimeUpdatesOff
               */
              /**
               * Tracks current time
               *
               * @method trackCurrentTime
               */
              /**
               * Turn off play progress tracking (when paused or dragging)
               *
               * @method stopTrackingCurrentTime
               */
              /**
               * Turn off any manual progress or timeupdate tracking
               *
               * @method dispose
               */
              /**
               * clear out a track list, or multiple track lists
               *
               * Note: Techs without source handlers should call this between
               * sources for video & audio tracks, as usually you don't want
               * to use them between tracks and we have no automatic way to do
               * it for you
               *
               * @method clearTracks
               * @param {Array|String} types type(s) of track lists to empty
               */
              /**
               * Reset the tech. Removes all sources and resets readyState.
               *
               * @method reset
               */
              /**
               * When invoked without an argument, returns a MediaError object
               * representing the current error state of the player or null if
               * there is no error. When invoked with an argument, set the current
               * error state of the player.
               * @param {MediaError=} err    Optional an error object
               * @return {MediaError}        the current error object or null
               * @method error
               */
              /**
               * Return the time ranges that have been played through for the
               * current source. This implementation is incomplete. It does not
               * track the played time ranges, only whether the source has played
               * at all or not.
               * @return {TimeRangeObject} a single time range if this video has
               * played or an empty set of ranges if not.
               * @method played
               */
              /**
               * Set current time
               *
               * @method setCurrentTime
               */
              /**
               * Initialize texttrack listeners
               *
               * @method initTextTrackListeners
               */
              /**
               * Initialize audio and video track listeners
               *
               * @method initTrackListeners
               */
              /**
               * Emulate texttracks
               *
               * @method emulateTextTracks
               */
              /**
               * Get videotracks
               *
               * @returns {VideoTrackList}
               * @method videoTracks
               */
              /**
               * Get audiotracklist
               *
               * @returns {AudioTrackList}
               * @method audioTracks
               */
              /*
               * Provide default methods for text tracks.
               *
               * Html5 tech overrides these.
               */
              /**
               * Get texttracks
               *
               * @returns {TextTrackList}
               * @method textTracks
               */
              /**
               * Get remote texttracks
               *
               * @returns {TextTrackList}
               * @method remoteTextTracks
               */
              /**
               * Get remote htmltrackelements
               *
               * @returns {HTMLTrackElementList}
               * @method remoteTextTrackEls
               */
              /**
               * Creates and returns a remote text track object
               *
               * @param {String} kind Text track kind (subtitles, captions, descriptions
               *                                       chapters and metadata)
               * @param {String=} label Label to identify the text track
               * @param {String=} language Two letter language abbreviation
               * @return {TextTrackObject}
               * @method addTextTrack
               */
              /**
               * Creates a remote text track object and returns a emulated html track element
               *
               * @param {Object} options The object should contain values for
               * kind, language, label and src (location of the WebVTT file)
               * @return {HTMLTrackElement}
               * @method addRemoteTextTrack
               */
              /**
               * Remove remote texttrack
               *
               * @param {TextTrackObject} track Texttrack to remove
               * @method removeRemoteTextTrack
               */
              /**
               * Provide a default setPoster method for techs
               * Poster support for techs should be optional, so we don't want techs to
               * break if they don't have a way to set a poster.
               *
               * @method setPoster
               */
              /*
               * Check if the tech can support the given type
               *
               * The base tech does not support any type, but source handlers might
               * overwrite this.
               *
               * @param  {String} type    The mimetype to check
               * @return {String}         'probably', 'maybe', or '' (empty string)
               */
              /*
               * Return whether the argument is a Tech or not.
               * Can be passed either a Class like `Html5` or a instance like `player.tech_`
               *
               * @param {Object} component An item to check
               * @return {Boolean}         Whether it is a tech or not
               */
              /**
               * Registers a Tech
               *
               * @param {String} name Name of the Tech to register
               * @param {Object} tech The tech to register
               * @static
               * @method registerComponent
               */
              /**
               * Gets a component by name
               *
               * @param {String} name Name of the component to get
               * @return {Component}
               * @static
               * @method getComponent
               */
              return (
                g(b, a),
                (b.prototype.manualProgressOn = function () {
                  this.on("durationchange", this.onDurationChange),
                    (this.manualProgress = !0),
                    // Trigger progress watching when a source begins loading
                    this.one("ready", this.trackProgress);
                }),
                (b.prototype.manualProgressOff = function () {
                  (this.manualProgress = !1),
                    this.stopTrackingProgress(),
                    this.off("durationchange", this.onDurationChange);
                }),
                (b.prototype.trackProgress = function () {
                  this.stopTrackingProgress(),
                    (this.progressInterval = this.setInterval(
                      A.bind(this, function () {
                        // Don't trigger unless buffered amount is greater than last time
                        var a = this.bufferedPercent();
                        this.bufferedPercent_ !== a && this.trigger("progress"),
                          (this.bufferedPercent_ = a),
                          1 === a && this.stopTrackingProgress();
                      }),
                      500
                    ));
                }),
                (b.prototype.onDurationChange = function () {
                  this.duration_ = this.duration();
                }),
                (b.prototype.buffered = function () {
                  return D.createTimeRange(0, 0);
                }),
                (b.prototype.bufferedPercent = function () {
                  return E.bufferedPercent(this.buffered(), this.duration_);
                }),
                (b.prototype.stopTrackingProgress = function () {
                  this.clearInterval(this.progressInterval);
                }),
                (b.prototype.manualTimeUpdatesOn = function () {
                  (this.manualTimeUpdates = !0),
                    this.on("play", this.trackCurrentTime),
                    this.on("pause", this.stopTrackingCurrentTime);
                }),
                (b.prototype.manualTimeUpdatesOff = function () {
                  (this.manualTimeUpdates = !1),
                    this.stopTrackingCurrentTime(),
                    this.off("play", this.trackCurrentTime),
                    this.off("pause", this.stopTrackingCurrentTime);
                }),
                (b.prototype.trackCurrentTime = function () {
                  this.currentTimeInterval && this.stopTrackingCurrentTime(),
                    (this.currentTimeInterval = this.setInterval(function () {
                      this.trigger({
                        type: "timeupdate",
                        target: this,
                        manuallyTriggered: !0,
                      });
                    }, 250));
                }),
                (b.prototype.stopTrackingCurrentTime = function () {
                  this.clearInterval(this.currentTimeInterval),
                    // #1002 - if the video ends right before the next timeupdate would happen,
                    // the progress bar won't make it all the way to the end
                    this.trigger({
                      type: "timeupdate",
                      target: this,
                      manuallyTriggered: !0,
                    });
                }),
                (b.prototype.dispose = function () {
                  // clear out all tracks because we can't reuse them between techs
                  this.clearTracks(["audio", "video", "text"]),
                    // Turn off any manual progress or timeupdate tracking
                    this.manualProgress && this.manualProgressOff(),
                    this.manualTimeUpdates && this.manualTimeUpdatesOff(),
                    a.prototype.dispose.call(this);
                }),
                (b.prototype.clearTracks = function (a) {
                  var b = this;
                  (a = [].concat(a)),
                    // clear out all tracks because we can't reuse them between techs
                    a.forEach(function (a) {
                      for (
                        var c = b[a + "Tracks"]() || [], d = c.length;
                        d--;

                      ) {
                        var e = c[d];
                        "text" === a && b.removeRemoteTextTrack(e),
                          c.removeTrack_(e);
                      }
                    });
                }),
                (b.prototype.reset = function () {}),
                (b.prototype.error = function (a) {
                  return (
                    void 0 !== a &&
                      ((this.error_ = new G["default"](a)),
                      this.trigger("error")),
                    this.error_
                  );
                }),
                (b.prototype.played = function () {
                  return this.hasStarted_
                    ? D.createTimeRange(0, 0)
                    : D.createTimeRange();
                }),
                (b.prototype.setCurrentTime = function () {
                  // improve the accuracy of manual timeupdates
                  this.manualTimeUpdates &&
                    this.trigger({
                      type: "timeupdate",
                      target: this,
                      manuallyTriggered: !0,
                    });
                }),
                (b.prototype.initTextTrackListeners = function () {
                  var a = A.bind(this, function () {
                      this.trigger("texttrackchange");
                    }),
                    b = this.textTracks();
                  b &&
                    (b.addEventListener("removetrack", a),
                    b.addEventListener("addtrack", a),
                    this.on(
                      "dispose",
                      A.bind(this, function () {
                        b.removeEventListener("removetrack", a),
                          b.removeEventListener("addtrack", a);
                      })
                    ));
                }),
                (b.prototype.initTrackListeners = function () {
                  var a = this,
                    b = ["video", "audio"];
                  b.forEach(function (b) {
                    var c = function () {
                        a.trigger(b + "trackchange");
                      },
                      d = a[b + "Tracks"]();
                    d.addEventListener("removetrack", c),
                      d.addEventListener("addtrack", c),
                      a.on("dispose", function () {
                        d.removeEventListener("removetrack", c),
                          d.removeEventListener("addtrack", c);
                      });
                  });
                }),
                (b.prototype.emulateTextTracks = function () {
                  var a = this,
                    b = this.textTracks();
                  if (b) {
                    I["default"].WebVTT ||
                      null == this.el().parentNode ||
                      !(function () {
                        var b = K["default"].createElement("script");
                        (b.src = a.options_["vtt.js"] || ""),
                          (b.onload = function () {
                            a.trigger("vttjsloaded");
                          }),
                          (b.onerror = function () {
                            a.trigger("vttjserror");
                          }),
                          a.on("dispose", function () {
                            (b.onload = null), (b.onerror = null);
                          }),
                          // but have not loaded yet and we set it to true before the inject so that
                          // we don't overwrite the injected window.WebVTT if it loads right away
                          (I["default"].WebVTT = !0),
                          a.el().parentNode.appendChild(b);
                      })();
                    var c = function () {
                        return a.trigger("texttrackchange");
                      },
                      d = function () {
                        c();
                        for (var a = 0; a < b.length; a++) {
                          var d = b[a];
                          d.removeEventListener("cuechange", c),
                            "showing" === d.mode &&
                              d.addEventListener("cuechange", c);
                        }
                      };
                    d(),
                      b.addEventListener("change", d),
                      this.on("dispose", function () {
                        b.removeEventListener("change", d);
                      });
                  }
                }),
                (b.prototype.videoTracks = function () {
                  return (
                    (this.videoTracks_ =
                      this.videoTracks_ || new v["default"]()),
                    this.videoTracks_
                  );
                }),
                (b.prototype.audioTracks = function () {
                  return (
                    (this.audioTracks_ =
                      this.audioTracks_ || new x["default"]()),
                    this.audioTracks_
                  );
                }),
                (b.prototype.textTracks = function () {
                  return (
                    (this.textTracks_ = this.textTracks_ || new s["default"]()),
                    this.textTracks_
                  );
                }),
                (b.prototype.remoteTextTracks = function () {
                  return (
                    (this.remoteTextTracks_ =
                      this.remoteTextTracks_ || new s["default"]()),
                    this.remoteTextTracks_
                  );
                }),
                (b.prototype.remoteTextTrackEls = function () {
                  return (
                    (this.remoteTextTrackEls_ =
                      this.remoteTextTrackEls_ || new m["default"]()),
                    this.remoteTextTrackEls_
                  );
                }),
                (b.prototype.addTextTrack = function (a, b, c) {
                  if (!a)
                    throw new Error(
                      "TextTrack kind is required but was not provided"
                    );
                  return M(this, a, b, c);
                }),
                (b.prototype.addRemoteTextTrack = function (a) {
                  var b = o["default"](a, { tech: this }),
                    c = new k["default"](b);
                  // store HTMLTrackElement and TextTrack to remote list
                  // must come after remoteTextTracks()
                  return (
                    this.remoteTextTrackEls().addTrackElement_(c),
                    this.remoteTextTracks().addTrack_(c.track),
                    this.textTracks().addTrack_(c.track),
                    c
                  );
                }),
                (b.prototype.removeRemoteTextTrack = function (a) {
                  this.textTracks().removeTrack_(a);
                  var b = this.remoteTextTrackEls().getTrackElementByTrack_(a);
                  // remove HTMLTrackElement and TextTrack from remote list
                  this.remoteTextTrackEls().removeTrackElement_(b),
                    this.remoteTextTracks().removeTrack_(a);
                }),
                (b.prototype.setPoster = function () {}),
                (b.prototype.canPlayType = function () {
                  return "";
                }),
                (b.isTech = function (a) {
                  return a.prototype instanceof b || a instanceof b || a === b;
                }),
                (b.registerTech = function (a, c) {
                  if ((b.techs_ || (b.techs_ = {}), !b.isTech(c)))
                    throw new Error("Tech " + a + " must be a Tech");
                  return (b.techs_[a] = c), c;
                }),
                (b.getTech = function (a) {
                  return b.techs_ && b.techs_[a]
                    ? b.techs_[a]
                    : I["default"] &&
                      I["default"].videojs &&
                      I["default"].videojs[a]
                    ? (C["default"].warn(
                        "The " +
                          a +
                          " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)"
                      ),
                      I["default"].videojs[a])
                    : void 0;
                }),
                b
              );
            })(i["default"]);
          L.prototype.textTracks_,
            /**
             * List of associated audio tracks
             *
             * @type {AudioTrackList}
             * @private
             */
            L.prototype.audioTracks_,
            /**
             * List of associated video tracks
             *
             * @type {VideoTrackList}
             * @private
             */
            L.prototype.videoTracks_;
          var M = function (a, b, c, d) {
            var e =
                arguments.length <= 4 || void 0 === arguments[4]
                  ? {}
                  : arguments[4],
              f = a.textTracks();
            (e.kind = b),
              c && (e.label = c),
              d && (e.language = d),
              (e.tech = a);
            var g = new q["default"](e);
            return f.addTrack_(g), g;
          };
          (L.prototype.featuresVolumeControl = !0),
            // Resizing plugins using request fullscreen reloads the plugin
            (L.prototype.featuresFullscreenResize = !1),
            (L.prototype.featuresPlaybackRate = !1),
            // Optional events that we can manually mimic with timers
            // currently not triggered by video-js-swf
            (L.prototype.featuresProgressEvents = !1),
            (L.prototype.featuresTimeupdateEvents = !1),
            (L.prototype.featuresNativeTextTracks = !1),
            /*
             * A functional mixin for techs that want to use the Source Handler pattern.
             *
             * ##### EXAMPLE:
             *
             *   Tech.withSourceHandlers.call(MyTech);
             *
             */ (L.withSourceHandlers = function (a) {
              /*
               * Register a source handler
               * Source handlers are scripts for handling specific formats.
               * The source handler pattern is used for adaptive formats (HLS, DASH) that
               * manually load video data and feed it into a Source Buffer (Media Source Extensions)
               * @param  {Function} handler  The source handler
               * @param  {Boolean}  first    Register it before any existing handlers
               */
              (a.registerSourceHandler = function (b, c) {
                var d = a.sourceHandlers;
                d || (d = a.sourceHandlers = []),
                  void 0 === c &&
                    // add to the end of the list
                    (c = d.length),
                  d.splice(c, 0, b);
              }),
                /*
                 * Check if the tech can support the given type
                 * @param  {String} type    The mimetype to check
                 * @return {String}         'probably', 'maybe', or '' (empty string)
                 */ (a.canPlayType = function (b) {
                  for (
                    var c = a.sourceHandlers || [], d = void 0, e = 0;
                    e < c.length;
                    e++
                  )
                    if ((d = c[e].canPlayType(b))) return d;
                  return "";
                }),
                /*
                 * Return the first source handler that supports the source
                 * TODO: Answer question: should 'probably' be prioritized over 'maybe'
                 * @param  {Object} source  The source object
                 * @param  {Object} options The options passed to the tech
                 * @returns {Object}       The first source handler that supports the source
                 * @returns {null}         Null if no source handler is found
                 */ (a.selectSourceHandler = function (b, c) {
                  for (
                    var d = a.sourceHandlers || [], e = void 0, f = 0;
                    f < d.length;
                    f++
                  )
                    if ((e = d[f].canHandleSource(b, c))) return d[f];
                  return null;
                }),
                /*
                 * Check if the tech can support the given source
                 * @param  {Object} srcObj  The source object
                 * @param  {Object} options The options passed to the tech
                 * @return {String}         'probably', 'maybe', or '' (empty string)
                 */ (a.canPlaySource = function (b, c) {
                  var d = a.selectSourceHandler(b, c);
                  return d ? d.canHandleSource(b, c) : "";
                });
              /*
               * When using a source handler, prefer its implementation of
               * any function normally provided by the tech.
               */
              var b = ["seekable", "duration"];
              b.forEach(function (a) {
                var b = this[a];
                "function" == typeof b &&
                  (this[a] = function () {
                    return this.sourceHandler_ && this.sourceHandler_[a]
                      ? this.sourceHandler_[a].apply(
                          this.sourceHandler_,
                          arguments
                        )
                      : b.apply(this, arguments);
                  });
              }, a.prototype),
                /*
                 * Create a function for setting the source using a source object
                 * and source handlers.
                 * Should never be called unless a source handler was found.
                 * @param {Object} source  A source object with src and type keys
                 * @return {Tech} self
                 */ (a.prototype.setSource = function (b) {
                  var c = a.selectSourceHandler(b, this.options_);
                  // Fall back to a native source hander when unsupported sources are
                  // deliberately set
                  // Dispose any existing source handler
                  // if we have a source and get another one
                  // then we are loading something new
                  // than clear all of our current tracks
                  // Catch if someone replaced the src without calling setSource.
                  // If they do, set currentSource_ to null and dispose our source handler.
                  return (
                    c ||
                      (a.nativeSourceHandler
                        ? (c = a.nativeSourceHandler)
                        : C["default"].error(
                            "No source hander found for the current source."
                          )),
                    this.disposeSourceHandler(),
                    this.off("dispose", this.disposeSourceHandler),
                    this.currentSource_ &&
                      (this.clearTracks(["audio", "video"]),
                      (this.currentSource_ = null)),
                    c !== a.nativeSourceHandler &&
                      ((this.currentSource_ = b),
                      this.off(
                        this.el_,
                        "loadstart",
                        a.prototype.firstLoadStartListener_
                      ),
                      this.off(
                        this.el_,
                        "loadstart",
                        a.prototype.successiveLoadStartListener_
                      ),
                      this.one(
                        this.el_,
                        "loadstart",
                        a.prototype.firstLoadStartListener_
                      )),
                    (this.sourceHandler_ = c.handleSource(
                      b,
                      this,
                      this.options_
                    )),
                    this.on("dispose", this.disposeSourceHandler),
                    this
                  );
                }),
                // On the first loadstart after setSource
                (a.prototype.firstLoadStartListener_ = function () {
                  this.one(
                    this.el_,
                    "loadstart",
                    a.prototype.successiveLoadStartListener_
                  );
                }),
                // On successive loadstarts when setSource has not been called again
                (a.prototype.successiveLoadStartListener_ = function () {
                  (this.currentSource_ = null),
                    this.disposeSourceHandler(),
                    this.one(
                      this.el_,
                      "loadstart",
                      a.prototype.successiveLoadStartListener_
                    );
                }),
                /*
                 * Clean up any existing source handler
                 */ (a.prototype.disposeSourceHandler = function () {
                  this.sourceHandler_ &&
                    this.sourceHandler_.dispose &&
                    (this.off(
                      this.el_,
                      "loadstart",
                      a.prototype.firstLoadStartListener_
                    ),
                    this.off(
                      this.el_,
                      "loadstart",
                      a.prototype.successiveLoadStartListener_
                    ),
                    this.sourceHandler_.dispose(),
                    (this.sourceHandler_ = null));
                });
            }),
            i["default"].registerComponent("Tech", L),
            // Old name for Tech
            i["default"].registerComponent("MediaTechController", L),
            L.registerTech("Tech", L),
            (c["default"] = L),
            (b.exports = c["default"]);
        },
        {
          "../component": 67,
          "../media-error.js": 108,
          "../tracks/audio-track": 126,
          "../tracks/audio-track-list": 125,
          "../tracks/html-track-element": 128,
          "../tracks/html-track-element-list": 127,
          "../tracks/text-track": 134,
          "../tracks/text-track-list": 132,
          "../tracks/video-track": 139,
          "../tracks/video-track-list": 138,
          "../utils/buffer.js": 141,
          "../utils/fn.js": 144,
          "../utils/log.js": 147,
          "../utils/merge-options.js": 148,
          "../utils/time-ranges.js": 150,
          "global/document": 1,
          "global/window": 2,
        },
      ],
      125: [
        function (a, b, c) {
          /**
           * @file audio-track-list.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./track-list"),
            i = e(h),
            j = a("../utils/browser.js"),
            k = d(j),
            l = a("global/document"),
            m = e(l),
            n = function (a, b) {
              for (var c = 0; c < a.length; c++)
                b.id !== a[c].id &&
                  // another audio track is enabled, disable it
                  (a[c].enabled = !1);
            },
            o = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? []
                    : arguments[0];
                f(this, b);
                // make sure only 1 track is enabled
                // sorted from last index to first index
                for (var d = void 0, e = c.length - 1; e >= 0; e--)
                  if (c[e].enabled) {
                    n(c, c[e]);
                    break;
                  }
                // IE8 forces us to implement inheritance ourselves
                // as it does not support Object.defineProperty properly
                if (k.IS_IE8) {
                  d = m["default"].createElement("custom");
                  for (var g in i["default"].prototype)
                    "constructor" !== g && (d[g] = i["default"].prototype[g]);
                  for (var g in b.prototype)
                    "constructor" !== g && (d[g] = b.prototype[g]);
                }
                return (d = a.call(this, c, d)), (d.changing_ = !1), d;
              }
              return (
                g(b, a),
                (b.prototype.addTrack_ = function (b) {
                  var c = this;
                  b.enabled && n(this, b),
                    a.prototype.addTrack_.call(this, b),
                    // native tracks don't have this
                    b.addEventListener &&
                      b.addEventListener("enabledchange", function () {
                        // when we are disabling other tracks (since we don't support
                        // more than one track at a time) we will set changing_
                        // to true so that we don't trigger additional change events
                        c.changing_ ||
                          ((c.changing_ = !0),
                          n(c, b),
                          (c.changing_ = !1),
                          c.trigger("change"));
                      });
                }),
                (b.prototype.addTrack = function (a) {
                  this.addTrack_(a);
                }),
                (b.prototype.removeTrack = function (b) {
                  a.prototype.removeTrack_.call(this, b);
                }),
                b
              );
            })(i["default"]);
          (c["default"] = o), (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "./track-list": 136,
          "global/document": 1,
        },
      ],
      126: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./track-enums"),
            i = a("./track"),
            j = e(i),
            k = a("../utils/merge-options"),
            l = e(k),
            m = a("../utils/browser.js"),
            n = d(m),
            o = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? {}
                    : arguments[0];
                f(this, b);
                var d = l["default"](c, {
                    kind: h.AudioTrackKind[c.kind] || "",
                  }),
                  e = a.call(this, d),
                  g = !1;
                if (n.IS_IE8)
                  for (var i in b.prototype)
                    "constructor" !== i && (e[i] = b.prototype[i]);
                // if the user sets this track to selected then
                // set selected to that true value otherwise
                // we keep it false
                return (
                  Object.defineProperty(e, "enabled", {
                    get: function () {
                      return g;
                    },
                    set: function (a) {
                      // an invalid or unchanged value
                      "boolean" == typeof a &&
                        a !== g &&
                        ((g = a), this.trigger("enabledchange"));
                    },
                  }),
                  d.enabled && (e.enabled = d.enabled),
                  (e.loaded_ = !0),
                  e
                );
              }
              return g(b, a), b;
            })(j["default"]);
          (c["default"] = o), (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "../utils/merge-options": 148,
          "./track": 137,
          "./track-enums": 135,
        },
      ],
      127: [
        function (a, b, c) {
          /**
           * @file html-track-element-list.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          c.__esModule = !0;
          var g = a("../utils/browser.js"),
            h = e(g),
            i = a("global/document"),
            j = d(i),
            k = (function () {
              function a() {
                var b =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? []
                    : arguments[0];
                f(this, a);
                var c = this;
                if (h.IS_IE8) {
                  c = j["default"].createElement("custom");
                  for (var d in a.prototype)
                    "constructor" !== d && (c[d] = a.prototype[d]);
                }
                (c.trackElements_ = []),
                  Object.defineProperty(c, "length", {
                    get: function () {
                      return this.trackElements_.length;
                    },
                  });
                for (var e = 0, g = b.length; e < g; e++)
                  c.addTrackElement_(b[e]);
                if (h.IS_IE8) return c;
              }
              return (
                (a.prototype.addTrackElement_ = function (a) {
                  this.trackElements_.push(a);
                }),
                (a.prototype.getTrackElementByTrack_ = function (a) {
                  for (
                    var b = void 0, c = 0, d = this.trackElements_.length;
                    c < d;
                    c++
                  )
                    if (a === this.trackElements_[c].track) {
                      b = this.trackElements_[c];
                      break;
                    }
                  return b;
                }),
                (a.prototype.removeTrackElement_ = function (a) {
                  for (var b = 0, c = this.trackElements_.length; b < c; b++)
                    if (a === this.trackElements_[b]) {
                      this.trackElements_.splice(b, 1);
                      break;
                    }
                }),
                a
              );
            })();
          (c["default"] = k), (b.exports = c["default"]);
        },
        { "../utils/browser.js": 140, "global/document": 1 },
      ],
      128: [
        function (a, b, c) {
          /**
           * @file html-track-element.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../utils/browser.js"),
            i = e(h),
            j = a("global/document"),
            k = d(j),
            l = a("../event-target"),
            m = d(l),
            n = a("../tracks/text-track"),
            o = d(n),
            p = 0,
            q = 1,
            r = 2,
            s = 3,
            t = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? {}
                    : arguments[0];
                f(this, b), a.call(this);
                var d = void 0,
                  e = this;
                if (i.IS_IE8) {
                  e = k["default"].createElement("custom");
                  for (var g in b.prototype)
                    "constructor" !== g && (e[g] = b.prototype[g]);
                }
                var h = new o["default"](c);
                if (
                  ((e.kind = h.kind),
                  (e.src = h.src),
                  (e.srclang = h.language),
                  (e.label = h.label),
                  (e["default"] = h["default"]),
                  Object.defineProperty(e, "readyState", {
                    get: function () {
                      return d;
                    },
                  }),
                  Object.defineProperty(e, "track", {
                    get: function () {
                      return h;
                    },
                  }),
                  (d = p),
                  h.addEventListener("loadeddata", function () {
                    (d = r), e.trigger({ type: "load", target: e });
                  }),
                  i.IS_IE8)
                )
                  return e;
              }
              return g(b, a), b;
            })(m["default"]);
          (t.prototype.allowedEvents_ = { load: "load" }),
            (t.NONE = p),
            (t.LOADING = q),
            (t.LOADED = r),
            (t.ERROR = s),
            (c["default"] = t),
            (b.exports = c["default"]);
        },
        {
          "../event-target": 104,
          "../tracks/text-track": 134,
          "../utils/browser.js": 140,
          "global/document": 1,
        },
      ],
      129: [
        function (a, b, c) {
          /**
           * @file text-track-cue-list.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          c.__esModule = !0;
          var g = a("../utils/browser.js"),
            h = e(g),
            i = a("global/document"),
            j = d(i),
            k = (function () {
              function a(b) {
                f(this, a);
                var c = this;
                if (h.IS_IE8) {
                  c = j["default"].createElement("custom");
                  for (var d in a.prototype)
                    "constructor" !== d && (c[d] = a.prototype[d]);
                }
                if (
                  (a.prototype.setCues_.call(c, b),
                  Object.defineProperty(c, "length", {
                    get: function () {
                      return this.length_;
                    },
                  }),
                  h.IS_IE8)
                )
                  return c;
              }
              /**
               * A setter for cues in this list
               *
               * @param {Array} cues an array of cues
               * @method setCues_
               * @private
               */
              /**
               * Get a cue that is currently in the Cue list by id
               *
               * @param {String} id
               * @method getCueById
               * @return {Object} a single cue
               */
              return (
                (a.prototype.setCues_ = function (a) {
                  var b = this.length || 0,
                    c = 0,
                    d = a.length;
                  (this.cues_ = a), (this.length_ = a.length);
                  var e = function (a) {
                    "" + a in this ||
                      Object.defineProperty(this, "" + a, {
                        get: function () {
                          return this.cues_[a];
                        },
                      });
                  };
                  if (b < d) for (c = b; c < d; c++) e.call(this, c);
                }),
                (a.prototype.getCueById = function (a) {
                  for (var b = null, c = 0, d = this.length; c < d; c++) {
                    var e = this[c];
                    if (e.id === a) {
                      b = e;
                      break;
                    }
                  }
                  return b;
                }),
                a
              );
            })();
          (c["default"] = k), (b.exports = c["default"]);
        },
        { "../utils/browser.js": 140, "global/document": 1 },
      ],
      130: [
        function (a, b, c) {
          /**
           * @file text-track-display.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          function h(a, b) {
            // color looks like "#f0e"
            return (
              "rgba(" +
              parseInt(a[1] + a[1], 16) +
              "," +
              parseInt(a[2] + a[2], 16) +
              "," +
              parseInt(a[3] + a[3], 16) +
              "," +
              b +
              ")"
            );
          }
          /**
           * Try to update style
           * Some style changes will throw an error, particularly in IE8. Those should be noops.
           *
           * @param {Element} el The element to be styles
           * @param {CSSProperty} style The CSS property to be styled
           * @param {CSSStyle} rule The actual style to be applied to the property
           * @method tryUpdateStyle
           */
          function i(a, b, c) {
            //
            try {
              a.style[b] = c;
            } catch (d) {}
          }
          c.__esModule = !0;
          var j = a("../component"),
            k = e(j),
            l = a("../menu/menu.js"),
            m = (e(l), a("../menu/menu-item.js")),
            n = (e(m), a("../menu/menu-button.js")),
            o = (e(n), a("../utils/fn.js")),
            p = d(o),
            q = a("global/document"),
            r = (e(q), a("global/window")),
            s = e(r),
            t = "#222",
            u = "#ccc",
            v = {
              monospace: "monospace",
              sansSerif: "sans-serif",
              serif: "serif",
              monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
              monospaceSerif: '"Courier New", monospace',
              proportionalSansSerif: "sans-serif",
              proportionalSerif: "serif",
              casual: '"Comic Sans MS", Impact, fantasy',
              script: '"Monotype Corsiva", cursive',
              smallcaps:
                '"Andale Mono", "Lucida Console", monospace, sans-serif',
            },
            w = (function (a) {
              function b(c, d, e) {
                f(this, b),
                  a.call(this, c, d, e),
                  c.on("loadstart", p.bind(this, this.toggleDisplay)),
                  c.on("texttrackchange", p.bind(this, this.updateDisplay)),
                  // This used to be called during player init, but was causing an error
                  // if a track should show by default and the display hadn't loaded yet.
                  // Should probably be moved to an external track loader when we support
                  // tracks that don't need a display.
                  c.ready(
                    p.bind(this, function () {
                      if (c.tech_ && c.tech_.featuresNativeTextTracks)
                        return void this.hide();
                      c.on(
                        "fullscreenchange",
                        p.bind(this, this.updateDisplay)
                      );
                      for (
                        var a = this.options_.playerOptions.tracks || [], b = 0;
                        b < a.length;
                        b++
                      ) {
                        var d = a[b];
                        this.player_.addRemoteTextTrack(d);
                      }
                      var e = { captions: 1, subtitles: 1 },
                        f = this.player_.textTracks(),
                        g = void 0,
                        h = void 0;
                      if (f) {
                        for (var b = 0; b < f.length; b++) {
                          var d = f[b];
                          d["default"] &&
                            ("descriptions" !== d.kind || g
                              ? d.kind in e && !h && (h = d)
                              : (g = d));
                        }
                        // We want to show the first default track but captions and subtitles
                        // take precedence over descriptions.
                        // So, display the first default captions or subtitles track
                        // and otherwise the first default descriptions track.
                        h ? (h.mode = "showing") : g && (g.mode = "showing");
                      }
                    })
                  );
              }
              /**
               * Add cue HTML to display
               *
               * @param {Number} color Hex number for color, like #f0e
               * @param {Number} opacity Value for opacity,0.0 - 1.0
               * @return {RGBAColor} In the form 'rgba(255, 0, 0, 0.3)'
               * @method constructColor
               */
              /**
               * Toggle display texttracks
               *
               * @method toggleDisplay
               */
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Clear display texttracks
               *
               * @method clearDisplay
               */
              /**
               * Update display texttracks
               *
               * @method updateDisplay
               */
              /**
               * Add texttrack to texttrack list
               *
               * @param {TextTrackObject} track Texttrack object to be added to list
               * @method updateForTrack
               */
              return (
                g(b, a),
                (b.prototype.toggleDisplay = function () {
                  this.player_.tech_ &&
                  this.player_.tech_.featuresNativeTextTracks
                    ? this.hide()
                    : this.show();
                }),
                (b.prototype.createEl = function () {
                  return a.prototype.createEl.call(
                    this,
                    "div",
                    { className: "vjs-text-track-display" },
                    { "aria-live": "assertive", "aria-atomic": "true" }
                  );
                }),
                (b.prototype.clearDisplay = function () {
                  "function" == typeof s["default"].WebVTT &&
                    s["default"].WebVTT.processCues(s["default"], [], this.el_);
                }),
                (b.prototype.updateDisplay = function () {
                  var a = this.player_.textTracks();
                  if ((this.clearDisplay(), a)) {
                    for (
                      // Track display prioritization model: if multiple tracks are 'showing',
                      //  display the first 'subtitles' or 'captions' track which is 'showing',
                      //  otherwise display the first 'descriptions' track which is 'showing'
                      var b = null, c = null, d = a.length;
                      d--;

                    ) {
                      var e = a[d];
                      "showing" === e.mode &&
                        ("descriptions" === e.kind ? (b = e) : (c = e));
                    }
                    c ? this.updateForTrack(c) : b && this.updateForTrack(b);
                  }
                }),
                (b.prototype.updateForTrack = function (a) {
                  if (
                    "function" == typeof s["default"].WebVTT &&
                    a.activeCues
                  ) {
                    for (
                      var b = this.player_.textTrackSettings.getValues(),
                        c = [],
                        d = 0;
                      d < a.activeCues.length;
                      d++
                    )
                      c.push(a.activeCues[d]);
                    s["default"].WebVTT.processCues(s["default"], c, this.el_);
                    for (var e = c.length; e--; ) {
                      var f = c[e];
                      if (f) {
                        var g = f.displayState;
                        if (
                          (b.color && (g.firstChild.style.color = b.color),
                          b.textOpacity &&
                            i(
                              g.firstChild,
                              "color",
                              h(b.color || "#fff", b.textOpacity)
                            ),
                          b.backgroundColor &&
                            (g.firstChild.style.backgroundColor =
                              b.backgroundColor),
                          b.backgroundOpacity &&
                            i(
                              g.firstChild,
                              "backgroundColor",
                              h(
                                b.backgroundColor || "#000",
                                b.backgroundOpacity
                              )
                            ),
                          b.windowColor &&
                            (b.windowOpacity
                              ? i(
                                  g,
                                  "backgroundColor",
                                  h(b.windowColor, b.windowOpacity)
                                )
                              : (g.style.backgroundColor = b.windowColor)),
                          b.edgeStyle &&
                            ("dropshadow" === b.edgeStyle
                              ? (g.firstChild.style.textShadow =
                                  "2px 2px 3px " +
                                  t +
                                  ", 2px 2px 4px " +
                                  t +
                                  ", 2px 2px 5px " +
                                  t)
                              : "raised" === b.edgeStyle
                              ? (g.firstChild.style.textShadow =
                                  "1px 1px " +
                                  t +
                                  ", 2px 2px " +
                                  t +
                                  ", 3px 3px " +
                                  t)
                              : "depressed" === b.edgeStyle
                              ? (g.firstChild.style.textShadow =
                                  "1px 1px " +
                                  u +
                                  ", 0 1px " +
                                  u +
                                  ", -1px -1px " +
                                  t +
                                  ", 0 -1px " +
                                  t)
                              : "uniform" === b.edgeStyle &&
                                (g.firstChild.style.textShadow =
                                  "0 0 4px " +
                                  t +
                                  ", 0 0 4px " +
                                  t +
                                  ", 0 0 4px " +
                                  t +
                                  ", 0 0 4px " +
                                  t)),
                          b.fontPercent && 1 !== b.fontPercent)
                        ) {
                          var j = s["default"].parseFloat(g.style.fontSize);
                          (g.style.fontSize = j * b.fontPercent + "px"),
                            (g.style.height = "auto"),
                            (g.style.top = "auto"),
                            (g.style.bottom = "2px");
                        }
                        b.fontFamily &&
                          "default" !== b.fontFamily &&
                          ("small-caps" === b.fontFamily
                            ? (g.firstChild.style.fontVariant = "small-caps")
                            : (g.firstChild.style.fontFamily =
                                v[b.fontFamily]));
                      }
                    }
                  }
                }),
                b
              );
            })(k["default"]);
          k["default"].registerComponent("TextTrackDisplay", w),
            (c["default"] = w),
            (b.exports = c["default"]);
        },
        {
          "../component": 67,
          "../menu/menu-button.js": 109,
          "../menu/menu-item.js": 110,
          "../menu/menu.js": 111,
          "../utils/fn.js": 144,
          "global/document": 1,
          "global/window": 2,
        },
      ],
      131: [
        function (a, b, c) {
          /**
           * Utilities for capturing text track state and re-creating tracks
           * based on a capture.
           *
           * @file text-track-list-converter.js
           */
          /**
           * Examine a single text track and return a JSON-compatible javascript
           * object that represents the text track's state.
           * @param track {TextTrackObject} the text track to query
           * @return {Object} a serializable javascript representation of the
           * @private
           */
          "use strict";
          c.__esModule = !0;
          var d = function (a) {
              var b = [
                "kind",
                "label",
                "language",
                "id",
                "inBandMetadataTrackDispatchType",
                "mode",
                "src",
              ].reduce(
                function (b, c, d) {
                  return a[c] && (b[c] = a[c]), b;
                },
                {
                  cues:
                    a.cues &&
                    Array.prototype.map.call(a.cues, function (a) {
                      return {
                        startTime: a.startTime,
                        endTime: a.endTime,
                        text: a.text,
                        id: a.id,
                      };
                    }),
                }
              );
              return b;
            },
            e = function (a) {
              var b = a.$$("track"),
                c = Array.prototype.map.call(b, function (a) {
                  return a.track;
                }),
                e = Array.prototype.map.call(b, function (a) {
                  var b = d(a.track);
                  return a.src && (b.src = a.src), b;
                });
              return e.concat(
                Array.prototype.filter
                  .call(a.textTracks(), function (a) {
                    return c.indexOf(a) === -1;
                  })
                  .map(d)
              );
            },
            f = function (a, b) {
              return (
                a.forEach(function (a) {
                  var c = b.addRemoteTextTrack(a).track;
                  !a.src &&
                    a.cues &&
                    a.cues.forEach(function (a) {
                      return c.addCue(a);
                    });
                }),
                b.textTracks()
              );
            };
          (c["default"] = {
            textTracksToJson: e,
            jsonToTextTracks: f,
            trackToJson_: d,
          }),
            (b.exports = c["default"]);
        },
        {},
      ],
      132: [
        function (a, b, c) {
          /**
           * @file text-track-list.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./track-list"),
            i = e(h),
            j = a("../utils/fn.js"),
            k = d(j),
            l = a("../utils/browser.js"),
            m = d(l),
            n = a("global/document"),
            o = e(n),
            p = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? []
                    : arguments[0];
                f(this, b);
                var d = void 0;
                // IE8 forces us to implement inheritance ourselves
                // as it does not support Object.defineProperty properly
                if (m.IS_IE8) {
                  d = o["default"].createElement("custom");
                  for (var e in i["default"].prototype)
                    "constructor" !== e && (d[e] = i["default"].prototype[e]);
                  for (var e in b.prototype)
                    "constructor" !== e && (d[e] = b.prototype[e]);
                }
                return (d = a.call(this, c, d));
              }
              /**
               * Remove TextTrack from TextTrackList
               * NOTE: Be mindful of what is passed in as it may be a HTMLTrackElement
               *
               * @param {TextTrack} rtrack
               * @method removeTrack_
               * @private
               */
              /**
               * Get a TextTrack from TextTrackList by a tracks id
               *
               * @param {String} id - the id of the track to get
               * @method getTrackById
               * @return {TextTrack}
               * @private
               */
              return (
                g(b, a),
                (b.prototype.addTrack_ = function (b) {
                  a.prototype.addTrack_.call(this, b),
                    b.addEventListener(
                      "modechange",
                      k.bind(this, function () {
                        this.trigger("change");
                      })
                    );
                }),
                (b.prototype.removeTrack_ = function (a) {
                  for (var b = void 0, c = 0, d = this.length; c < d; c++)
                    if (this[c] === a) {
                      (b = this[c]),
                        b.off && b.off(),
                        this.tracks_.splice(c, 1);
                      break;
                    }
                  b && this.trigger({ track: b, type: "removetrack" });
                }),
                (b.prototype.getTrackById = function (a) {
                  for (var b = null, c = 0, d = this.length; c < d; c++) {
                    var e = this[c];
                    if (e.id === a) {
                      b = e;
                      break;
                    }
                  }
                  return b;
                }),
                b
              );
            })(i["default"]);
          (c["default"] = p), (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "../utils/fn.js": 144,
          "./track-list": 136,
          "global/document": 1,
        },
      ],
      133: [
        function (a, b, c) {
          /**
           * @file text-track-settings.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          function h(a) {
            var b = void 0;
            // not all browsers support selectedOptions, so, fallback to options
            return (
              a.selectedOptions
                ? (b = a.selectedOptions[0])
                : a.options && (b = a.options[a.options.selectedIndex]),
              b.value
            );
          }
          function i(a, b) {
            if (b) {
              var c = void 0;
              for (c = 0; c < a.options.length; c++) {
                var d = a.options[c];
                if (d.value === b) break;
              }
              a.selectedIndex = c;
            }
          }
          function j(a, b, c) {
            var d =
              '\n    <div role="document">\n      <div role="heading" aria-level="1" id="' +
              b +
              '" class="vjs-control-text">Captions Settings Dialog</div>\n      <div id="' +
              c +
              '" class="vjs-control-text">Beginning of dialog window. Escape will cancel and close the window.</div>\n      <div class="vjs-tracksettings">\n        <div class="vjs-tracksettings-colors">\n          <fieldset class="vjs-fg-color vjs-tracksetting">\n            <legend>Text</legend>\n            <label class="vjs-label" for="captions-foreground-color-' +
              a +
              '">Color</label>\n            <select id="captions-foreground-color-' +
              a +
              '">\n              <option value="#FFF" selected>White</option>\n              <option value="#000">Black</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-text-opacity vjs-opacity">\n              <label class="vjs-label" for="captions-foreground-opacity-' +
              a +
              '">Transparency</label>\n              <select id="captions-foreground-opacity-' +
              a +
              '">\n                <option value="1" selected>Opaque</option>\n                <option value="0.5">Semi-Opaque</option>\n              </select>\n            </span>\n          </fieldset>\n          <fieldset class="vjs-bg-color vjs-tracksetting">\n            <legend>Background</legend>\n            <label class="vjs-label" for="captions-background-color-' +
              a +
              '">Color</label>\n            <select id="captions-background-color-' +
              a +
              '">\n              <option value="#000" selected>Black</option>\n              <option value="#FFF">White</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-bg-opacity vjs-opacity">\n              <label class="vjs-label" for="captions-background-opacity-' +
              a +
              '">Transparency</label>\n              <select id="captions-background-opacity-' +
              a +
              '">\n                <option value="1" selected>Opaque</option>\n                <option value="0.5">Semi-Transparent</option>\n                <option value="0">Transparent</option>\n              </select>\n            </span>\n          </fieldset>\n          <fieldset class="window-color vjs-tracksetting">\n            <legend>Window</legend>\n            <label class="vjs-label" for="captions-window-color-' +
              a +
              '">Color</label>\n            <select id="captions-window-color-' +
              a +
              '">\n              <option value="#000" selected>Black</option>\n              <option value="#FFF">White</option>\n              <option value="#F00">Red</option>\n              <option value="#0F0">Green</option>\n              <option value="#00F">Blue</option>\n              <option value="#FF0">Yellow</option>\n              <option value="#F0F">Magenta</option>\n              <option value="#0FF">Cyan</option>\n            </select>\n            <span class="vjs-window-opacity vjs-opacity">\n              <label class="vjs-label" for="captions-window-opacity-' +
              a +
              '">Transparency</label>\n              <select id="captions-window-opacity-' +
              a +
              '">\n                <option value="0" selected>Transparent</option>\n                <option value="0.5">Semi-Transparent</option>\n                <option value="1">Opaque</option>\n              </select>\n            </span>\n          </fieldset>\n        </div> <!-- vjs-tracksettings-colors -->\n        <div class="vjs-tracksettings-font">\n          <div class="vjs-font-percent vjs-tracksetting">\n            <label class="vjs-label" for="captions-font-size-' +
              a +
              '">Font Size</label>\n            <select id="captions-font-size-' +
              a +
              '">\n              <option value="0.50">50%</option>\n              <option value="0.75">75%</option>\n              <option value="1.00" selected>100%</option>\n              <option value="1.25">125%</option>\n              <option value="1.50">150%</option>\n              <option value="1.75">175%</option>\n              <option value="2.00">200%</option>\n              <option value="3.00">300%</option>\n              <option value="4.00">400%</option>\n            </select>\n          </div>\n          <div class="vjs-edge-style vjs-tracksetting">\n            <label class="vjs-label" for="captions-edge-style-' +
              a +
              '">Text Edge Style</label>\n            <select id="captions-edge-style-' +
              a +
              '">\n              <option value="none" selected>None</option>\n              <option value="raised">Raised</option>\n              <option value="depressed">Depressed</option>\n              <option value="uniform">Uniform</option>\n              <option value="dropshadow">Dropshadow</option>\n            </select>\n          </div>\n          <div class="vjs-font-family vjs-tracksetting">\n            <label class="vjs-label" for="captions-font-family-' +
              a +
              '">Font Family</label>\n            <select id="captions-font-family-' +
              a +
              '">\n              <option value="proportionalSansSerif" selected>Proportional Sans-Serif</option>\n              <option value="monospaceSansSerif">Monospace Sans-Serif</option>\n              <option value="proportionalSerif">Proportional Serif</option>\n              <option value="monospaceSerif">Monospace Serif</option>\n              <option value="casual">Casual</option>\n              <option value="script">Script</option>\n              <option value="small-caps">Small Caps</option>\n            </select>\n          </div>\n        </div> <!-- vjs-tracksettings-font -->\n        <div class="vjs-tracksettings-controls">\n          <button class="vjs-default-button">Defaults</button>\n          <button class="vjs-done-button">Done</button>\n        </div>\n      </div> <!-- vjs-tracksettings -->\n    </div> <!--  role="document" -->';
            return d;
          }
          c.__esModule = !0;
          var k = a("../component"),
            l = e(k),
            m = a("../utils/events.js"),
            n = d(m),
            o = a("../utils/fn.js"),
            p = d(o),
            q = a("../utils/log.js"),
            r = e(q),
            s = a("safe-json-parse/tuple"),
            t = e(s),
            u = a("global/window"),
            v = e(u),
            w = (function (a) {
              function b(c, d) {
                f(this, b),
                  a.call(this, c, d),
                  this.hide(),
                  // Grab `persistTextTrackSettings` from the player options if not passed in child options
                  void 0 === d.persistTextTrackSettings &&
                    (this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings),
                  n.on(
                    this.$(".vjs-done-button"),
                    "click",
                    p.bind(this, function () {
                      this.saveSettings(), this.hide();
                    })
                  ),
                  n.on(
                    this.$(".vjs-default-button"),
                    "click",
                    p.bind(this, function () {
                      (this.$(".vjs-fg-color > select").selectedIndex = 0),
                        (this.$(".vjs-bg-color > select").selectedIndex = 0),
                        (this.$(".window-color > select").selectedIndex = 0),
                        (this.$(
                          ".vjs-text-opacity > select"
                        ).selectedIndex = 0),
                        (this.$(".vjs-bg-opacity > select").selectedIndex = 0),
                        (this.$(
                          ".vjs-window-opacity > select"
                        ).selectedIndex = 0),
                        (this.$(".vjs-edge-style select").selectedIndex = 0),
                        (this.$(".vjs-font-family select").selectedIndex = 0),
                        (this.$(".vjs-font-percent select").selectedIndex = 2),
                        this.updateDisplay();
                    })
                  ),
                  n.on(
                    this.$(".vjs-fg-color > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-bg-color > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".window-color > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-text-opacity > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-bg-opacity > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-window-opacity > select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-font-percent select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-edge-style select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  n.on(
                    this.$(".vjs-font-family select"),
                    "change",
                    p.bind(this, this.updateDisplay)
                  ),
                  this.options_.persistTextTrackSettings &&
                    this.restoreSettings();
              }
              /**
               * Create the component's DOM element
               *
               * @return {Element}
               * @method createEl
               */
              /**
               * Get texttrack settings
               * Settings are
               * .vjs-edge-style
               * .vjs-font-family
               * .vjs-fg-color
               * .vjs-text-opacity
               * .vjs-bg-color
               * .vjs-bg-opacity
               * .window-color
               * .vjs-window-opacity
               *
               * @return {Object}
               * @method getValues
               */
              /**
               * Set texttrack settings
               * Settings are
               * .vjs-edge-style
               * .vjs-font-family
               * .vjs-fg-color
               * .vjs-text-opacity
               * .vjs-bg-color
               * .vjs-bg-opacity
               * .window-color
               * .vjs-window-opacity
               *
               * @param {Object} values Object with texttrack setting values
               * @method setValues
               */
              /**
               * Restore texttrack settings
               *
               * @method restoreSettings
               */
              /**
               * Save texttrack settings to local storage
               *
               * @method saveSettings
               */
              /**
               * Update display of texttrack settings
               *
               * @method updateDisplay
               */
              return (
                g(b, a),
                (b.prototype.createEl = function () {
                  var b = this.id_,
                    c = "TTsettingsDialogLabel-" + b,
                    d = "TTsettingsDialogDescription-" + b;
                  return a.prototype.createEl.call(
                    this,
                    "div",
                    {
                      className: "vjs-caption-settings vjs-modal-overlay",
                      innerHTML: j(b, c, d),
                      tabIndex: -1,
                    },
                    {
                      role: "dialog",
                      "aria-labelledby": c,
                      "aria-describedby": d,
                    }
                  );
                }),
                (b.prototype.getValues = function () {
                  var a = h(this.$(".vjs-edge-style select")),
                    b = h(this.$(".vjs-font-family select")),
                    c = h(this.$(".vjs-fg-color > select")),
                    d = h(this.$(".vjs-text-opacity > select")),
                    e = h(this.$(".vjs-bg-color > select")),
                    f = h(this.$(".vjs-bg-opacity > select")),
                    g = h(this.$(".window-color > select")),
                    i = h(this.$(".vjs-window-opacity > select")),
                    j = v["default"].parseFloat(
                      h(this.$(".vjs-font-percent > select"))
                    ),
                    k = {
                      backgroundOpacity: f,
                      textOpacity: d,
                      windowOpacity: i,
                      edgeStyle: a,
                      fontFamily: b,
                      color: c,
                      backgroundColor: e,
                      windowColor: g,
                      fontPercent: j,
                    };
                  for (var l in k)
                    ("" === k[l] ||
                      "none" === k[l] ||
                      ("fontPercent" === l && 1 === k[l])) &&
                      delete k[l];
                  return k;
                }),
                (b.prototype.setValues = function (a) {
                  i(this.$(".vjs-edge-style select"), a.edgeStyle),
                    i(this.$(".vjs-font-family select"), a.fontFamily),
                    i(this.$(".vjs-fg-color > select"), a.color),
                    i(this.$(".vjs-text-opacity > select"), a.textOpacity),
                    i(this.$(".vjs-bg-color > select"), a.backgroundColor),
                    i(this.$(".vjs-bg-opacity > select"), a.backgroundOpacity),
                    i(this.$(".window-color > select"), a.windowColor),
                    i(this.$(".vjs-window-opacity > select"), a.windowOpacity);
                  var b = a.fontPercent;
                  b && (b = b.toFixed(2)),
                    i(this.$(".vjs-font-percent > select"), b);
                }),
                (b.prototype.restoreSettings = function () {
                  var a = void 0,
                    b = void 0;
                  try {
                    var c = t["default"](
                      v["default"].localStorage.getItem(
                        "vjs-text-track-settings"
                      )
                    );
                    (a = c[0]), (b = c[1]), a && r["default"].error(a);
                  } catch (d) {
                    r["default"].warn(d);
                  }
                  b && this.setValues(b);
                }),
                (b.prototype.saveSettings = function () {
                  if (this.options_.persistTextTrackSettings) {
                    var a = this.getValues();
                    try {
                      Object.getOwnPropertyNames(a).length > 0
                        ? v["default"].localStorage.setItem(
                            "vjs-text-track-settings",
                            JSON.stringify(a)
                          )
                        : v["default"].localStorage.removeItem(
                            "vjs-text-track-settings"
                          );
                    } catch (b) {
                      r["default"].warn(b);
                    }
                  }
                }),
                (b.prototype.updateDisplay = function () {
                  var a = this.player_.getChild("textTrackDisplay");
                  a && a.updateDisplay();
                }),
                b
              );
            })(l["default"]);
          l["default"].registerComponent("TextTrackSettings", w),
            (c["default"] = w),
            (b.exports = c["default"]);
        },
        {
          "../component": 67,
          "../utils/events.js": 143,
          "../utils/fn.js": 144,
          "../utils/log.js": 147,
          "global/window": 2,
          "safe-json-parse/tuple": 54,
        },
      ],
      134: [
        function (a, b, c) {
          /**
           * @file text-track.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./text-track-cue-list"),
            i = e(h),
            j = a("../utils/fn.js"),
            k = d(j),
            l = a("./track-enums"),
            m = a("../utils/log.js"),
            n = e(m),
            o = a("global/document"),
            p = (e(o), a("global/window")),
            q = e(p),
            r = a("./track.js"),
            s = e(r),
            t = a("../utils/url.js"),
            u = a("xhr"),
            v = e(u),
            w = a("../utils/merge-options"),
            x = e(w),
            y = a("../utils/browser.js"),
            z = d(y),
            A = function (a, b) {
              var c = new q["default"].WebVTT.Parser(
                  q["default"],
                  q["default"].vttjs,
                  q["default"].WebVTT.StringDecoder()
                ),
                d = [];
              (c.oncue = function (a) {
                b.addCue(a);
              }),
                (c.onparsingerror = function (a) {
                  d.push(a);
                }),
                (c.onflush = function () {
                  b.trigger({ type: "loadeddata", target: b });
                }),
                c.parse(a),
                d.length > 0 &&
                  (console.groupCollapsed,
                  d.forEach(function (a) {
                    return n["default"].error(a);
                  }),
                  console.groupEnd),
                c.flush();
            },
            B = function (a, b) {
              var c = { uri: a },
                d = t.isCrossOrigin(a);
              d && (c.cors = d),
                v["default"](
                  c,
                  k.bind(this, function (a, c, d) {
                    // Make sure that vttjs has loaded, otherwise, wait till it finished loading
                    // NOTE: this is only used for the alt/video.novtt.js build
                    return a
                      ? n["default"].error(a, c)
                      : ((b.loaded_ = !0),
                        void ("function" != typeof q["default"].WebVTT
                          ? b.tech_ &&
                            !(function () {
                              var a = function () {
                                return A(d, b);
                              };
                              b.tech_.on("vttjsloaded", a),
                                b.tech_.on("vttjserror", function () {
                                  n["default"].error(
                                    "vttjs failed to load, stopping trying to process " +
                                      b.src
                                  ),
                                    b.tech_.off("vttjsloaded", a);
                                });
                            })()
                          : A(d, b)));
                  })
                );
            },
            C = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? {}
                    : arguments[0];
                if ((f(this, b), !c.tech))
                  throw new Error("A tech was not provided.");
                var d = x["default"](c, {
                    kind: l.TextTrackKind[c.kind] || "subtitles",
                    language: c.language || c.srclang || "",
                  }),
                  e = l.TextTrackMode[d.mode] || "disabled",
                  g = d["default"];
                ("metadata" !== d.kind && "chapters" !== d.kind) ||
                  (e = "hidden");
                // on IE8 this will be a document element
                // for every other browser this will be a normal object
                var h = a.call(this, d);
                if (((h.tech_ = d.tech), z.IS_IE8))
                  for (var j in b.prototype)
                    "constructor" !== j && (h[j] = b.prototype[j]);
                (h.cues_ = []), (h.activeCues_ = []);
                var m = new i["default"](h.cues_),
                  n = new i["default"](h.activeCues_),
                  o = !1,
                  p = k.bind(h, function () {
                    this.activeCues, o && (this.trigger("cuechange"), (o = !1));
                  });
                return (
                  "disabled" !== e && h.tech_.on("timeupdate", p),
                  Object.defineProperty(h, "default", {
                    get: function () {
                      return g;
                    },
                    set: function () {},
                  }),
                  Object.defineProperty(h, "mode", {
                    get: function () {
                      return e;
                    },
                    set: function (a) {
                      l.TextTrackMode[a] &&
                        ((e = a),
                        "showing" === e && this.tech_.on("timeupdate", p),
                        this.trigger("modechange"));
                    },
                  }),
                  Object.defineProperty(h, "cues", {
                    get: function () {
                      return this.loaded_ ? m : null;
                    },
                    set: function () {},
                  }),
                  Object.defineProperty(h, "activeCues", {
                    get: function () {
                      if (!this.loaded_) return null;
                      // nothing to do
                      if (0 === this.cues.length) return n;
                      for (
                        var a = this.tech_.currentTime(),
                          b = [],
                          c = 0,
                          d = this.cues.length;
                        c < d;
                        c++
                      ) {
                        var e = this.cues[c];
                        e.startTime <= a && e.endTime >= a
                          ? b.push(e)
                          : e.startTime === e.endTime &&
                            e.startTime <= a &&
                            e.startTime + 0.5 >= a &&
                            b.push(e);
                      }
                      if (((o = !1), b.length !== this.activeCues_.length))
                        o = !0;
                      else
                        for (var c = 0; c < b.length; c++)
                          this.activeCues_.indexOf(b[c]) === -1 && (o = !0);
                      return (
                        (this.activeCues_ = b), n.setCues_(this.activeCues_), n
                      );
                    },
                    set: function () {},
                  }),
                  d.src ? ((h.src = d.src), B(d.src, h)) : (h.loaded_ = !0),
                  h
                );
              }
              /**
               * cuechange - One or more cues in the track have become active or stopped being active.
               */
              /**
               * add a cue to the internal list of cues
               *
               * @param {Object} cue the cue to add to our internal list
               * @method addCue
               */
              /**
               * remvoe a cue from our internal list
               *
               * @param {Object} removeCue the cue to remove from our internal list
               * @method removeCue
               */
              return (
                g(b, a),
                (b.prototype.addCue = function (a) {
                  var b = this.tech_.textTracks();
                  if (b)
                    for (var c = 0; c < b.length; c++)
                      b[c] !== this && b[c].removeCue(a);
                  this.cues_.push(a), this.cues.setCues_(this.cues_);
                }),
                (b.prototype.removeCue = function (a) {
                  for (var b = !1, c = 0, d = this.cues_.length; c < d; c++) {
                    var e = this.cues_[c];
                    e === a && (this.cues_.splice(c, 1), (b = !0));
                  }
                  b && this.cues.setCues_(this.cues_);
                }),
                b
              );
            })(s["default"]);
          (C.prototype.allowedEvents_ = { cuechange: "cuechange" }),
            (c["default"] = C),
            (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "../utils/fn.js": 144,
          "../utils/log.js": 147,
          "../utils/merge-options": 148,
          "../utils/url.js": 152,
          "./text-track-cue-list": 129,
          "./track-enums": 135,
          "./track.js": 137,
          "global/document": 1,
          "global/window": 2,
          xhr: 56,
        },
      ],
      135: [
        function (a, b, c) {
          /**
           * @file track-kinds.js
           */
          /**
           * https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind
           *
           * enum VideoTrackKind {
           *   "alternative",
           *   "captions",
           *   "main",
           *   "sign",
           *   "subtitles",
           *   "commentary",
           *   "",
           * };
           */
          "use strict";
          c.__esModule = !0;
          var d = {
              alternative: "alternative",
              captions: "captions",
              main: "main",
              sign: "sign",
              subtitles: "subtitles",
              commentary: "commentary",
            },
            e = {
              alternative: "alternative",
              descriptions: "descriptions",
              main: "main",
              "main-desc": "main-desc",
              translation: "translation",
              commentary: "commentary",
            },
            f = {
              subtitles: "subtitles",
              captions: "captions",
              descriptions: "descriptions",
              chapters: "chapters",
              metadata: "metadata",
            },
            g = {
              disabled: "disabled",
              hidden: "hidden",
              showing: "showing",
            }; /* jshint ignore:start */
          // we ignore jshint here because it does not see
          // AudioTrackKind as defined here
          (c["default"] = {
            VideoTrackKind: d,
            AudioTrackKind: e,
            TextTrackKind: f,
            TextTrackMode: g,
          }) /* jshint ignore:end */,
            (b.exports = c["default"]);
        },
        {},
      ],
      136: [
        function (a, b, c) {
          /**
           * @file track-list.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../event-target"),
            i = e(h),
            j = a("../utils/fn.js"),
            k = (d(j), a("../utils/browser.js")),
            l = d(k),
            m = a("global/document"),
            n = e(m),
            o = (function (a) {
              function b() {
                var c =
                    arguments.length <= 0 || void 0 === arguments[0]
                      ? []
                      : arguments[0],
                  d =
                    arguments.length <= 1 || void 0 === arguments[1]
                      ? null
                      : arguments[1];
                if ((f(this, b), a.call(this), !d && ((d = this), l.IS_IE8))) {
                  d = n["default"].createElement("custom");
                  for (var e in b.prototype)
                    "constructor" !== e && (d[e] = b.prototype[e]);
                }
                (d.tracks_ = []),
                  Object.defineProperty(d, "length", {
                    get: function () {
                      return this.tracks_.length;
                    },
                  });
                for (var g = 0; g < c.length; g++) d.addTrack_(c[g]);
                return d;
              }
              /**
               * change - One or more tracks in the track list have been enabled or disabled.
               * addtrack - A track has been added to the track list.
               * removetrack - A track has been removed from the track list.
               */
              /**
               * Add a Track from TrackList
               *
               * @param {Mixed} track
               * @method addTrack_
               * @private
               */
              /**
               * Remove a Track from TrackList
               *
               * @param {Track} rtrack track to be removed
               * @method removeTrack_
               * @private
               */
              /**
               * Get a Track from the TrackList by a tracks id
               *
               * @param {String} id - the id of the track to get
               * @method getTrackById
               * @return {Track}
               * @private
               */
              return (
                g(b, a),
                (b.prototype.addTrack_ = function (a) {
                  var b = this.tracks_.length;
                  "" + b in this ||
                    Object.defineProperty(this, b, {
                      get: function () {
                        return this.tracks_[b];
                      },
                    }),
                    // Do not add duplicate tracks
                    this.tracks_.indexOf(a) === -1 &&
                      (this.tracks_.push(a),
                      this.trigger({ track: a, type: "addtrack" }));
                }),
                (b.prototype.removeTrack_ = function (a) {
                  for (var b = void 0, c = 0, d = this.length; c < d; c++)
                    if (this[c] === a) {
                      (b = this[c]),
                        b.off && b.off(),
                        this.tracks_.splice(c, 1);
                      break;
                    }
                  b && this.trigger({ track: b, type: "removetrack" });
                }),
                (b.prototype.getTrackById = function (a) {
                  for (var b = null, c = 0, d = this.length; c < d; c++) {
                    var e = this[c];
                    if (e.id === a) {
                      b = e;
                      break;
                    }
                  }
                  return b;
                }),
                b
              );
            })(i["default"]);
          o.prototype.allowedEvents_ = {
            change: "change",
            addtrack: "addtrack",
            removetrack: "removetrack",
          };
          // emulate attribute EventHandler support to allow for feature detection
          for (var p in o.prototype.allowedEvents_)
            o.prototype["on" + p] = null;
          (c["default"] = o), (b.exports = c["default"]);
        },
        {
          "../event-target": 104,
          "../utils/browser.js": 140,
          "../utils/fn.js": 144,
          "global/document": 1,
        },
      ],
      137: [
        function (a, b, c) {
          /**
           * @file track.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("../utils/browser.js"),
            i = e(h),
            j = a("global/document"),
            k = d(j),
            l = a("../utils/guid.js"),
            m = e(l),
            n = a("../event-target"),
            o = d(n),
            p = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? {}
                    : arguments[0];
                f(this, b), a.call(this);
                var d = this;
                if (i.IS_IE8) {
                  d = k["default"].createElement("custom");
                  for (var e in b.prototype)
                    "constructor" !== e && (d[e] = b.prototype[e]);
                }
                var g = {
                    id: c.id || "vjs_track_" + m.newGUID(),
                    kind: c.kind || "",
                    label: c.label || "",
                    language: c.language || "",
                  },
                  h = function (a) {
                    Object.defineProperty(d, a, {
                      get: function () {
                        return g[a];
                      },
                      set: function () {},
                    });
                  };
                for (var j in g) h(j);
                return d;
              }
              return g(b, a), b;
            })(o["default"]);
          (c["default"] = p), (b.exports = c["default"]);
        },
        {
          "../event-target": 104,
          "../utils/browser.js": 140,
          "../utils/guid.js": 146,
          "global/document": 1,
        },
      ],
      138: [
        function (a, b, c) {
          /**
           * @file video-track-list.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./track-list"),
            i = e(h),
            j = a("../utils/browser.js"),
            k = d(j),
            l = a("global/document"),
            m = e(l),
            n = function (a, b) {
              for (var c = 0; c < a.length; c++)
                b.id !== a[c].id &&
                  // another audio track is enabled, disable it
                  (a[c].selected = !1);
            },
            o = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? []
                    : arguments[0];
                f(this, b);
                // make sure only 1 track is enabled
                // sorted from last index to first index
                for (var d = void 0, e = c.length - 1; e >= 0; e--)
                  if (c[e].selected) {
                    n(c, c[e]);
                    break;
                  }
                // IE8 forces us to implement inheritance ourselves
                // as it does not support Object.defineProperty properly
                if (k.IS_IE8) {
                  d = m["default"].createElement("custom");
                  for (var g in i["default"].prototype)
                    "constructor" !== g && (d[g] = i["default"].prototype[g]);
                  for (var g in b.prototype)
                    "constructor" !== g && (d[g] = b.prototype[g]);
                }
                return (
                  (d = a.call(this, c, d)),
                  (d.changing_ = !1),
                  Object.defineProperty(d, "selectedIndex", {
                    get: function () {
                      for (var a = 0; a < this.length; a++)
                        if (this[a].selected) return a;
                      return -1;
                    },
                    set: function () {},
                  }),
                  d
                );
              }
              return (
                g(b, a),
                (b.prototype.addTrack_ = function (b) {
                  var c = this;
                  b.selected && n(this, b),
                    a.prototype.addTrack_.call(this, b),
                    // native tracks don't have this
                    b.addEventListener &&
                      b.addEventListener("selectedchange", function () {
                        c.changing_ ||
                          ((c.changing_ = !0),
                          n(c, b),
                          (c.changing_ = !1),
                          c.trigger("change"));
                      });
                }),
                (b.prototype.addTrack = function (a) {
                  this.addTrack_(a);
                }),
                (b.prototype.removeTrack = function (b) {
                  a.prototype.removeTrack_.call(this, b);
                }),
                b
              );
            })(i["default"]);
          (c["default"] = o), (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "./track-list": 136,
          "global/document": 1,
        },
      ],
      139: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            if (!(a instanceof b))
              throw new TypeError("Cannot call a class as a function");
          }
          function g(a, b) {
            if ("function" != typeof b && null !== b)
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof b
              );
            (a.prototype = Object.create(b && b.prototype, {
              constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              b &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(a, b)
                  : (a.__proto__ = b));
          }
          c.__esModule = !0;
          var h = a("./track-enums"),
            i = a("./track"),
            j = e(i),
            k = a("../utils/merge-options"),
            l = e(k),
            m = a("../utils/browser.js"),
            n = d(m),
            o = (function (a) {
              function b() {
                var c =
                  arguments.length <= 0 || void 0 === arguments[0]
                    ? {}
                    : arguments[0];
                f(this, b);
                var d = l["default"](c, {
                    kind: h.VideoTrackKind[c.kind] || "",
                  }),
                  e = a.call(this, d),
                  g = !1;
                if (n.IS_IE8)
                  for (var i in b.prototype)
                    "constructor" !== i && (e[i] = b.prototype[i]);
                // if the user sets this track to selected then
                // set selected to that true value otherwise
                // we keep it false
                return (
                  Object.defineProperty(e, "selected", {
                    get: function () {
                      return g;
                    },
                    set: function (a) {
                      // an invalid or unchanged value
                      "boolean" == typeof a &&
                        a !== g &&
                        ((g = a), this.trigger("selectedchange"));
                    },
                  }),
                  d.selected && (e.selected = d.selected),
                  e
                );
              }
              return g(b, a), b;
            })(j["default"]);
          (c["default"] = o), (b.exports = c["default"]);
        },
        {
          "../utils/browser.js": 140,
          "../utils/merge-options": 148,
          "./track": 137,
          "./track-enums": 135,
        },
      ],
      140: [
        function (a, b, c) {
          /**
           * @file browser.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          var e = a("global/document"),
            f = d(e),
            g = a("global/window"),
            h = d(g),
            i = h["default"].navigator.userAgent,
            j = /AppleWebKit\/([\d.]+)/i.exec(i),
            k = j ? parseFloat(j.pop()) : null,
            l = /iPad/i.test(i);
          c.IS_IPAD = l;
          // The Facebook app's UIWebView identifies as both an iPhone and iPad, so
          // to identify iPhones, we need to exclude iPads.
          // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/
          var m = /iPhone/i.test(i) && !l;
          c.IS_IPHONE = m;
          var n = /iPod/i.test(i);
          c.IS_IPOD = n;
          var o = m || l || n;
          c.IS_IOS = o;
          var p = (function () {
            var a = i.match(/OS (\d+)_/i);
            if (a && a[1]) return a[1];
          })();
          c.IOS_VERSION = p;
          var q = /Android/i.test(i);
          c.IS_ANDROID = q;
          var r = (function () {
            // This matches Android Major.Minor.Patch versions
            // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned
            var a,
              b,
              c = i.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
            return c
              ? ((a = c[1] && parseFloat(c[1])),
                (b = c[2] && parseFloat(c[2])),
                a && b ? parseFloat(c[1] + "." + c[2]) : a ? a : null)
              : null;
          })();
          c.ANDROID_VERSION = r;
          // Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser
          var s = q && /webkit/i.test(i) && r < 2.3;
          c.IS_OLD_ANDROID = s;
          var t = q && r < 5 && k < 537;
          c.IS_NATIVE_ANDROID = t;
          var u = /Firefox/i.test(i);
          c.IS_FIREFOX = u;
          var v = /Edge/i.test(i);
          c.IS_EDGE = v;
          var w = !v && /Chrome/i.test(i);
          c.IS_CHROME = w;
          var x = /MSIE\s8\.0/.test(i);
          c.IS_IE8 = x;
          var y = (function (a) {
            return a && parseFloat(a[1]);
          })(/MSIE\s(\d+)\.\d/.exec(i));
          c.IE_VERSION = y;
          var z = !!(
            "ontouchstart" in h["default"] ||
            (h["default"].DocumentTouch &&
              f["default"] instanceof h["default"].DocumentTouch)
          );
          c.TOUCH_ENABLED = z;
          var A = "backgroundSize" in f["default"].createElement("video").style;
          c.BACKGROUND_SIZE_SUPPORTED = A;
        },
        { "global/document": 1, "global/window": 2 },
      ],
      141: [
        function (a, b, c) {
          /**
           * @file buffer.js
           */
          "use strict";
          /**
           * Compute how much your video has been buffered
           *
           * @param  {Object} Buffered object
           * @param  {Number} Total duration
           * @return {Number} Percent buffered of the total duration
           * @private
           * @function bufferedPercent
           */
          function d(a, b) {
            var c,
              d,
              f = 0;
            if (!b) return 0;
            (a && a.length) || (a = e.createTimeRange(0, 0));
            for (var g = 0; g < a.length; g++)
              (c = a.start(g)),
                (d = a.end(g)),
                // buffered end can be bigger than duration by a very small fraction
                d > b && (d = b),
                (f += d - c);
            return f / b;
          }
          (c.__esModule = !0), (c.bufferedPercent = d);
          var e = a("./time-ranges.js");
        },
        { "./time-ranges.js": 150 },
      ],
      142: [
        function (a, b, c) {
          /**
           * @file dom.js
           */
          "use strict";
          function d(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function e(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function f(a, b) {
            return (a.raw = b), a;
          }
          /**
           * Detect if a value is a string with any non-whitespace characters.
           *
           * @param  {String} str
           * @return {Boolean}
           */
          function g(a) {
            return "string" == typeof a && /\S/.test(a);
          }
          /**
           * Throws an error if the passed string has whitespace. This is used by
           * class methods to be relatively consistent with the classList API.
           *
           * @param  {String} str
           * @return {Boolean}
           */
          function h(a) {
            if (/\s/.test(a))
              throw new Error("class has illegal whitespace characters");
          }
          /**
           * Produce a regular expression for matching a class name.
           *
           * @param  {String} className
           * @return {RegExp}
           */
          function i(a) {
            return new RegExp("(^|\\s)" + a + "($|\\s)");
          }
          /**
           * Creates functions to query the DOM using a given method.
           *
           * @function createQuerier
           * @private
           * @param  {String} method
           * @return {Function}
           */
          function j(a) {
            return function (b, c) {
              return g(b)
                ? (g(c) && (c = J["default"].querySelector(c)),
                  (B(c) ? c : J["default"])[a](b))
                : J["default"][a](null);
            };
          }
          /**
           * Shorthand for document.getElementById()
           * Also allows for CSS (jQuery) ID syntax. But nothing other than IDs.
           *
           * @param  {String} id  Element ID
           * @return {Element}    Element with supplied ID
           * @function getEl
           */
          function k(a) {
            return (
              0 === a.indexOf("#") && (a = a.slice(1)),
              J["default"].getElementById(a)
            );
          }
          /**
           * Creates an element and applies properties.
           *
           * @param  {String} [tagName='div'] Name of tag to be created.
           * @param  {Object} [properties={}] Element properties to be applied.
           * @param  {Object} [attributes={}] Element attributes to be applied.
           * @return {Element}
           * @function createEl
           */
          function l() {
            var a =
                arguments.length <= 0 || void 0 === arguments[0]
                  ? "div"
                  : arguments[0],
              b =
                arguments.length <= 1 || void 0 === arguments[1]
                  ? {}
                  : arguments[1],
              c =
                arguments.length <= 2 || void 0 === arguments[2]
                  ? {}
                  : arguments[2],
              d = J["default"].createElement(a);
            return (
              Object.getOwnPropertyNames(b).forEach(function (a) {
                var c = b[a];
                // See #2176
                // We originally were accepting both properties and attributes in the
                // same object, but that doesn't work so well.
                a.indexOf("aria-") !== -1 || "role" === a || "type" === a
                  ? (P["default"].warn(R["default"](H, a, c)),
                    d.setAttribute(a, c))
                  : (d[a] = c);
              }),
              Object.getOwnPropertyNames(c).forEach(function (a) {
                c[a];
                d.setAttribute(a, c[a]);
              }),
              d
            );
          }
          /**
           * Injects text into an element, replacing any existing contents entirely.
           *
           * @param  {Element} el
           * @param  {String} text
           * @return {Element}
           * @function textContent
           */
          function m(a, b) {
            "undefined" == typeof a.textContent
              ? (a.innerText = b)
              : (a.textContent = b);
          }
          /**
           * Insert an element as the first child node of another
           *
           * @param  {Element} child   Element to insert
           * @param  {Element} parent Element to insert child into
           * @private
           * @function insertElFirst
           */
          function n(a, b) {
            b.firstChild ? b.insertBefore(a, b.firstChild) : b.appendChild(a);
          }
          /**
           * Returns the cache object where data for an element is stored
           *
           * @param  {Element} el Element to store data for.
           * @return {Object}
           * @function getElData
           */
          function o(a) {
            var b = a[T];
            return b || (b = a[T] = N.newGUID()), S[b] || (S[b] = {}), S[b];
          }
          /**
           * Returns whether or not an element has cached data
           *
           * @param  {Element} el A dom element
           * @return {Boolean}
           * @private
           * @function hasElData
           */
          function p(a) {
            var b = a[T];
            return !!b && !!Object.getOwnPropertyNames(S[b]).length;
          }
          /**
           * Delete data for the element from the cache and the guid attr from getElementById
           *
           * @param  {Element} el Remove data for an element
           * @private
           * @function removeElData
           */
          function q(a) {
            var b = a[T];
            if (b) {
              // Remove all stored data
              delete S[b];
              // Remove the elIdAttr property from the DOM node
              try {
                delete a[T];
              } catch (c) {
                a.removeAttribute
                  ? a.removeAttribute(T)
                  : // IE doesn't appear to support removeAttribute on the document element
                    (a[T] = null);
              }
            }
          }
          /**
           * Check if an element has a CSS class
           *
           * @function hasElClass
           * @param {Element} element Element to check
           * @param {String} classToCheck Classname to check
           */
          function r(a, b) {
            return (
              h(b),
              a.classList ? a.classList.contains(b) : i(b).test(a.className)
            );
          }
          /**
           * Add a CSS class name to an element
           *
           * @function addElClass
           * @param {Element} element    Element to add class name to
           * @param {String} classToAdd Classname to add
           */
          function s(a, b) {
            return (
              a.classList
                ? a.classList.add(b)
                : r(a, b) || (a.className = (a.className + " " + b).trim()),
              a
            );
          }
          /**
           * Remove a CSS class name from an element
           *
           * @function removeElClass
           * @param {Element} element    Element to remove from class name
           * @param {String} classToRemove Classname to remove
           */
          function t(a, b) {
            return (
              a.classList
                ? a.classList.remove(b)
                : (h(b),
                  (a.className = a.className
                    .split(/\s+/)
                    .filter(function (a) {
                      return a !== b;
                    })
                    .join(" "))),
              a
            );
          }
          /**
           * Adds or removes a CSS class name on an element depending on an optional
           * condition or the presence/absence of the class name.
           *
           * @function toggleElClass
           * @param    {Element} element
           * @param    {String} classToToggle
           * @param    {Boolean|Function} [predicate]
           *           Can be a function that returns a Boolean. If `true`, the class
           *           will be added; if `false`, the class will be removed. If not
           *           given, the class will be added if not present and vice versa.
           */
          function u(a, b, c) {
            // This CANNOT use `classList` internally because IE does not support the
            // second parameter to the `classList.toggle()` method! Which is fine because
            // `classList` will be used by the add/remove functions.
            var d = r(a, b);
            // If the necessary class operation matches the current state of the
            // element, no action is required.
            if (
              ("function" == typeof c && (c = c(a, b)),
              "boolean" != typeof c && (c = !d),
              c !== d)
            )
              return c ? s(a, b) : t(a, b), a;
          }
          /**
           * Apply attributes to an HTML element.
           *
           * @param  {Element} el         Target element.
           * @param  {Object=} attributes Element attributes to be applied.
           * @private
           * @function setElAttributes
           */
          function v(a, b) {
            Object.getOwnPropertyNames(b).forEach(function (c) {
              var d = b[c];
              null === d || "undefined" == typeof d || d === !1
                ? a.removeAttribute(c)
                : a.setAttribute(c, d === !0 ? "" : d);
            });
          }
          /**
           * Get an element's attribute values, as defined on the HTML tag
           * Attributes are not the same as properties. They're defined on the tag
           * or with setAttribute (which shouldn't be used with HTML)
           * This will return true or false for boolean attributes.
           *
           * @param  {Element} tag Element from which to get tag attributes
           * @return {Object}
           * @private
           * @function getElAttributes
           */
          function w(a) {
            var b, c, d, e, f;
            if (
              ((b = {}),
              // known boolean attributes
              // we can check for matching boolean properties, but older browsers
              // won't know about HTML5 boolean attributes that we still read from
              (c = ",autoplay,controls,loop,muted,default,"),
              a && a.attributes && a.attributes.length > 0)
            ) {
              d = a.attributes;
              for (var g = d.length - 1; g >= 0; g--)
                (e = d[g].name),
                  (f = d[g].value),
                  // check for known booleans
                  // the matching element property will return a value for typeof
                  ("boolean" != typeof a[e] &&
                    c.indexOf("," + e + ",") === -1) ||
                    // the value of an included boolean attribute is typically an empty
                    // string ('') which would equal false if we just check for a false value.
                    // we also don't want support bad code like autoplay='false'
                    (f = null !== f),
                  (b[e] = f);
            }
            return b;
          }
          /**
           * Attempt to block the ability to select text while dragging controls
           *
           * @return {Boolean}
           * @function blockTextSelection
           */
          function x() {
            J["default"].body.focus(),
              (J["default"].onselectstart = function () {
                return !1;
              });
          }
          /**
           * Turn off text selection blocking
           *
           * @return {Boolean}
           * @function unblockTextSelection
           */
          function y() {
            J["default"].onselectstart = function () {
              return !0;
            };
          }
          /**
           * Offset Left
           * getBoundingClientRect technique from
           * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/
           *
           * @function findElPosition
           * @param {Element} el Element from which to get offset
           * @return {Object}
           */
          function z(a) {
            var b = void 0;
            if (
              (a.getBoundingClientRect &&
                a.parentNode &&
                (b = a.getBoundingClientRect()),
              !b)
            )
              return { left: 0, top: 0 };
            var c = J["default"].documentElement,
              d = J["default"].body,
              e = c.clientLeft || d.clientLeft || 0,
              f = L["default"].pageXOffset || d.scrollLeft,
              g = b.left + f - e,
              h = c.clientTop || d.clientTop || 0,
              i = L["default"].pageYOffset || d.scrollTop,
              j = b.top + i - h;
            // Android sometimes returns slightly off decimal values, so need to round
            return { left: Math.round(g), top: Math.round(j) };
          }
          /**
           * Get pointer position in element
           * Returns an object with x and y coordinates.
           * The base on the coordinates are the bottom left of the element.
           *
           * @function getPointerPosition
           * @param {Element} el Element on which to get the pointer position on
           * @param {Event} event Event object
           * @return {Object} This object will have x and y coordinates corresponding to the mouse position
           */
          function A(a, b) {
            var c = {},
              d = z(a),
              e = a.offsetWidth,
              f = a.offsetHeight,
              g = d.top,
              h = d.left,
              i = b.pageY,
              j = b.pageX;
            return (
              b.changedTouches &&
                ((j = b.changedTouches[0].pageX),
                (i = b.changedTouches[0].pageY)),
              (c.y = Math.max(0, Math.min(1, (g - i + f) / f))),
              (c.x = Math.max(0, Math.min(1, (j - h) / e))),
              c
            );
          }
          /**
           * Determines, via duck typing, whether or not a value is a DOM element.
           *
           * @function isEl
           * @param    {Mixed} value
           * @return   {Boolean}
           */
          function B(a) {
            return !!a && "object" == typeof a && 1 === a.nodeType;
          }
          /**
           * Determines, via duck typing, whether or not a value is a text node.
           *
           * @param  {Mixed} value
           * @return {Boolean}
           */
          function C(a) {
            return !!a && "object" == typeof a && 3 === a.nodeType;
          }
          /**
           * Empties the contents of an element.
           *
           * @function emptyEl
           * @param    {Element} el
           * @return   {Element}
           */
          function D(a) {
            for (; a.firstChild; ) a.removeChild(a.firstChild);
            return a;
          }
          /**
           * Normalizes content for eventual insertion into the DOM.
           *
           * This allows a wide range of content definition methods, but protects
           * from falling into the trap of simply writing to `innerHTML`, which is
           * an XSS concern.
           *
           * The content for an element can be passed in multiple types and
           * combinations, whose behavior is as follows:
           *
           * - String
           *   Normalized into a text node.
           *
           * - Element, TextNode
           *   Passed through.
           *
           * - Array
           *   A one-dimensional array of strings, elements, nodes, or functions (which
           *   return single strings, elements, or nodes).
           *
           * - Function
           *   If the sole argument, is expected to produce a string, element,
           *   node, or array.
           *
           * @function normalizeContent
           * @param    {String|Element|TextNode|Array|Function} content
           * @return   {Array}
           */
          function E(a) {
            // Next up, normalize to an array, so one or many items can be normalized,
            // filtered, and returned.
            // First, invoke content if it is a function. If it produces an array,
            // that needs to happen before normalization.
            return (
              "function" == typeof a && (a = a()),
              (Array.isArray(a) ? a : [a])
                .map(function (a) {
                  // First, invoke value if it is a function to produce a new value,
                  // which will be subsequently normalized to a Node of some kind.
                  return (
                    "function" == typeof a && (a = a()),
                    B(a) || C(a)
                      ? a
                      : "string" == typeof a && /\S/.test(a)
                      ? J["default"].createTextNode(a)
                      : void 0
                  );
                })
                .filter(function (a) {
                  return a;
                })
            );
          }
          /**
           * Normalizes and appends content to an element.
           *
           * @function appendContent
           * @param    {Element} el
           * @param    {String|Element|TextNode|Array|Function} content
           *           See: `normalizeContent`
           * @return   {Element}
           */
          function F(a, b) {
            return (
              E(b).forEach(function (b) {
                return a.appendChild(b);
              }),
              a
            );
          }
          /**
           * Normalizes and inserts content into an element; this is identical to
           * `appendContent()`, except it empties the element first.
           *
           * @function insertContent
           * @param    {Element} el
           * @param    {String|Element|TextNode|Array|Function} content
           *           See: `normalizeContent`
           * @return   {Element}
           */
          function G(a, b) {
            return F(D(a), b);
          }
          (c.__esModule = !0),
            (c.getEl = k),
            (c.createEl = l),
            (c.textContent = m),
            (c.insertElFirst = n),
            (c.getElData = o),
            (c.hasElData = p),
            (c.removeElData = q),
            (c.hasElClass = r),
            (c.addElClass = s),
            (c.removeElClass = t),
            (c.toggleElClass = u),
            (c.setElAttributes = v),
            (c.getElAttributes = w),
            (c.blockTextSelection = x),
            (c.unblockTextSelection = y),
            (c.findElPosition = z),
            (c.getPointerPosition = A),
            (c.isEl = B),
            (c.isTextNode = C),
            (c.emptyEl = D),
            (c.normalizeContent = E),
            (c.appendContent = F),
            (c.insertContent = G);
          var H = f(
              [
                "Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ",
                " to ",
                ".",
              ],
              [
                "Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ",
                " to ",
                ".",
              ]
            ),
            I = a("global/document"),
            J = e(I),
            K = a("global/window"),
            L = e(K),
            M = a("./guid.js"),
            N = d(M),
            O = a("./log.js"),
            P = e(O),
            Q = a("tsml"),
            R = e(Q),
            S = {},
            T = "vdata" + new Date().getTime(),
            U = j("querySelector");
          c.$ = U;
          /**
           * Finds a all DOM elements matching `selector` within the optional
           * `context` of another DOM element (defaulting to `document`).
           *
           * @function $$
           * @param    {String} selector
           *           A valid CSS selector, which will be passed to `querySelectorAll`.
           *
           * @param    {Element|String} [context=document]
           *           A DOM element within which to query. Can also be a selector
           *           string in which case the first matching element will be used
           *           as context. If missing (or no element matches selector), falls
           *           back to `document`.
           *
           * @return   {NodeList}
           */
          var V = j("querySelectorAll");
          c.$$ = V;
        },
        {
          "./guid.js": 146,
          "./log.js": 147,
          "global/document": 1,
          "global/window": 2,
          tsml: 55,
        },
      ],
      143: [
        function (a, b, c) {
          /**
           * @file events.js
           *
           * Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)
           * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)
           * This should work very similarly to jQuery's events, however it's based off the book version which isn't as
           * robust as jquery's, so there's probably some differences.
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          /**
           * Add an event listener to element
           * It stores the handler function in a separate cache object
           * and adds a generic handler to the element's event,
           * along with a unique id (guid) to the element.
           *
           * @param  {Element|Object}   elem Element or object to bind listeners to
           * @param  {String|Array}   type Type of event to bind to.
           * @param  {Function} fn   Event listener.
           * @method on
           */
          function f(a, b, c) {
            if (Array.isArray(b)) return l(f, a, b, c);
            var d = n.getElData(a);
            // We need a place to store all our handler data
            d.handlers || (d.handlers = {}),
              d.handlers[b] || (d.handlers[b] = []),
              c.guid || (c.guid = p.newGUID()),
              d.handlers[b].push(c),
              d.dispatcher ||
                ((d.disabled = !1),
                (d.dispatcher = function (b, c) {
                  if (!d.disabled) {
                    b = j(b);
                    var e = d.handlers[b.type];
                    if (e)
                      for (
                        var f = e.slice(0), g = 0, h = f.length;
                        g < h && !b.isImmediatePropagationStopped();
                        g++
                      )
                        try {
                          f[g].call(a, b, c);
                        } catch (i) {
                          r["default"].error(i);
                        }
                  }
                })),
              1 === d.handlers[b].length &&
                (a.addEventListener
                  ? a.addEventListener(b, d.dispatcher, !1)
                  : a.attachEvent && a.attachEvent("on" + b, d.dispatcher));
          }
          /**
           * Removes event listeners from an element
           *
           * @param  {Element|Object}   elem Object to remove listeners from
           * @param  {String|Array=}   type Type of listener to remove. Don't include to remove all events from element.
           * @param  {Function} fn   Specific listener to remove. Don't include to remove listeners for an event type.
           * @method off
           */
          function g(a, b, c) {
            // Don't want to add a cache object through getElData if not needed
            if (n.hasElData(a)) {
              var d = n.getElData(a);
              // If no events exist, nothing to unbind
              if (d.handlers) {
                if (Array.isArray(b)) return l(g, a, b, c);
                // Utility function
                var e = function (b) {
                  (d.handlers[b] = []), k(a, b);
                };
                // Are we removing all bound events?
                if (b) {
                  var f = d.handlers[b];
                  // If no handlers exist, nothing to unbind
                  if (f) {
                    // If no listener was provided, remove all listeners for type
                    if (!c) return void e(b);
                    // We're only removing a single handler
                    if (c.guid)
                      for (var h = 0; h < f.length; h++)
                        f[h].guid === c.guid && f.splice(h--, 1);
                    k(a, b);
                  }
                } else for (var i in d.handlers) e(i);
              }
            }
          }
          /**
           * Trigger an event for an element
           *
           * @param  {Element|Object}      elem  Element to trigger an event on
           * @param  {Event|Object|String} event A string (the type) or an event object with a type attribute
           * @param  {Object} [hash] data hash to pass along with the event
           * @return {Boolean=} Returned only if default was prevented
           * @method trigger
           */
          function h(a, b, c) {
            // Fetches element data and a reference to the parent (for bubbling).
            // Don't want to add a data object to cache for every parent,
            // so checking hasElData first.
            var d = n.hasElData(a) ? n.getElData(a) : {},
              e = a.parentNode || a.ownerDocument;
            // Unless explicitly stopped or the event does not bubble (e.g. media events)
            // recursively calls this function to bubble the event up the DOM.
            if (
              // type = event.type || event,
              // handler;
              // If an event name was passed as a string, creates an event out of it
              ("string" == typeof b && (b = { type: b, target: a }),
              // Normalizes the event properties.
              (b = j(b)),
              // If the passed element has a dispatcher, executes the established handlers.
              d.dispatcher && d.dispatcher.call(a, b, c),
              e && !b.isPropagationStopped() && b.bubbles === !0)
            )
              h.call(null, e, b, c);
            else if (!e && !b.defaultPrevented) {
              var f = n.getElData(b.target);
              // Checks if the target has a default action for this event.
              b.target[b.type] &&
                // Temporarily disables event dispatching on the target as we have already executed the handler.
                ((f.disabled = !0),
                // Executes the default action.
                "function" == typeof b.target[b.type] && b.target[b.type](),
                // Re-enables event dispatching.
                (f.disabled = !1));
            }
            // Inform the triggerer if the default was prevented by returning false
            return !b.defaultPrevented;
          }
          /**
           * Trigger a listener only once for an event
           *
           * @param  {Element|Object}   elem Element or object to
           * @param  {String|Array}   type Name/type of event
           * @param  {Function} fn Event handler function
           * @method one
           */
          function i(a, b, c) {
            if (Array.isArray(b)) return l(i, a, b, c);
            var d = function e() {
              g(a, b, e), c.apply(this, arguments);
            };
            // copy the guid to the new function so it can removed using the original function's ID
            (d.guid = c.guid = c.guid || p.newGUID()), f(a, b, d);
          }
          /**
           * Fix a native event to have standard property values
           *
           * @param  {Object} event Event object to fix
           * @return {Object}
           * @private
           * @method fixEvent
           */
          function j(a) {
            function b() {
              return !0;
            }
            function c() {
              return !1;
            }
            // Test if fixing up is needed
            // Used to check if !event.stopPropagation instead of isPropagationStopped
            // But native events return true for stopPropagation, but don't have
            // other expected methods like isPropagationStopped. Seems to be a problem
            // with the Javascript Ninja code. So we're just overriding all events now.
            if (!a || !a.isPropagationStopped) {
              var d = a || t["default"].event;
              a = {};
              // Clone the old object so that we can modify the values event = {};
              // IE8 Doesn't like when you mess with native event properties
              // Firefox returns false for event.hasOwnProperty('type') and other props
              //  which makes copying more difficult.
              // TODO: Probably best to create a whitelist of event props
              // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y
              // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation
              // and webkitMovementX/Y
              for (var e in d)
                "layerX" !== e &&
                  "layerY" !== e &&
                  "keyLocation" !== e &&
                  "webkitMovementX" !== e &&
                  "webkitMovementY" !== e &&
                  // Chrome 32+ warns if you try to copy deprecated returnValue, but
                  // we still want to if preventDefault isn't supported (IE8).
                  (("returnValue" === e && d.preventDefault) || (a[e] = d[e]));
              // Handle mouse position
              if (
                // The event occurred on this element
                (a.target || (a.target = a.srcElement || v["default"]),
                // Handle which other element the event is related to
                a.relatedTarget ||
                  (a.relatedTarget =
                    a.fromElement === a.target ? a.toElement : a.fromElement),
                // Stop the default browser action
                (a.preventDefault = function () {
                  d.preventDefault && d.preventDefault(),
                    (a.returnValue = !1),
                    (d.returnValue = !1),
                    (a.defaultPrevented = !0);
                }),
                (a.defaultPrevented = !1),
                // Stop the event from bubbling
                (a.stopPropagation = function () {
                  d.stopPropagation && d.stopPropagation(),
                    (a.cancelBubble = !0),
                    (d.cancelBubble = !0),
                    (a.isPropagationStopped = b);
                }),
                (a.isPropagationStopped = c),
                // Stop the event from bubbling and executing other handlers
                (a.stopImmediatePropagation = function () {
                  d.stopImmediatePropagation && d.stopImmediatePropagation(),
                    (a.isImmediatePropagationStopped = b),
                    a.stopPropagation();
                }),
                (a.isImmediatePropagationStopped = c),
                null != a.clientX)
              ) {
                var f = v["default"].documentElement,
                  g = v["default"].body;
                (a.pageX =
                  a.clientX +
                  ((f && f.scrollLeft) || (g && g.scrollLeft) || 0) -
                  ((f && f.clientLeft) || (g && g.clientLeft) || 0)),
                  (a.pageY =
                    a.clientY +
                    ((f && f.scrollTop) || (g && g.scrollTop) || 0) -
                    ((f && f.clientTop) || (g && g.clientTop) || 0));
              }
              // Handle key presses
              (a.which = a.charCode || a.keyCode),
                // Fix button for mouse clicks:
                // 0 == left; 1 == middle; 2 == right
                null != a.button &&
                  (a.button =
                    1 & a.button ? 0 : 4 & a.button ? 1 : 2 & a.button ? 2 : 0);
            }
            // Returns fixed-up instance
            return a;
          }
          /**
           * Clean up the listener cache and dispatchers
           *
           * @param  {Element|Object} elem Element to clean up
           * @param  {String} type Type of event to clean up
           * @private
           * @method _cleanUpEvents
           */
          function k(a, b) {
            var c = n.getElData(a);
            // Remove the events of a particular type if there are none left
            0 === c.handlers[b].length &&
              (delete c.handlers[b],
              // data.handlers[type] = null;
              // Setting to null was causing an error with data.handlers
              // Remove the meta-handler from the element
              a.removeEventListener
                ? a.removeEventListener(b, c.dispatcher, !1)
                : a.detachEvent && a.detachEvent("on" + b, c.dispatcher)),
              // Remove the events object if there are no types left
              Object.getOwnPropertyNames(c.handlers).length <= 0 &&
                (delete c.handlers, delete c.dispatcher, delete c.disabled),
              // Finally remove the element data if there is no data left
              0 === Object.getOwnPropertyNames(c).length && n.removeElData(a);
          }
          /**
           * Loops through an array of event types and calls the requested method for each type.
           *
           * @param  {Function} fn   The event method we want to use.
           * @param  {Element|Object} elem Element or object to bind listeners to
           * @param  {String}   type Type of event to bind to.
           * @param  {Function} callback   Event listener.
           * @private
           * @function _handleMultipleEvents
           */
          function l(a, b, c, d) {
            c.forEach(function (c) {
              //Call the event method for each one of the types
              a(b, c, d);
            });
          }
          (c.__esModule = !0),
            (c.on = f),
            (c.off = g),
            (c.trigger = h),
            (c.one = i),
            (c.fixEvent = j);
          var m = a("./dom.js"),
            n = e(m),
            o = a("./guid.js"),
            p = e(o),
            q = a("./log.js"),
            r = d(q),
            s = a("global/window"),
            t = d(s),
            u = a("global/document"),
            v = d(u);
        },
        {
          "./dom.js": 142,
          "./guid.js": 146,
          "./log.js": 147,
          "global/document": 1,
          "global/window": 2,
        },
      ],
      144: [
        function (a, b, c) {
          /**
           * @file fn.js
           */
          "use strict";
          c.__esModule = !0;
          var d = a("./guid.js"),
            e = function (a, b, c) {
              // Make sure the function has a unique ID
              b.guid || (b.guid = d.newGUID());
              // Create the new function that changes the context
              var e = function () {
                return b.apply(a, arguments);
              };
              // Allow for the ability to individualize this function
              // Needed in the case where multiple objects might share the same prototype
              // IF both items add an event listener with the same function, then you try to remove just one
              // it will remove both because they both have the same guid.
              // when using this, you need to use the bind method when you remove the listener as well.
              // currently used in text tracks
              return (e.guid = c ? c + "_" + b.guid : b.guid), e;
            };
          c.bind = e;
        },
        { "./guid.js": 146 },
      ],
      145: [
        function (a, b, c) {
          /**
           * @file format-time.js
           *
           * Format seconds as a time string, H:MM:SS or M:SS
           * Supplying a guide (in seconds) will force a number of leading zeros
           * to cover the length of the guide
           *
           * @param  {Number} seconds Number of seconds to be turned into a string
           * @param  {Number} guide   Number (in seconds) to model the string after
           * @return {String}         Time formatted as H:MM:SS or M:SS
           * @private
           * @function formatTime
           */
          "use strict";
          function d(a) {
            var b =
              arguments.length <= 1 || void 0 === arguments[1]
                ? a
                : arguments[1];
            return (function () {
              a = a < 0 ? 0 : a;
              var c = Math.floor(a % 60),
                d = Math.floor((a / 60) % 60),
                e = Math.floor(a / 3600),
                f = Math.floor((b / 60) % 60),
                g = Math.floor(b / 3600);
              // handle invalid times
              // '-' is false for all relational operators (e.g. <, >=) so this setting
              // will add the minimum number of fields specified by the guide
              // Check if we need to show hours
              // If hours are showing, we may need to add a leading zero.
              // Always show at least one digit of minutes.
              // Check if leading zero is need for seconds
              return (
                (isNaN(a) || a === 1 / 0) && (e = d = c = "-"),
                (e = e > 0 || g > 0 ? e + ":" : ""),
                (d = ((e || f >= 10) && d < 10 ? "0" + d : d) + ":"),
                (c = c < 10 ? "0" + c : c),
                e + d + c
              );
            })();
          }
          (c.__esModule = !0), (c["default"] = d), (b.exports = c["default"]);
        },
        {},
      ],
      146: [
        function (a, b, c) {
          /**
           * @file guid.js
           *
           * Unique ID for an element or function
           * @type {Number}
           * @private
           */
          "use strict";
          /**
           * Get the next unique ID
           *
           * @return {String}
           * @function newGUID
           */
          function d() {
            return e++;
          }
          (c.__esModule = !0), (c.newGUID = d);
          var e = 1;
        },
        {},
      ],
      147: [
        function (a, b, c) {
          /**
           * @file log.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          /**
           * Log plain debug messages
           *
           * @function log
           */
          function e() {
            for (var a = arguments.length, b = Array(a), c = 0; c < a; c++)
              b[c] = arguments[c];
            i("log", b);
          }
          c.__esModule = !0;
          var f = a("global/window"),
            g = d(f),
            h = a("./browser"),
            i = function (a, b) {
              var c =
                  arguments.length <= 2 || void 0 === arguments[2]
                    ? !!h.IE_VERSION && h.IE_VERSION < 11
                    : arguments[2],
                d = g["default"].console,
                f = (d && d[a]) || function () {};
              "log" !== a &&
                // add the type to the front of the message when it's not "log"
                b.unshift(a.toUpperCase() + ":"),
                // add to history
                e.history.push(b),
                // add console prefix after adding to history
                b.unshift("VIDEOJS:"),
                // IEs previous to 11 log objects uselessly as "[object Object]"; so, JSONify
                // objects and arrays for those less-capable browsers.
                c &&
                  (b = b
                    .map(function (a) {
                      if ((a && "object" == typeof a) || Array.isArray(a))
                        try {
                          return JSON.stringify(a);
                        } catch (b) {}
                      // Cast to string before joining, so we get null and undefined explicitly
                      // included in output (as we would in a modern console).
                      return String(a);
                    })
                    .join(" ")),
                // Old IE versions do not allow .apply() for console methods (they are
                // reported as objects rather than functions).
                f.apply ? f[Array.isArray(b) ? "apply" : "call"](d, b) : f(b);
            };
          (c.logByType = i),
            /**
             * Keep a history of log messages
             *
             * @type {Array}
             */
            (e.history = []),
            /**
             * Log error messages
             *
             * @method error
             */ (e.error = function () {
              for (var a = arguments.length, b = Array(a), c = 0; c < a; c++)
                b[c] = arguments[c];
              return i("error", b);
            }),
            /**
             * Log warning messages
             *
             * @method warn
             */ (e.warn = function () {
              for (var a = arguments.length, b = Array(a), c = 0; c < a; c++)
                b[c] = arguments[c];
              return i("warn", b);
            }),
            (c["default"] = e);
        },
        { "./browser": 140, "global/window": 2 },
      ],
      148: [
        function (a, b, c) {
          /**
           * @file merge-options.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          function e(a) {
            return (
              !!a &&
              "object" == typeof a &&
              "[object Object]" === a.toString() &&
              a.constructor === Object
            );
          }
          /**
           * Merge one or more options objects, recursively merging **only**
           * plain object properties.  Previously `deepMerge`.
           *
           * @param  {...Object} source One or more objects to merge
           * @returns {Object}          a new object that is the union of all
           * provided objects
           * @function mergeOptions
           */
          function f() {
            // contruct the call dynamically to handle the variable number of
            // objects to merge
            var a = Array.prototype.slice.call(arguments);
            // return the mutated result object
            // unshift an empty object into the front of the call as the target
            // of the merge
            // customize conflict resolution to match our historical merge behavior
            return a.unshift({}), a.push(i), h["default"].apply(null, a), a[0];
          }
          (c.__esModule = !0), (c["default"] = f);
          var g = a("lodash-compat/object/merge"),
            h = d(g),
            i = function (a, b) {
              // If we're not working with a plain object, copy the value as is
              // If source is an array, for instance, it will replace destination
              // If we're not working with a plain object, copy the value as is
              // If source is an array, for instance, it will replace destination
              // If the new value is a plain object but the first object value is not
              // we need to create a new object for the first object to merge with.
              // This makes it consistent with how merge() works by default
              // and also protects from later changes the to first object affecting
              // the second object's values.
              return e(b) ? (e(a) ? void 0 : f(b)) : b;
            };
          b.exports = c["default"];
        },
        { "lodash-compat/object/merge": 40 },
      ],
      149: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          var e = a("global/document"),
            f = d(e),
            g = function (a) {
              var b = f["default"].createElement("style");
              return (b.className = a), b;
            };
          c.createStyleElement = g;
          var h = function (a, b) {
            a.styleSheet ? (a.styleSheet.cssText = b) : (a.textContent = b);
          };
          c.setTextContent = h;
        },
        { "global/document": 1 },
      ],
      150: [
        function (a, b, c) {
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          /**
           * @file time-ranges.js
           *
           * Should create a fake TimeRange object
           * Mimics an HTML5 time range instance, which has functions that
           * return the start and end times for a range
           * TimeRanges are returned by the buffered() method
           *
           * @param  {(Number|Array)} Start of a single range or an array of ranges
           * @param  {Number} End of a single range
           * @private
           * @method createTimeRanges
           */
          function e(a, b) {
            return Array.isArray(a)
              ? f(a)
              : void 0 === a || void 0 === b
              ? f()
              : f([[a, b]]);
          }
          function f(a) {
            return void 0 === a || 0 === a.length
              ? {
                  length: 0,
                  start: function () {
                    throw new Error("This TimeRanges object is empty");
                  },
                  end: function () {
                    throw new Error("This TimeRanges object is empty");
                  },
                }
              : {
                  length: a.length,
                  start: g.bind(null, "start", 0, a),
                  end: g.bind(null, "end", 1, a),
                };
          }
          function g(a, b, c, d) {
            return (
              void 0 === d &&
                (j["default"].warn(
                  "DEPRECATED: Function '" +
                    a +
                    "' on 'TimeRanges' called without an index argument."
                ),
                (d = 0)),
              h(a, d, c.length - 1),
              c[d][b]
            );
          }
          function h(a, b, c) {
            if (b < 0 || b > c)
              throw new Error(
                "Failed to execute '" +
                  a +
                  "' on 'TimeRanges': The index provided (" +
                  b +
                  ") is greater than or equal to the maximum bound (" +
                  c +
                  ")."
              );
          }
          (c.__esModule = !0), (c.createTimeRanges = e);
          var i = a("./log.js"),
            j = d(i);
          c.createTimeRange = e;
        },
        { "./log.js": 147 },
      ],
      151: [
        function (a, b, c) {
          /**
           * @file to-title-case.js
           *
           * Uppercase the first letter of a string
           *
           * @param  {String} string String to be uppercased
           * @return {String}
           * @private
           * @method toTitleCase
           */
          "use strict";
          function d(a) {
            return a.charAt(0).toUpperCase() + a.slice(1);
          }
          (c.__esModule = !0), (c["default"] = d), (b.exports = c["default"]);
        },
        {},
      ],
      152: [
        function (a, b, c) {
          /**
           * @file url.js
           */
          "use strict";
          function d(a) {
            return a && a.__esModule ? a : { default: a };
          }
          c.__esModule = !0;
          var e = a("global/document"),
            f = d(e),
            g = a("global/window"),
            h = d(g),
            i = function (a) {
              var b = [
                  "protocol",
                  "hostname",
                  "port",
                  "pathname",
                  "search",
                  "hash",
                  "host",
                ],
                c = f["default"].createElement("a");
              c.href = a;
              // IE8 (and 9?) Fix
              // ie8 doesn't parse the URL correctly until the anchor is actually
              // added to the body, and an innerHTML is needed to trigger the parsing
              var d = "" === c.host && "file:" !== c.protocol,
                e = void 0;
              d &&
                ((e = f["default"].createElement("div")),
                (e.innerHTML = '<a href="' + a + '"></a>'),
                (c = e.firstChild),
                // prevent the div from affecting layout
                e.setAttribute("style", "display:none; position:absolute;"),
                f["default"].body.appendChild(e));
              for (var g = {}, h = 0; h < b.length; h++) g[b[h]] = c[b[h]];
              // IE9 adds the port to the host property unlike everyone else. If
              // a port identifier is added for standard ports, strip it.
              return (
                "http:" === g.protocol && (g.host = g.host.replace(/:80$/, "")),
                "https:" === g.protocol &&
                  (g.host = g.host.replace(/:443$/, "")),
                d && f["default"].body.removeChild(e),
                g
              );
            };
          c.parseUrl = i;
          /**
           * Get absolute version of relative URL. Used to tell flash correct URL.
           * http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue
           *
           * @param  {String} url URL to make absolute
           * @return {String}     Absolute URL
           * @private
           * @method getAbsoluteURL
           */
          var j = function (a) {
            // Check if absolute URL
            if (!a.match(/^https?:\/\//)) {
              // Convert to absolute URL. Flash hosted off-site needs an absolute URL.
              var b = f["default"].createElement("div");
              (b.innerHTML = '<a href="' + a + '">x</a>'),
                (a = b.firstChild.href);
            }
            return a;
          };
          c.getAbsoluteURL = j;
          /**
           * Returns the extension of the passed file name. It will return an empty string if you pass an invalid path
           *
           * @param {String}    path    The fileName path like '/path/to/file.mp4'
           * @returns {String}          The extension in lower case or an empty string if no extension could be found.
           * @method getFileExtension
           */
          var k = function (a) {
            if ("string" == typeof a) {
              var b = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i,
                c = b.exec(a);
              if (c) return c.pop().toLowerCase();
            }
            return "";
          };
          c.getFileExtension = k;
          /**
           * Returns whether the url passed is a cross domain request or not.
           *
           * @param {String} url The url to check
           * @return {Boolean}   Whether it is a cross domain request or not
           * @method isCrossOrigin
           */
          var l = function (a) {
            var b = h["default"].location,
              c = i(a),
              d = ":" === c.protocol ? b.protocol : c.protocol,
              e = d + c.host !== b.protocol + b.host;
            return e;
          };
          c.isCrossOrigin = l;
        },
        { "global/document": 1, "global/window": 2 },
      ],
      153: [
        function (b, c, d) {
          "use strict";
          function e(a) {
            if (a && a.__esModule) return a;
            var b = {};
            if (null != a)
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return (b["default"] = a), b;
          }
          function f(a) {
            return a && a.__esModule ? a : { default: a };
          }
          /**
           * Doubles as the main function for users to create a player instance and also
           * the main library object.
           * The `videojs` function can be used to initialize or retrieve a player.
           * ```js
           *     var myPlayer = videojs('my_video_id');
           * ```
           *
           * @param  {String|Element} id      Video element or video element ID
           * @param  {Object=} options        Optional options object for config/settings
           * @param  {Function=} ready        Optional ready callback
           * @return {Player}                 A player instance
           * @mixes videojs
           * @method videojs
           */
          function g(a, b, c) {
            var d = void 0; // Element of ID
            // Allow for element or ID to be passed in
            // String ID
            if ("string" == typeof a) {
              // If a player instance has already been created for this ID return it.
              if (
                // Adjust for jQuery ID syntax
                (0 === a.indexOf("#") && (a = a.slice(1)), g.getPlayers()[a])
              )
                // If options or ready funtion are passed, warn
                return (
                  b &&
                    N["default"].warn(
                      'Player "' +
                        a +
                        '" is already initialised. Options will not be applied.'
                    ),
                  c && g.getPlayers()[a].ready(c),
                  g.getPlayers()[a]
                );
              d = P.getEl(a);
            } else d = a;
            // Check for a useable element
            if (!d || !d.nodeName)
              // re: nodeName, could be a box div also
              throw new TypeError(
                "The element or ID supplied is not valid. (videojs)"
              );
            // Element may have a player attr referring to an already created player instance.
            // If not, set up a new player and return the instance.
            return (
              d.player ||
              w["default"].players[d.playerId] ||
              new w["default"](d, b, c)
            );
          }
          d.__esModule = !0;
          var h = b("global/window"),
            i = f(h),
            j = b("global/document"),
            k = f(j),
            l = b("./setup"),
            m = e(l),
            n = b("./utils/stylesheet.js"),
            o = e(n),
            p = b("./component"),
            q = f(p),
            r = b("./event-target"),
            s = f(r),
            t = b("./utils/events.js"),
            u = e(t),
            v = b("./player"),
            w = f(v),
            x = b("./plugins.js"),
            y = f(x),
            z = b("../../src/js/utils/merge-options.js"),
            A = f(z),
            B = b("./utils/fn.js"),
            C = e(B),
            D = b("./tracks/text-track.js"),
            E = f(D),
            F = b("./tracks/audio-track.js"),
            G = f(F),
            H = b("./tracks/video-track.js"),
            I = f(H),
            J = b("./utils/time-ranges.js"),
            K = b("./utils/format-time.js"),
            L = f(K),
            M = b("./utils/log.js"),
            N = f(M),
            O = b("./utils/dom.js"),
            P = e(O),
            Q = b("./utils/browser.js"),
            R = e(Q),
            S = b("./utils/url.js"),
            T = e(S),
            U = b("./extend.js"),
            V = f(U),
            W = b("lodash-compat/object/merge"),
            X = f(W),
            Y = b("xhr"),
            Z = f(Y),
            $ = b("./tech/tech.js"),
            _ = f($),
            aa = b("./tech/html5.js"),
            ba = (f(aa), b("./tech/flash.js"));
          f(ba);
          // Add default styles
          if (
            // HTML5 Element Shim for IE8
            ("undefined" == typeof HTMLVideoElement &&
              (k["default"].createElement("video"),
              k["default"].createElement("audio"),
              k["default"].createElement("track")),
            i["default"].VIDEOJS_NO_DYNAMIC_STYLE !== !0)
          ) {
            var ca = P.$(".vjs-styles-defaults");
            if (!ca) {
              ca = o.createStyleElement("vjs-styles-defaults");
              var da = P.$("head");
              da.insertBefore(ca, da.firstChild),
                o.setTextContent(
                  ca,
                  "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    "
                );
            }
          }
          // Run Auto-load players
          // You have to wait at least once in case this script is loaded after your video in the DOM (weird behavior only with minified version)
          m.autoSetupTimeout(1, g),
            /*
             * Current software version (semver)
             *
             * @type {String}
             */ (g.VERSION = "5.11.7"),
            /**
             * The global options object. These are the settings that take effect
             * if no overrides are specified when the player is created.
             *
             * ```js
             *     videojs.options.autoplay = true
             *     // -> all players will autoplay by default
             * ```
             *
             * @type {Object}
             */
            (g.options = w["default"].prototype.options_),
            /**
             * Get an object with the currently created players, keyed by player ID
             *
             * @return {Object} The created players
             * @mixes videojs
             * @method getPlayers
             */ (g.getPlayers = function () {
              return w["default"].players;
            }),
            /**
             * Expose players object.
             *
             * @memberOf videojs
             * @property {Object} players
             */ (g.players = w["default"].players),
            /**
             * Get a component class object by name
             * ```js
             *     var VjsButton = videojs.getComponent('Button');
             *     // Create a new instance of the component
             *     var myButton = new VjsButton(myPlayer);
             * ```
             *
             * @return {Component} Component identified by name
             * @mixes videojs
             * @method getComponent
             */ (g.getComponent = q["default"].getComponent),
            /**
             * Register a component so it can referred to by name
             * Used when adding to other
             * components, either through addChild
             * `component.addChild('myComponent')`
             * or through default children options
             * `{ children: ['myComponent'] }`.
             * ```js
             *     // Get a component to subclass
             *     var VjsButton = videojs.getComponent('Button');
             *     // Subclass the component (see 'extend' doc for more info)
             *     var MySpecialButton = videojs.extend(VjsButton, {});
             *     // Register the new component
             *     VjsButton.registerComponent('MySepcialButton', MySepcialButton);
             *     // (optionally) add the new component as a default player child
             *     myPlayer.addChild('MySepcialButton');
             * ```
             * NOTE: You could also just initialize the component before adding.
             * `component.addChild(new MyComponent());`
             *
             * @param {String} The class name of the component
             * @param {Component} The component class
             * @return {Component} The newly registered component
             * @mixes videojs
             * @method registerComponent
             */ (g.registerComponent = function (a, b) {
              _["default"].isTech(b) &&
                N["default"].warn(
                  "The " +
                    a +
                    " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)"
                ),
                q["default"].registerComponent.call(q["default"], a, b);
            }),
            /**
             * Get a Tech class object by name
             * ```js
             *     var Html5 = videojs.getTech('Html5');
             *     // Create a new instance of the component
             *     var html5 = new Html5(options);
             * ```
             *
             * @return {Tech} Tech identified by name
             * @mixes videojs
             * @method getComponent
             */ (g.getTech = _["default"].getTech),
            /**
             * Register a Tech so it can referred to by name.
             * This is used in the tech order for the player.
             *
             * ```js
             *     // get the Html5 Tech
             *     var Html5 = videojs.getTech('Html5');
             *     var MyTech = videojs.extend(Html5, {});
             *     // Register the new Tech
             *     VjsButton.registerTech('Tech', MyTech);
             *     var player = videojs('myplayer', {
             *       techOrder: ['myTech', 'html5']
             *     });
             * ```
             *
             * @param {String} The class name of the tech
             * @param {Tech} The tech class
             * @return {Tech} The newly registered Tech
             * @mixes videojs
             * @method registerTech
             */ (g.registerTech = _["default"].registerTech),
            /**
             * A suite of browser and device tests
             *
             * @type {Object}
             * @private
             */
            (g.browser = R),
            /**
             * Whether or not the browser supports touch events. Included for backward
             * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`
             * instead going forward.
             *
             * @deprecated
             * @type {Boolean}
             */
            (g.TOUCH_ENABLED = R.TOUCH_ENABLED),
            /**
             * Subclass an existing class
             * Mimics ES6 subclassing with the `extend` keyword
             * ```js
             *     // Create a basic javascript 'class'
             *     function MyClass(name){
             *       // Set a property at initialization
             *       this.myName = name;
             *     }
             *     // Create an instance method
             *     MyClass.prototype.sayMyName = function(){
             *       alert(this.myName);
             *     };
             *     // Subclass the exisitng class and change the name
             *     // when initializing
             *     var MySubClass = videojs.extend(MyClass, {
             *       constructor: function(name) {
             *         // Call the super class constructor for the subclass
             *         MyClass.call(this, name)
             *       }
             *     });
             *     // Create an instance of the new sub class
             *     var myInstance = new MySubClass('John');
             *     myInstance.sayMyName(); // -> should alert "John"
             * ```
             *
             * @param {Function} The Class to subclass
             * @param {Object} An object including instace methods for the new class
             *                   Optionally including a `constructor` function
             * @return {Function} The newly created subclass
             * @mixes videojs
             * @method extend
             */ (g.extend = V["default"]),
            /**
             * Merge two options objects recursively
             * Performs a deep merge like lodash.merge but **only merges plain objects**
             * (not arrays, elements, anything else)
             * Other values will be copied directly from the second object.
             * ```js
             *     var defaultOptions = {
             *       foo: true,
             *       bar: {
             *         a: true,
             *         b: [1,2,3]
             *       }
             *     };
             *     var newOptions = {
             *       foo: false,
             *       bar: {
             *         b: [4,5,6]
             *       }
             *     };
             *     var result = videojs.mergeOptions(defaultOptions, newOptions);
             *     // result.foo = false;
             *     // result.bar.a = true;
             *     // result.bar.b = [4,5,6];
             * ```
             *
             * @param {Object} defaults  The options object whose values will be overriden
             * @param {Object} overrides The options object with values to override the first
             * @param {Object} etc       Any number of additional options objects
             *
             * @return {Object} a new object with the merged values
             * @mixes videojs
             * @method mergeOptions
             */ (g.mergeOptions = A["default"]),
            /**
             * Change the context (this) of a function
             *
             *     videojs.bind(newContext, function(){
             *       this === newContext
             *     });
             *
             * NOTE: as of v5.0 we require an ES5 shim, so you should use the native
             * `function(){}.bind(newContext);` instead of this.
             *
             * @param  {*}        context The object to bind as scope
             * @param  {Function} fn      The function to be bound to a scope
             * @param  {Number=}  uid     An optional unique ID for the function to be set
             * @return {Function}
             */ (g.bind = C.bind),
            /**
             *
             * @param {String} name The plugin name
             * @param {Function} fn The plugin function that will be called with options
             * @mixes videojs
             * @method plugin
             */ (g.plugin = y["default"]),
            /**
             * Adding languages so that they're available to all players.
             * ```js
             *     videojs.addLanguage('es', { 'Hello': 'Hola' });
             * ```
             *
             * @param  {String} code The language code or dictionary property
             * @param  {Object} data The data values to be translated
             * @return {Object} The resulting language dictionary object
             * @mixes videojs
             * @method addLanguage
             */ (g.addLanguage = function (a, b) {
              var c;
              return (
                (a = ("" + a).toLowerCase()),
                X["default"](g.options.languages, ((c = {}), (c[a] = b), c))[a]
              );
            }),
            /**
             * Log debug messages.
             *
             * @param {...Object} messages One or more messages to log
             */ (g.log = N["default"]),
            /**
             * Creates an emulated TimeRange object.
             *
             * @param  {Number|Array} start Start time in seconds or an array of ranges
             * @param  {Number} end   End time in seconds
             * @return {Object}       Fake TimeRange object
             * @method createTimeRange
             */ (g.createTimeRange = g.createTimeRanges = J.createTimeRanges),
            /**
             * Format seconds as a time string, H:MM:SS or M:SS
             * Supplying a guide (in seconds) will force a number of leading zeros
             * to cover the length of the guide
             *
             * @param  {Number} seconds Number of seconds to be turned into a string
             * @param  {Number} guide   Number (in seconds) to model the string after
             * @return {String}         Time formatted as H:MM:SS or M:SS
             * @method formatTime
             */ (g.formatTime = L["default"]),
            /**
             * Resolve and parse the elements of a URL
             *
             * @param  {String} url The url to parse
             * @return {Object}     An object of url details
             * @method parseUrl
             */ (g.parseUrl = T.parseUrl),
            /**
             * Returns whether the url passed is a cross domain request or not.
             *
             * @param {String} url The url to check
             * @return {Boolean}   Whether it is a cross domain request or not
             * @method isCrossOrigin
             */ (g.isCrossOrigin = T.isCrossOrigin),
            /**
             * Event target class.
             *
             * @type {Function}
             */
            (g.EventTarget = s["default"]),
            /**
             * Add an event listener to element
             * It stores the handler function in a separate cache object
             * and adds a generic handler to the element's event,
             * along with a unique id (guid) to the element.
             *
             * @param  {Element|Object}   elem Element or object to bind listeners to
             * @param  {String|Array}   type Type of event to bind to.
             * @param  {Function} fn   Event listener.
             * @method on
             */ (g.on = u.on),
            /**
             * Trigger a listener only once for an event
             *
             * @param  {Element|Object}   elem Element or object to
             * @param  {String|Array}   type Name/type of event
             * @param  {Function} fn Event handler function
             * @method one
             */ (g.one = u.one),
            /**
             * Removes event listeners from an element
             *
             * @param  {Element|Object}   elem Object to remove listeners from
             * @param  {String|Array=}   type Type of listener to remove. Don't include to remove all events from element.
             * @param  {Function} fn   Specific listener to remove. Don't include to remove listeners for an event type.
             * @method off
             */ (g.off = u.off),
            /**
             * Trigger an event for an element
             *
             * @param  {Element|Object}      elem  Element to trigger an event on
             * @param  {Event|Object|String} event A string (the type) or an event object with a type attribute
             * @param  {Object} [hash] data hash to pass along with the event
             * @return {Boolean=} Returned only if default was prevented
             * @method trigger
             */ (g.trigger = u.trigger),
            /**
             * A cross-browser XMLHttpRequest wrapper. Here's a simple example:
             *
             *     videojs.xhr({
             *       body: someJSONString,
             *       uri: "/foo",
             *       headers: {
             *         "Content-Type": "application/json"
             *       }
             *     }, function (err, resp, body) {
             *       // check resp.statusCode
             *     });
             *
             * Check out the [full
             * documentation](https://github.com/Raynos/xhr/blob/v2.1.0/README.md)
             * for more options.
             *
             * @param {Object} options settings for the request.
             * @return {XMLHttpRequest|XDomainRequest} the request object.
             * @see https://github.com/Raynos/xhr
             */ (g.xhr = Z["default"]),
            /**
             * TextTrack class
             *
             * @type {Function}
             */
            (g.TextTrack = E["default"]),
            /**
             * export the AudioTrack class so that source handlers can create
             * AudioTracks and then add them to the players AudioTrackList
             *
             * @type {Function}
             */
            (g.AudioTrack = G["default"]),
            /**
             * export the VideoTrack class so that source handlers can create
             * VideoTracks and then add them to the players VideoTrackList
             *
             * @type {Function}
             */
            (g.VideoTrack = I["default"]),
            /**
             * Determines, via duck typing, whether or not a value is a DOM element.
             *
             * @method isEl
             * @param  {Mixed} value
             * @return {Boolean}
             */ (g.isEl = P.isEl),
            /**
             * Determines, via duck typing, whether or not a value is a text node.
             *
             * @method isTextNode
             * @param  {Mixed} value
             * @return {Boolean}
             */ (g.isTextNode = P.isTextNode),
            /**
             * Creates an element and applies properties.
             *
             * @method createEl
             * @param  {String} [tagName='div'] Name of tag to be created.
             * @param  {Object} [properties={}] Element properties to be applied.
             * @param  {Object} [attributes={}] Element attributes to be applied.
             * @return {Element}
             */ (g.createEl = P.createEl),
            /**
             * Check if an element has a CSS class
             *
             * @method hasClass
             * @param {Element} element Element to check
             * @param {String} classToCheck Classname to check
             */ (g.hasClass = P.hasElClass),
            /**
             * Add a CSS class name to an element
             *
             * @method addClass
             * @param {Element} element    Element to add class name to
             * @param {String} classToAdd Classname to add
             */ (g.addClass = P.addElClass),
            /**
             * Remove a CSS class name from an element
             *
             * @method removeClass
             * @param {Element} element    Element to remove from class name
             * @param {String} classToRemove Classname to remove
             */ (g.removeClass = P.removeElClass),
            /**
             * Adds or removes a CSS class name on an element depending on an optional
             * condition or the presence/absence of the class name.
             *
             * @method toggleElClass
             * @param  {Element} element
             * @param  {String} classToToggle
             * @param  {Boolean|Function} [predicate]
             *         Can be a function that returns a Boolean. If `true`, the class
             *         will be added; if `false`, the class will be removed. If not
             *         given, the class will be added if not present and vice versa.
             */ (g.toggleClass = P.toggleElClass),
            /**
             * Apply attributes to an HTML element.
             *
             * @method setAttributes
             * @param  {Element} el         Target element.
             * @param  {Object=} attributes Element attributes to be applied.
             */ (g.setAttributes = P.setElAttributes),
            /**
             * Get an element's attribute values, as defined on the HTML tag
             * Attributes are not the same as properties. They're defined on the tag
             * or with setAttribute (which shouldn't be used with HTML)
             * This will return true or false for boolean attributes.
             *
             * @method getAttributes
             * @param  {Element} tag Element from which to get tag attributes
             * @return {Object}
             */ (g.getAttributes = P.getElAttributes),
            /**
             * Empties the contents of an element.
             *
             * @method emptyEl
             * @param  {Element} el
             * @return {Element}
             */ (g.emptyEl = P.emptyEl),
            /**
             * Normalizes and appends content to an element.
             *
             * The content for an element can be passed in multiple types and
             * combinations, whose behavior is as follows:
             *
             * - String
             *   Normalized into a text node.
             *
             * - Element, TextNode
             *   Passed through.
             *
             * - Array
             *   A one-dimensional array of strings, elements, nodes, or functions (which
             *   return single strings, elements, or nodes).
             *
             * - Function
             *   If the sole argument, is expected to produce a string, element,
             *   node, or array.
             *
             * @method appendContent
             * @param  {Element} el
             * @param  {String|Element|TextNode|Array|Function} content
             * @return {Element}
             */ (g.appendContent = P.appendContent),
            /**
             * Normalizes and inserts content into an element; this is identical to
             * `appendContent()`, except it empties the element first.
             *
             * The content for an element can be passed in multiple types and
             * combinations, whose behavior is as follows:
             *
             * - String
             *   Normalized into a text node.
             *
             * - Element, TextNode
             *   Passed through.
             *
             * - Array
             *   A one-dimensional array of strings, elements, nodes, or functions (which
             *   return single strings, elements, or nodes).
             *
             * - Function
             *   If the sole argument, is expected to produce a string, element,
             *   node, or array.
             *
             * @method insertContent
             * @param  {Element} el
             * @param  {String|Element|TextNode|Array|Function} content
             * @return {Element}
             */ (g.insertContent = P.insertContent),
            /*
             * Custom Universal Module Definition (UMD)
             *
             */ "function" == typeof a && a.amd
              ? a("videojs", [], function () {
                  return g;
                })
              : "object" == typeof d && "object" == typeof c && (c.exports = g),
            (d["default"] = g),
            (c.exports = d["default"]);
        },
        {
          "../../src/js/utils/merge-options.js": 148,
          "./component": 67,
          "./event-target": 104,
          "./extend.js": 105,
          "./player": 113,
          "./plugins.js": 114,
          "./setup": 118,
          "./tech/flash.js": 121,
          "./tech/html5.js": 122,
          "./tech/tech.js": 124,
          "./tracks/audio-track.js": 126,
          "./tracks/text-track.js": 134,
          "./tracks/video-track.js": 139,
          "./utils/browser.js": 140,
          "./utils/dom.js": 142,
          "./utils/events.js": 143,
          "./utils/fn.js": 144,
          "./utils/format-time.js": 145,
          "./utils/log.js": 147,
          "./utils/stylesheet.js": 149,
          "./utils/time-ranges.js": 150,
          "./utils/url.js": 152,
          "global/document": 1,
          "global/window": 2,
          "lodash-compat/object/merge": 40,
          xhr: 56,
        },
      ],
    },
    {},
    [153]
  )(153);
}),
  (function (a, b) {
    function c(a) {
      if ("string" != typeof a) return !1;
      var b = f[a.toLowerCase()];
      return !!b && a.toLowerCase();
    }
    function d(a) {
      return "number" == typeof a && a >= 0 && a <= 100;
    }
    // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface
    function e() {
      var a = 100,
        b = 3,
        e = 0,
        f = 100,
        g = 0,
        h = 100,
        i = "";
      Object.defineProperties(this, {
        width: {
          enumerable: !0,
          get: function () {
            return a;
          },
          set: function (b) {
            if (!d(b)) throw new Error("");
            a = b;
          },
        },
        lines: {
          enumerable: !0,
          get: function () {
            return b;
          },
          set: function (a) {
            if ("number" != typeof a)
              throw new TypeError("Lines must be set to a number.");
            b = a;
          },
        },
        regionAnchorY: {
          enumerable: !0,
          get: function () {
            return f;
          },
          set: function (a) {
            if (!d(a))
              throw new Error("RegionAnchorX must be between 0 and 100.");
            f = a;
          },
        },
        regionAnchorX: {
          enumerable: !0,
          get: function () {
            return e;
          },
          set: function (a) {
            if (!d(a))
              throw new Error("RegionAnchorY must be between 0 and 100.");
            e = a;
          },
        },
        viewportAnchorY: {
          enumerable: !0,
          get: function () {
            return h;
          },
          set: function (a) {
            if (!d(a))
              throw new Error("ViewportAnchorY must be between 0 and 100.");
            h = a;
          },
        },
        viewportAnchorX: {
          enumerable: !0,
          get: function () {
            return g;
          },
          set: function (a) {
            if (!d(a))
              throw new Error("ViewportAnchorX must be between 0 and 100.");
            g = a;
          },
        },
        scroll: {
          enumerable: !0,
          get: function () {
            return i;
          },
          set: function (a) {
            var b = c(a);
            // Have to check for false as an empty string is a legal value.
            if (b === !1)
              throw new SyntaxError(
                "An invalid or illegal string was specified."
              );
            i = b;
          },
        },
      });
    }
    var f = { "": !0, up: !0 };
    (a.VTTRegion = a.VTTRegion || e), (b.VTTRegion = e);
  })(this, this.vttjs || {}),
  (function (a) {
    function b(a, b) {
      (this.name = "ParsingError"),
        (this.code = a.code),
        (this.message = b || a.message);
    }
    function d() {
      this.values = o(null);
    }
    function e(a, b, c, d) {
      var e = d ? a.split(d) : [a];
      for (var f in e)
        if ("string" == typeof e[f]) {
          var g = e[f].split(c);
          if (2 === g.length) {
            var h = g[0],
              i = g[1];
            b(h, i);
          }
        }
    }
    function f(a, f, g) {
      function i(a, b) {
        var c = new d();
        e(
          a,
          function (a, b) {
            switch (a) {
              case "region":
                for (var d = g.length - 1; d >= 0; d--)
                  if (g[d].id === b) {
                    c.set(a, g[d].region);
                    break;
                  }
                break;
              case "vertical":
                c.alt(a, b, ["rl", "lr"]);
                break;
              case "line":
                var e = b.split(","),
                  f = e[0];
                c.integer(a, f),
                  c.percent(a, f) ? c.set("snapToLines", !1) : null,
                  c.alt(a, f, ["auto"]),
                  2 === e.length &&
                    c.alt("lineAlign", e[1], ["start", "middle", "end"]);
                break;
              case "position":
                (e = b.split(",")),
                  c.percent(a, e[0]),
                  2 === e.length &&
                    c.alt("positionAlign", e[1], ["start", "middle", "end"]);
                break;
              case "size":
                c.percent(a, b);
                break;
              case "align":
                c.alt(a, b, ["start", "middle", "end", "left", "right"]);
            }
          },
          /:/,
          /\s/
        ),
          // Apply default values for any missing fields.
          (b.region = c.get("region", null)),
          (b.vertical = c.get("vertical", "")),
          (b.line = c.get("line", "auto")),
          (b.lineAlign = c.get("lineAlign", "start")),
          (b.snapToLines = c.get("snapToLines", !0)),
          (b.size = c.get("size", 100)),
          (b.align = c.get("align", "middle")),
          (b.position = c.get(
            "position",
            { start: 0, left: 0, middle: 50, end: 100, right: 100 },
            b.align
          )),
          (b.positionAlign = c.get(
            "positionAlign",
            {
              start: "start",
              left: "start",
              middle: "middle",
              end: "end",
              right: "end",
            },
            b.align
          ));
      }
      function j() {
        a = a.replace(/^\s+/, "");
      }
      // Remember the original input if we need to throw an error.
      var k = a;
      if (
        // 4.1 WebVTT cue timings.
        (j(),
        (f.startTime = h()), // (1) collect cue start time
        j(),
        "-->" !== a.substr(0, 3))
      )
        // (3) next characters must match "-->"
        throw new b(
          b.Errors.BadTimeStamp,
          "Malformed time stamp (time stamps must be separated by '-->'): " + k
        );
      (a = a.substr(3)),
        j(),
        (f.endTime = h()), // (5) collect cue end time
        // 4.1 WebVTT cue settings list.
        j(),
        i(a, f);
    }
    // Parse content into a document fragment.
    function g(a, b) {
      function d() {
        // Consume 'n' characters from the input.
        function a(a) {
          return (b = b.substr(a.length)), a;
        }
        // Check for end-of-string.
        if (!b) return null;
        var c = b.match(/^([^<]*)(<[^>]+>?)?/);
        // If there is some text before the next tag, return it, otherwise return
        // the tag.
        return a(c[1] ? c[1] : c[2]);
      }
      // Unescape a string 's'.
      function e(a) {
        return p[a];
      }
      function f(a) {
        for (; (o = a.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)); )
          a = a.replace(o[0], e);
        return a;
      }
      function g(a, b) {
        return !s[b.localName] || s[b.localName] === a.localName;
      }
      // Create an element for this tag.
      function h(b, c) {
        var d = q[b];
        if (!d) return null;
        var e = a.document.createElement(d);
        e.localName = d;
        var f = r[b];
        return f && c && (e[f] = c.trim()), e;
      }
      for (
        var i, j = a.document.createElement("div"), k = j, l = [];
        null !== (i = d());

      )
        if ("<" !== i[0])
          // Text nodes are leaf nodes.
          k.appendChild(a.document.createTextNode(f(i)));
        else {
          if ("/" === i[1]) {
            // If the closing tag matches, move back up to the parent node.
            l.length &&
              l[l.length - 1] === i.substr(2).replace(">", "") &&
              (l.pop(), (k = k.parentNode));
            // Otherwise just ignore the end tag.
            continue;
          }
          var m,
            n = c(i.substr(1, i.length - 2));
          if (n) {
            // Timestamps are lead nodes as well.
            (m = a.document.createProcessingInstruction("timestamp", n)),
              k.appendChild(m);
            continue;
          }
          var o = i.match(/^<([^.\s\/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
          // If we can't parse the tag, skip to the next tag.
          if (!o) continue;
          if (
            // Try to construct an element, and ignore the tag if we couldn't.
            ((m = h(o[1], o[3])), !m)
          )
            continue;
          // Determine if the tag should be added based on the context of where it
          // is placed in the cuetext.
          if (!g(k, m)) continue;
          // Set the class list (as a list of classes, separated by space).
          o[2] && (m.className = o[2].substr(1).replace(".", " ")),
            // Append the node to the current node, and enter the scope of the new
            // node.
            l.push(o[1]),
            k.appendChild(m),
            (k = m);
        }
      return j;
    }
    function h(a) {
      function b(a, b) {
        for (var c = b.childNodes.length - 1; c >= 0; c--)
          a.push(b.childNodes[c]);
      }
      function c(a) {
        if (!a || !a.length) return null;
        var d = a.pop(),
          e = d.textContent || d.innerText;
        if (e) {
          // TODO: This should match all unicode type B characters (paragraph
          // separator characters). See issue #115.
          var f = e.match(/^.*(\n|\r)/);
          return f ? ((a.length = 0), f[0]) : e;
        }
        return "ruby" === d.tagName
          ? c(a)
          : d.childNodes
          ? (b(a, d), c(a))
          : void 0;
      }
      var d,
        e = [],
        f = "";
      if (!a || !a.childNodes) return "ltr";
      for (b(e, a); (f = c(e)); )
        for (var g = 0; g < f.length; g++) {
          d = f.charCodeAt(g);
          for (var h = 0; h < t.length; h++) if (t[h] === d) return "rtl";
        }
      return "ltr";
    }
    function i(a) {
      if (
        "number" == typeof a.line &&
        (a.snapToLines || (a.line >= 0 && a.line <= 100))
      )
        return a.line;
      if (
        !a.track ||
        !a.track.textTrackList ||
        !a.track.textTrackList.mediaElement
      )
        return -1;
      for (
        var b = a.track, c = b.textTrackList, d = 0, e = 0;
        e < c.length && c[e] !== b;
        e++
      )
        "showing" === c[e].mode && d++;
      return ++d * -1;
    }
    function j() {}
    // Constructs the computed display state of the cue (a div). Places the div
    // into the overlay which should be a block level element (usually a div).
    function k(a, b, c) {
      var d = /MSIE\s8\.0/.test(navigator.userAgent),
        e = "rgba(255, 255, 255, 1)",
        f = "rgba(0, 0, 0, 0.8)";
      d && ((e = "rgb(255, 255, 255)"), (f = "rgb(0, 0, 0)")),
        j.call(this),
        (this.cue = b),
        // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will
        // have inline positioning and will function as the cue background box.
        (this.cueDiv = g(a, b.text));
      var i = {
        color: e,
        backgroundColor: f,
        position: "relative",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        display: "inline",
      };
      d ||
        ((i.writingMode =
          "" === b.vertical
            ? "horizontal-tb"
            : "lr" === b.vertical
            ? "vertical-lr"
            : "vertical-rl"),
        (i.unicodeBidi = "plaintext")),
        this.applyStyles(i, this.cueDiv),
        // Create an absolutely positioned div that will be used to position the cue
        // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS
        // mirrors of them except "middle" which is "center" in CSS.
        (this.div = a.document.createElement("div")),
        (i = {
          textAlign: "middle" === b.align ? "center" : b.align,
          font: c.font,
          whiteSpace: "pre-line",
          position: "absolute",
        }),
        d ||
          ((i.direction = h(this.cueDiv)),
          (i.writingMode =
            "" === b.vertical
              ? "horizontal-tb"
              : "lr" === b.vertical
              ? "vertical-lr"
              : ("vertical-rl".stylesunicodeBidi = "plaintext"))),
        this.applyStyles(i),
        this.div.appendChild(this.cueDiv);
      // Calculate the distance from the reference edge of the viewport to the text
      // position of the cue box. The reference edge will be resolved later when
      // the box orientation styles are applied.
      var k = 0;
      switch (b.positionAlign) {
        case "start":
          k = b.position;
          break;
        case "middle":
          k = b.position - b.size / 2;
          break;
        case "end":
          k = b.position - b.size;
      }
      // Horizontal box orientation; textPos is the distance from the left edge of the
      // area to the left edge of the box and cue.size is the distance extending to
      // the right from there.
      "" === b.vertical
        ? this.applyStyles({
            left: this.formatStyle(k, "%"),
            width: this.formatStyle(b.size, "%"),
          })
        : this.applyStyles({
            top: this.formatStyle(k, "%"),
            height: this.formatStyle(b.size, "%"),
          }),
        (this.move = function (a) {
          this.applyStyles({
            top: this.formatStyle(a.top, "px"),
            bottom: this.formatStyle(a.bottom, "px"),
            left: this.formatStyle(a.left, "px"),
            right: this.formatStyle(a.right, "px"),
            height: this.formatStyle(a.height, "px"),
            width: this.formatStyle(a.width, "px"),
          });
        });
    }

    function l(a) {
      var b,
        c,
        d,
        e,
        f = /MSIE\s8\.0/.test(navigator.userAgent);
      if (a.div) {
        (c = a.div.offsetHeight),
          (d = a.div.offsetWidth),
          (e = a.div.offsetTop);
        var g =
          (g = a.div.childNodes) &&
          (g = g[0]) &&
          g.getClientRects &&
          g.getClientRects();
        (a = a.div.getBoundingClientRect()),
          // In certain cases the outter div will be slightly larger then the sum of
          // the inner div's lines. This could be due to bold text, etc, on some platforms.
          // In this case we should get the average line height and use that. This will
          // result in the desired behaviour.
          (b = g
            ? Math.max((g[0] && g[0].height) || 0, a.height / g.length)
            : 0);
      }
      (this.left = a.left),
        (this.right = a.right),
        (this.top = a.top || e),
        (this.height = a.height || c),
        (this.bottom = a.bottom || e + (a.height || c)),
        (this.width = a.width || d),
        (this.lineHeight = void 0 !== b ? b : a.lineHeight),
        f && !this.lineHeight && (this.lineHeight = 13);
    }
    // Move a StyleBox to its specified, or next best, position. The containerBox
    // is the box that contains the StyleBox, such as a div. boxPositions are
    // a list of other boxes that the styleBox can't overlap with.
    function m(a, b, c, d) {
      // Find the best position for a cue box, b, on the video. The axis parameter
      // is a list of axis, the order of which, it will move the box along. For example:
      // Passing ["+x", "-x"] will move the box first along the x axis in the positive
      // direction. If it doesn't find a good position for it there it will then move
      // it along the x axis in the negative direction.
      function e(a, b) {
        // Highest possible so the first thing we get is better.
        for (var e, f = new l(a), g = 1, h = 0; h < b.length; h++) {
          for (
            ;
            a.overlapsOppositeAxis(c, b[h]) ||
            (a.within(c) && a.overlapsAny(d));

          )
            a.move(b[h]);
          // We found a spot where we aren't overlapping anything. This is our
          // best position.
          if (a.within(c)) return a;
          var i = a.intersectPercentage(c);
          // If we're outside the container box less then we were on our last try
          // then remember this position as the best position.
          g > i && ((e = new l(a)), (g = i)),
            // Reset the box position to the specified position.
            (a = new l(f));
        }
        return e || f;
      }
      var f = new l(b),
        g = b.cue,
        h = i(g),
        j = [];
      // If we have a line number to align the cue to.
      if (g.snapToLines) {
        var k;
        switch (g.vertical) {
          case "":
            (j = ["+y", "-y"]), (k = "height");
            break;
          case "rl":
            (j = ["+x", "-x"]), (k = "width");
            break;
          case "lr":
            (j = ["-x", "+x"]), (k = "width");
        }
        var m = f.lineHeight,
          n = m * Math.round(h),
          o = c[k] + m,
          p = j[0];
        // If the specified intial position is greater then the max position then
        // clamp the box to the amount of steps it would take for the box to
        // reach the max position.
        Math.abs(n) > o && ((n = n < 0 ? -1 : 1), (n *= Math.ceil(o / m) * m)),
          // If computed line position returns negative then line numbers are
          // relative to the bottom of the video instead of the top. Therefore, we
          // need to increase our initial position by the length or width of the
          // video, depending on the writing direction, and reverse our axis directions.
          h < 0 &&
            ((n += "" === g.vertical ? c.height : c.width), (j = j.reverse())),
          // Move the box to the specified position. This may not be its best
          // position.
          f.move(p, n);
      } else {
        // If we have a percentage line value for the cue.
        var q = (f.lineHeight / c.height) * 100;
        switch (g.lineAlign) {
          case "middle":
            h -= q / 2;
            break;
          case "end":
            h -= q;
        }
        // Apply initial line position to the cue box.
        switch (g.vertical) {
          case "":
            b.applyStyles({ top: b.formatStyle(h, "%") });
            break;
          case "rl":
            b.applyStyles({ left: b.formatStyle(h, "%") });
            break;
          case "lr":
            b.applyStyles({ right: b.formatStyle(h, "%") });
        }
        (j = ["+y", "-x", "+x", "-y"]),
          // Get the box position again after we've applied the specified positioning
          // to it.
          (f = new l(b));
      }
      var r = e(f, j);
      b.move(r.toCSSCompatValues(c));
    }
    function n() {}
    var o =
      Object.create ||
      (function () {
        function a() {}
        return function (b) {
          if (1 !== arguments.length)
            throw new Error("Object.create shim only accepts one parameter.");
          return (a.prototype = b), new a();
        };
      })();
    (b.prototype = o(Error.prototype)),
      (b.prototype.constructor = b),
      // ParsingError metadata for acceptable ParsingErrors.
      (b.Errors = {
        BadSignature: { code: 0, message: "Malformed WebVTT signature." },
        BadTimeStamp: { code: 1, message: "Malformed time stamp." },
      }),
      (d.prototype = {
        // Only accept the first assignment to any key.
        set: function (a, b) {
          this.get(a) || "" === b || (this.values[a] = b);
        },
        // Return the value for a key, or a default value.
        // If 'defaultKey' is passed then 'dflt' is assumed to be an object with
        // a number of possible default values as properties where 'defaultKey' is
        // the key of the property that will be chosen; otherwise it's assumed to be
        // a single value.
        get: function (a, b, c) {
          return c
            ? this.has(a)
              ? this.values[a]
              : b[c]
            : this.has(a)
            ? this.values[a]
            : b;
        },
        // Check whether we have a value for a key.
        has: function (a) {
          return a in this.values;
        },
        // Accept a setting if its one of the given alternatives.
        alt: function (a, b, c) {
          for (var d = 0; d < c.length; ++d)
            if (b === c[d]) {
              this.set(a, b);
              break;
            }
        },
        // Accept a setting if its a valid (signed) integer.
        integer: function (a, b) {
          /^-?\d+$/.test(b) && // integer
            this.set(a, parseInt(b, 10));
        },
        // Accept a setting if its a valid percentage.
        percent: function (a, b) {
          var c;
          return (
            !!(
              (c = b.match(/^([\d]{1,3})(\.[\d]*)?%$/)) &&
              ((b = parseFloat(b)), b >= 0 && b <= 100)
            ) && (this.set(a, b), !0)
          );
        },
      });
    // Apply styles to a div. If there is no div passed then it defaults to the
    // div on 'this'.
    (j.prototype.applyStyles = function (a, b) {
      b = b || this.div;
      for (var c in a) a.hasOwnProperty(c) && (b.style[c] = a[c]);
    }),
      (j.prototype.formatStyle = function (a, b) {
        return 0 === a ? 0 : a + b;
      }),
      (k.prototype = o(j.prototype)),
      (k.prototype.constructor = k),
      // Move the box along a particular axis. Optionally pass in an amount to move
      // the box. If no amount is passed then the default is the line height of the
      // box.
      (l.prototype.move = function (a, b) {
        switch (((b = void 0 !== b ? b : this.lineHeight), a)) {
          case "+x":
            (this.left += b), (this.right += b);
            break;
          case "-x":
            (this.left -= b), (this.right -= b);
            break;
          case "+y":
            (this.top += b), (this.bottom += b);
            break;
          case "-y":
            (this.top -= b), (this.bottom -= b);
        }
      }),
      // Check if this box overlaps another box, b2.
      (l.prototype.overlaps = function (a) {
        return (
          this.left < a.right &&
          this.right > a.left &&
          this.top < a.bottom &&
          this.bottom > a.top
        );
      }),
      // Check if this box overlaps any other boxes in boxes.
      (l.prototype.overlapsAny = function (a) {
        for (var b = 0; b < a.length; b++) if (this.overlaps(a[b])) return !0;
        return !1;
      }),
      // Check if this box is within another box.
      (l.prototype.within = function (a) {
        return (
          this.top >= a.top &&
          this.bottom <= a.bottom &&
          this.left >= a.left &&
          this.right <= a.right
        );
      }),
      // Check if this box is entirely within the container or it is overlapping
      // on the edge opposite of the axis direction passed. For example, if "+x" is
      // passed and the box is overlapping on the left edge of the container, then
      // return true.
      (l.prototype.overlapsOppositeAxis = function (a, b) {
        switch (b) {
          case "+x":
            return this.left < a.left;
          case "-x":
            return this.right > a.right;
          case "+y":
            return this.top < a.top;
          case "-y":
            return this.bottom > a.bottom;
        }
      }),
      // Find the percentage of the area that this box is overlapping with another
      // box.
      (l.prototype.intersectPercentage = function (a) {
        var b = Math.max(
            0,
            Math.min(this.right, a.right) - Math.max(this.left, a.left)
          ),
          c = Math.max(
            0,
            Math.min(this.bottom, a.bottom) - Math.max(this.top, a.top)
          ),
          d = b * c;
        return d / (this.height * this.width);
      }),
      // Convert the positions from this box to CSS compatible positions using
      // the reference container's positions. This has to be done because this
      // box's positions are in reference to the viewport origin, whereas, CSS
      // values are in referecne to their respective edges.
      (l.prototype.toCSSCompatValues = function (a) {
        return {
          top: this.top - a.top,
          bottom: a.bottom - this.bottom,
          left: this.left - a.left,
          right: a.right - this.right,
          height: this.height,
          width: this.width,
        };
      }),
      // Get an object that represents the box's position without anything extra.
      // Can pass a StyleBox, HTMLElement, or another BoxPositon.
      (l.getSimpleBoxPosition = function (a) {
        var b = a.div ? a.div.offsetHeight : a.tagName ? a.offsetHeight : 0,
          c = a.div ? a.div.offsetWidth : a.tagName ? a.offsetWidth : 0,
          d = a.div ? a.div.offsetTop : a.tagName ? a.offsetTop : 0;
        a = a.div
          ? a.div.getBoundingClientRect()
          : a.tagName
          ? a.getBoundingClientRect()
          : a;
        var e = {
          left: a.left,
          right: a.right,
          top: a.top || d,
          height: a.height || b,
          bottom: a.bottom || d + (a.height || b),
          width: a.width || c,
        };
        return e;
      }),
      // Helper to allow strings to be decoded instead of the default binary utf8 data.
      (n.StringDecoder = function () {
        return {
          decode: function (a) {
            if (!a) return "";
            if ("string" != typeof a)
              throw new Error("Error - expected string data.");
            return decodeURIComponent(encodeURIComponent(a));
          },
        };
      }),
      (n.convertCueToDOMTree = function (a, b) {
        return a && b ? g(a, b) : null;
      });
    var u = 0.05,
      v = "sans-serif",
      w = "1.5%";
    // Runs the processing model over the cues and regions passed to it.
    // @param overlay A block level element (usually a div) that the computed cues
    //                and regions will be placed into.
    (n.processCues = function (a, b, c) {
      // Determine if we need to compute the display states of the cues. This could
      // be the case if a cue's state has been changed since the last computation or
      // if it has not been computed yet.
      function d(a) {
        for (var b = 0; b < a.length; b++)
          if (a[b].hasBeenReset || !a[b].displayState) return !0;
        return !1;
      }
      if (!a || !b || !c) return null;
      // Remove all previous children.
      for (; c.firstChild; ) c.removeChild(c.firstChild);
      var e = a.document.createElement("div");
      // We don't need to recompute the cues' display states. Just reuse them.
      if (
        ((e.style.position = "absolute"),
        (e.style.left = "0"),
        (e.style.right = "0"),
        (e.style.top = "0"),
        (e.style.bottom = "0"),
        (e.style.margin = w),
        c.appendChild(e),
        d(b))
      ) {
        var f = [],
          g = l.getSimpleBoxPosition(e),
          h = Math.round(g.height * u * 100) / 100,
          i = { font: h + "px " + v };
        !(function () {
          for (var c, d, h = 0; h < b.length; h++)
            (d = b[h]),
              // Compute the intial position and styles of the cue div.
              (c = new k(a, d, i)),
              e.appendChild(c.div),
              // Move the cue div to it's correct line position.
              m(a, c, g, f),
              // Remember the computed div so that we don't have to recompute it later
              // if we don't have too.
              (d.displayState = c.div),
              f.push(l.getSimpleBoxPosition(c));
        })();
      } else
        for (var j = 0; j < b.length; j++) e.appendChild(b[j].displayState);
    }),
      (n.Parser = function (a, b, c) {
        c || ((c = b), (b = {})),
          b || (b = {}),
          (this.window = a),
          (this.vttjs = b),
          (this.state = "INITIAL"),
          (this.buffer = ""),
          (this.decoder = c || new TextDecoder("utf8")),
          (this.regionList = []);
      }),
      (n.Parser.prototype = {
        // If the error is a ParsingError then report it to the consumer if
        // possible. If it's not a ParsingError then throw it like normal.
        reportOrThrowError: function (a) {
          if (!(a instanceof b)) throw a;
          this.onparsingerror && this.onparsingerror(a);
        },
        parse: function (a) {
          function c() {
            for (
              var a = i.buffer, b = 0;
              b < a.length && "\r" !== a[b] && "\n" !== a[b];

            )
              ++b;
            var c = a.substr(0, b);
            // Advance the buffer early in case we fail below.
            return (
              "\r" === a[b] && ++b,
              "\n" === a[b] && ++b,
              (i.buffer = a.substr(b)),
              c
            );
          }
          // 3.4 WebVTT region and WebVTT region settings syntax
          function g(a) {
            var b = new d();
            // Create the region, using default values for any values that were not
            // specified.
            if (
              (e(
                a,
                function (a, c) {
                  switch (a) {
                    case "id":
                      b.set(a, c);
                      break;
                    case "width":
                      b.percent(a, c);
                      break;
                    case "lines":
                      b.integer(a, c);
                      break;
                    case "regionanchor":
                    case "viewportanchor":
                      var e = c.split(",");
                      if (2 !== e.length) break;
                      // We have to make sure both x and y parse, so use a temporary
                      // settings object here.
                      var f = new d();
                      if (
                        (f.percent("x", e[0]),
                        f.percent("y", e[1]),
                        !f.has("x") || !f.has("y"))
                      )
                        break;
                      b.set(a + "X", f.get("x")), b.set(a + "Y", f.get("y"));
                      break;
                    case "scroll":
                      b.alt(a, c, ["up"]);
                  }
                },
                /=/,
                /\s/
              ),
              b.has("id"))
            ) {
              var c = new (i.vttjs.VTTRegion || i.window.VTTRegion)();
              (c.width = b.get("width", 100)),
                (c.lines = b.get("lines", 3)),
                (c.regionAnchorX = b.get("regionanchorX", 0)),
                (c.regionAnchorY = b.get("regionanchorY", 100)),
                (c.viewportAnchorX = b.get("viewportanchorX", 0)),
                (c.viewportAnchorY = b.get("viewportanchorY", 100)),
                (c.scroll = b.get("scroll", "")),
                // Register the region.
                i.onregion && i.onregion(c),
                // Remember the VTTRegion for later in case we parse any VTTCues that
                // reference it.
                i.regionList.push({ id: b.get("id"), region: c });
            }
          }
          // 3.2 WebVTT metadata header syntax
          function h(a) {
            e(
              a,
              function (a, b) {
                switch (a) {
                  case "Region":
                    // 3.3 WebVTT region metadata header syntax
                    g(b);
                }
              },
              /:/
            );
          }
          var i = this;
          // If there is no data then we won't decode it, but will just try to parse
          // whatever is in buffer already. This may occur in circumstances, for
          // example when flush() is called.
          a &&
            // Try to decode the data that we received.
            (i.buffer += i.decoder.decode(a, { stream: !0 }));
          // 5.1 WebVTT file parsing.
          try {
            var j;
            if ("INITIAL" === i.state) {
              // We can't start parsing until we have the first line.
              if (!/\r\n|\n/.test(i.buffer)) return this;
              j = c();
              var k = j.match(/^WEBVTT([ \t].*)?$/);
              if (!k || !k[0]) throw new b(b.Errors.BadSignature);
              i.state = "HEADER";
            }
            for (var l = !1; i.buffer; ) {
              // We can't parse a line until we have the full line.
              if (!/\r\n|\n/.test(i.buffer)) return this;
              switch ((l ? (l = !1) : (j = c()), i.state)) {
                case "HEADER":
                  // 13-18 - Allow a header (metadata) under the WEBVTT line.
                  /:/.test(j)
                    ? h(j)
                    : j ||
                      // An empty line terminates the header and starts the body (cues).
                      (i.state = "ID");
                  continue;
                case "NOTE":
                  // Ignore NOTE blocks.
                  j || (i.state = "ID");
                  continue;
                case "ID":
                  // Check for the start of NOTE blocks.
                  if (/^NOTE($|[ \t])/.test(j)) {
                    i.state = "NOTE";
                    break;
                  }
                  // 19-29 - Allow any number of line terminators, then initialize new cue values.
                  if (!j) continue;
                  // 30-39 - Check if self line contains an optional identifier or timing data.
                  if (
                    ((i.cue = new (i.vttjs.VTTCue || i.window.VTTCue)(
                      0,
                      0,
                      ""
                    )),
                    (i.state = "CUE"),
                    j.indexOf("-->") === -1)
                  ) {
                    i.cue.id = j;
                    continue;
                  }
                // Process line as start of a cue.
                /*falls through*/
                case "CUE":
                  // 40 - Collect cue timings and settings.
                  try {
                    f(j, i.cue, i.regionList);
                  } catch (m) {
                    i.reportOrThrowError(m),
                      // In case of an error ignore rest of the cue.
                      (i.cue = null),
                      (i.state = "BADCUE");
                    continue;
                  }
                  i.state = "CUETEXT";
                  continue;
                case "CUETEXT":
                  var n = j.indexOf("-->") !== -1;
                  // 34 - If we have an empty line then report the cue.
                  // 35 - If we have the special substring '-->' then report the cue,
                  // but do not collect the line as we need to process the current
                  // one as a new cue.
                  if (!j || (n && (l = !0))) {
                    // We are done parsing self cue.
                    i.oncue && i.oncue(i.cue), (i.cue = null), (i.state = "ID");
                    continue;
                  }
                  i.cue.text && (i.cue.text += "\n"), (i.cue.text += j);
                  continue;
                case "BADCUE": // BADCUE
                  // 54-62 - Collect and discard the remaining cue.
                  j || (i.state = "ID");
                  continue;
              }
            }
          } catch (m) {
            i.reportOrThrowError(m),
              // If we are currently parsing a cue, report what we have.
              "CUETEXT" === i.state && i.cue && i.oncue && i.oncue(i.cue),
              (i.cue = null),
              // Enter BADWEBVTT state if header was not parsed correctly otherwise
              // another exception occurred so enter BADCUE state.
              (i.state = "INITIAL" === i.state ? "BADWEBVTT" : "BADCUE");
          }
          return this;
        },
        flush: function () {
          var a = this;
          try {
            // If we've flushed, parsed, and we're still on the INITIAL state then
            // that means we don't have enough of the stream to parse the first
            // line.
            if (
              // Finish decoding the stream.
              ((a.buffer += a.decoder.decode()),
              // Synthesize the end of the current cue or region.
              (a.cue || "HEADER" === a.state) &&
                ((a.buffer += "\n\n"), a.parse()),
              "INITIAL" === a.state)
            )
              throw new b(b.Errors.BadSignature);
          } catch (c) {
            a.reportOrThrowError(c);
          }
          return a.onflush && a.onflush(), this;
        },
      }),
      (a.WebVTT = n);
  })(this, this.vttjs || {});
if (
  ((window.FormValidation = {
    AddOn: {},
    Framework: {},
    I18n: {},
    Validator: {},
  }),
  "undefined" == typeof jQuery)
)
  throw new Error("FormValidation requires jQuery");
!(function (a) {
  var b = a.fn.jquery.split(" ")[0].split(".");
  if ((+b[0] < 2 && +b[1] < 9) || (1 === +b[0] && 9 === +b[1] && +b[2] < 1))
    throw new Error("FormValidation requires jQuery version 1.9.1 or higher");
})(jQuery),
  (function (a) {
    (FormValidation.Base = function (b, c, d) {
      (this.$form = a(b)),
        (this.options = a.extend({}, a.fn.formValidation.DEFAULT_OPTIONS, c)),
        (this._namespace = d || "fv"),
        (this.$invalidFields = a([])),
        (this.$submitButton = null),
        (this.$hiddenButton = null),
        (this.STATUS_NOT_VALIDATED = "NOT_VALIDATED"),
        (this.STATUS_VALIDATING = "VALIDATING"),
        (this.STATUS_INVALID = "INVALID"),
        (this.STATUS_VALID = "VALID"),
        (this.STATUS_IGNORED = "IGNORED");
      var e = (function () {
          for (
            var a = 3, b = document.createElement("div"), c = b.all || [];
            (b.innerHTML = "<!--[if gt IE " + ++a + "]><br><![endif]-->"), c[0];

          );
          return a > 4 ? a : !a;
        })(),
        f = document.createElement("div");
      (this._changeEvent = 9 !== e && "oninput" in f ? "input" : "keyup"),
        (this._submitIfValid = null),
        (this._cacheFields = {}),
        this._init();
    }),
      (FormValidation.Base.prototype = {
        constructor: FormValidation.Base,
        _exceedThreshold: function (b) {
          var c = this._namespace,
            d = b.attr("data-" + c + "-field"),
            e = this.options.fields[d].threshold || this.options.threshold;
          if (!e) return !0;
          var f =
            -1 !==
            a.inArray(b.attr("type"), [
              "button",
              "checkbox",
              "file",
              "hidden",
              "image",
              "radio",
              "reset",
              "submit",
            ]);
          return f || b.val().length >= e;
        },
        _init: function () {
          var b = this,
            c = this._namespace,
            d = {
              addOns: {},
              autoFocus: this.$form.attr("data-" + c + "-autofocus"),
              button: {
                selector:
                  this.$form.attr("data-" + c + "-button-selector") ||
                  this.$form.attr("data-" + c + "-submitbuttons"),
                disabled: this.$form.attr("data-" + c + "-button-disabled"),
              },
              control: {
                valid: this.$form.attr("data-" + c + "-control-valid"),
                invalid: this.$form.attr("data-" + c + "-control-invalid"),
              },
              err: {
                clazz: this.$form.attr("data-" + c + "-err-clazz"),
                container:
                  this.$form.attr("data-" + c + "-err-container") ||
                  this.$form.attr("data-" + c + "-container"),
                parent: this.$form.attr("data-" + c + "-err-parent"),
              },
              events: {
                formInit: this.$form.attr("data-" + c + "-events-form-init"),
                formError: this.$form.attr("data-" + c + "-events-form-error"),
                formSuccess: this.$form.attr(
                  "data-" + c + "-events-form-success"
                ),
                fieldAdded: this.$form.attr(
                  "data-" + c + "-events-field-added"
                ),
                fieldRemoved: this.$form.attr(
                  "data-" + c + "-events-field-removed"
                ),
                fieldInit: this.$form.attr("data-" + c + "-events-field-init"),
                fieldError: this.$form.attr(
                  "data-" + c + "-events-field-error"
                ),
                fieldSuccess: this.$form.attr(
                  "data-" + c + "-events-field-success"
                ),
                fieldStatus: this.$form.attr(
                  "data-" + c + "-events-field-status"
                ),
                localeChanged: this.$form.attr(
                  "data-" + c + "-events-locale-changed"
                ),
                validatorError: this.$form.attr(
                  "data-" + c + "-events-validator-error"
                ),
                validatorSuccess: this.$form.attr(
                  "data-" + c + "-events-validator-success"
                ),
                validatorIgnored: this.$form.attr(
                  "data-" + c + "-events-validator-ignored"
                ),
              },
              excluded: this.$form.attr("data-" + c + "-excluded"),
              icon: {
                valid:
                  this.$form.attr("data-" + c + "-icon-valid") ||
                  this.$form.attr("data-" + c + "-feedbackicons-valid"),
                invalid:
                  this.$form.attr("data-" + c + "-icon-invalid") ||
                  this.$form.attr("data-" + c + "-feedbackicons-invalid"),
                validating:
                  this.$form.attr("data-" + c + "-icon-validating") ||
                  this.$form.attr("data-" + c + "-feedbackicons-validating"),
                feedback: this.$form.attr("data-" + c + "-icon-feedback"),
              },
              live: this.$form.attr("data-" + c + "-live"),
              locale: this.$form.attr("data-" + c + "-locale"),
              message: this.$form.attr("data-" + c + "-message"),
              onError: this.$form.attr("data-" + c + "-onerror"),
              onSuccess: this.$form.attr("data-" + c + "-onsuccess"),
              row: {
                selector:
                  this.$form.attr("data-" + c + "-row-selector") ||
                  this.$form.attr("data-" + c + "-group"),
                valid: this.$form.attr("data-" + c + "-row-valid"),
                invalid: this.$form.attr("data-" + c + "-row-invalid"),
                feedback: this.$form.attr("data-" + c + "-row-feedback"),
              },
              threshold: this.$form.attr("data-" + c + "-threshold"),
              trigger: this.$form.attr("data-" + c + "-trigger"),
              verbose: this.$form.attr("data-" + c + "-verbose"),
              fields: {},
            };
          this.$form
            .attr("novalidate", "novalidate")
            .addClass(this.options.elementClass)
            .on("submit." + c, function (a) {
              a.preventDefault(), b.validate();
            })
            .on("click." + c, this.options.button.selector, function () {
              (b.$submitButton = a(this)), (b._submitIfValid = !0);
            }),
            (this.options.declarative === !0 ||
              "true" === this.options.declarative) &&
              this.$form
                .find("[name], [data-" + c + "-field]")
                .each(function () {
                  var e = a(this),
                    f = e.attr("name") || e.attr("data-" + c + "-field"),
                    g = b._parseOptions(e);
                  g &&
                    (e.attr("data-" + c + "-field", f),
                    (d.fields[f] = a.extend({}, g, d.fields[f])));
                }),
            (this.options = a.extend(!0, this.options, d)),
            "string" == typeof this.options.err.parent &&
              (this.options.err.parent = new RegExp(this.options.err.parent)),
            this.options.container &&
              ((this.options.err.container = this.options.container),
              delete this.options.container),
            this.options.feedbackIcons &&
              ((this.options.icon = a.extend(
                !0,
                this.options.icon,
                this.options.feedbackIcons
              )),
              delete this.options.feedbackIcons),
            this.options.group &&
              ((this.options.row.selector = this.options.group),
              delete this.options.group),
            this.options.submitButtons &&
              ((this.options.button.selector = this.options.submitButtons),
              delete this.options.submitButtons),
            FormValidation.I18n[this.options.locale] ||
              (this.options.locale =
                a.fn.formValidation.DEFAULT_OPTIONS.locale),
            (this.options.declarative === !0 ||
              "true" === this.options.declarative) &&
              (this.options = a.extend(!0, this.options, {
                addOns: this._parseAddOnOptions(),
              })),
            (this.$hiddenButton = a("<button/>")
              .attr("type", "submit")
              .prependTo(this.$form)
              .addClass("fv-hidden-submit")
              .css({ display: "none", width: 0, height: 0 })),
            this.$form.on(
              "click." + this._namespace,
              '[type="submit"]',
              function (c) {
                if (!c.isDefaultPrevented()) {
                  var d = a(c.target),
                    e = d.is('[type="submit"]')
                      ? d.eq(0)
                      : d.parent('[type="submit"]').eq(0);
                  !b.options.button.selector ||
                    e.is(b.options.button.selector) ||
                    e.is(b.$hiddenButton) ||
                    b.$form.off("submit." + b._namespace).submit();
                }
              }
            );
          for (var e in this.options.fields) this._initField(e);
          for (var f in this.options.addOns)
            "function" == typeof FormValidation.AddOn[f].init &&
              FormValidation.AddOn[f].init(this, this.options.addOns[f]);
          this.$form.trigger(a.Event(this.options.events.formInit), {
            bv: this,
            fv: this,
            options: this.options,
          }),
            this.options.onSuccess &&
              this.$form.on(this.options.events.formSuccess, function (a) {
                FormValidation.Helper.call(b.options.onSuccess, [a]);
              }),
            this.options.onError &&
              this.$form.on(this.options.events.formError, function (a) {
                FormValidation.Helper.call(b.options.onError, [a]);
              });
        },
        _initField: function (b) {
          var c = this._namespace,
            d = a([]);
          switch (typeof b) {
            case "object":
              (d = b), (b = b.attr("data-" + c + "-field"));
              break;
            case "string":
              (d = this.getFieldElements(b)), d.attr("data-" + c + "-field", b);
          }
          if (
            0 !== d.length &&
            null !== this.options.fields[b] &&
            null !== this.options.fields[b].validators
          ) {
            var e;
            for (e in this.options.fields[b].validators)
              FormValidation.Validator[e] ||
                delete this.options.fields[b].validators[e];
            null === this.options.fields[b].enabled &&
              (this.options.fields[b].enabled = !0);
            for (
              var f = this,
                g = d.length,
                h = d.attr("type"),
                i = 1 === g || "radio" === h || "checkbox" === h,
                j = this._getFieldTrigger(d.eq(0)),
                k = a
                  .map(j, function (a) {
                    return a + ".update." + c;
                  })
                  .join(" "),
                l = 0;
              g > l;
              l++
            ) {
              var m = d.eq(l),
                n = this.options.fields[b].row || this.options.row.selector,
                o = m.closest(n),
                p =
                  "function" ==
                  typeof (
                    this.options.fields[b].container ||
                    this.options.fields[b].err ||
                    this.options.err.container
                  )
                    ? (
                        this.options.fields[b].container ||
                        this.options.fields[b].err ||
                        this.options.err.container
                      ).call(this, m, this)
                    : this.options.fields[b].container ||
                      this.options.fields[b].err ||
                      this.options.err.container,
                q =
                  p && "tooltip" !== p && "popover" !== p
                    ? a(p)
                    : this._getMessageContainer(m, n);
              p &&
                "tooltip" !== p &&
                "popover" !== p &&
                q.addClass(this.options.err.clazz),
                q
                  .find(
                    "." +
                      this.options.err.clazz.split(" ").join(".") +
                      "[data-" +
                      c +
                      "-validator][data-" +
                      c +
                      '-for="' +
                      b +
                      '"]'
                  )
                  .remove(),
                o.find("i[data-" + c + '-icon-for="' + b + '"]').remove(),
                m.off(k).on(k, function () {
                  f.updateStatus(a(this), f.STATUS_NOT_VALIDATED);
                }),
                m.data(c + ".messages", q);
              for (e in this.options.fields[b].validators)
                m.data(c + ".result." + e, this.STATUS_NOT_VALIDATED),
                  (i && l !== g - 1) ||
                    a("<small/>")
                      .css("display", "none")
                      .addClass(this.options.err.clazz)
                      .attr("data-" + c + "-validator", e)
                      .attr("data-" + c + "-for", b)
                      .attr("data-" + c + "-result", this.STATUS_NOT_VALIDATED)
                      .html(this._getMessage(b, e))
                      .appendTo(q),
                  "function" == typeof FormValidation.Validator[e].init &&
                    FormValidation.Validator[e].init(
                      this,
                      m,
                      this.options.fields[b].validators[e]
                    );
              if (
                this.options.fields[b].icon !== !1 &&
                "false" !== this.options.fields[b].icon &&
                this.options.icon &&
                this.options.icon.valid &&
                this.options.icon.invalid &&
                this.options.icon.validating &&
                (!i || l === g - 1)
              ) {
                o.addClass(this.options.row.feedback);
                var r = a("<i/>")
                  .css("display", "none")
                  .addClass(this.options.icon.feedback)
                  .attr("data-" + c + "-icon-for", b)
                  .insertAfter(m);
                (i ? d : m).data(c + ".icon", r),
                  ("tooltip" === p || "popover" === p) &&
                    ((i ? d : m)
                      .on(this.options.events.fieldError, function () {
                        o.addClass("fv-has-tooltip");
                      })
                      .on(this.options.events.fieldSuccess, function () {
                        o.removeClass("fv-has-tooltip");
                      }),
                    m
                      .off("focus.container." + c)
                      .on("focus.container." + c, function () {
                        f._showTooltip(m, p);
                      })
                      .off("blur.container." + c)
                      .on("blur.container." + c, function () {
                        f._hideTooltip(m, p);
                      })),
                  "string" == typeof this.options.fields[b].icon &&
                  "true" !== this.options.fields[b].icon
                    ? r.appendTo(a(this.options.fields[b].icon))
                    : this._fixIcon(m, r);
              }
            }
            d
              .on(this.options.events.fieldSuccess, function (a, b) {
                var c = f.getOptions(b.field, null, "onSuccess");
                c && FormValidation.Helper.call(c, [a, b]);
              })
              .on(this.options.events.fieldError, function (a, b) {
                var c = f.getOptions(b.field, null, "onError");
                c && FormValidation.Helper.call(c, [a, b]);
              })
              .on(this.options.events.fieldStatus, function (a, b) {
                var c = f.getOptions(b.field, null, "onStatus");
                c && FormValidation.Helper.call(c, [a, b]);
              })
              .on(this.options.events.validatorError, function (a, b) {
                var c = f.getOptions(b.field, b.validator, "onError");
                c && FormValidation.Helper.call(c, [a, b]);
              })
              .on(this.options.events.validatorSuccess, function (a, b) {
                var c = f.getOptions(b.field, b.validator, "onSuccess");
                c && FormValidation.Helper.call(c, [a, b]);
              }),
              this.onLiveChange(d, "live", function () {
                f._exceedThreshold(a(this)) && f.validateField(a(this));
              }),
              d.trigger(a.Event(this.options.events.fieldInit), {
                bv: this,
                fv: this,
                field: b,
                element: d,
              });
          }
        },
        _isExcluded: function (b) {
          var c = this._namespace,
            d = b.attr("data-" + c + "-excluded"),
            e = b.attr("data-" + c + "-field") || b.attr("name");
          switch (!0) {
            case !!e &&
              this.options.fields &&
              this.options.fields[e] &&
              ("true" === this.options.fields[e].excluded ||
                this.options.fields[e].excluded === !0):
            case "true" === d:
            case "" === d:
              return !0;
            case !!e &&
              this.options.fields &&
              this.options.fields[e] &&
              ("false" === this.options.fields[e].excluded ||
                this.options.fields[e].excluded === !1):
            case "false" === d:
              return !1;
            case !!e &&
              this.options.fields &&
              this.options.fields[e] &&
              "function" == typeof this.options.fields[e].excluded:
              return this.options.fields[e].excluded.call(this, b, this);
            case !!e &&
              this.options.fields &&
              this.options.fields[e] &&
              "string" == typeof this.options.fields[e].excluded:
            case d:
              return FormValidation.Helper.call(
                this.options.fields[e].excluded,
                [b, this]
              );
            default:
              if (this.options.excluded) {
                "string" == typeof this.options.excluded &&
                  (this.options.excluded = a.map(
                    this.options.excluded.split(","),
                    function (b) {
                      return a.trim(b);
                    }
                  ));
                for (var f = this.options.excluded.length, g = 0; f > g; g++)
                  if (
                    ("string" == typeof this.options.excluded[g] &&
                      b.is(this.options.excluded[g])) ||
                    ("function" == typeof this.options.excluded[g] &&
                      this.options.excluded[g].call(this, b, this) === !0)
                  )
                    return !0;
              }
              return !1;
          }
        },
        _getFieldTrigger: function (a) {
          var b = this._namespace,
            c = a.data(b + ".trigger");
          if (c) return c;
          var d = a.attr("type"),
            e = a.attr("data-" + b + "-field"),
            f =
              "radio" === d ||
              "checkbox" === d ||
              "file" === d ||
              "SELECT" === a.get(0).tagName
                ? "change"
                : this._changeEvent;
          return (
            (c = (
              (this.options.fields[e]
                ? this.options.fields[e].trigger
                : null) ||
              this.options.trigger ||
              f
            ).split(" ")),
            a.data(b + ".trigger", c),
            c
          );
        },
        _getMessage: function (a, b) {
          if (
            !(
              this.options.fields[a] &&
              FormValidation.Validator[b] &&
              this.options.fields[a].validators &&
              this.options.fields[a].validators[b]
            )
          )
            return "";
          switch (!0) {
            case !!this.options.fields[a].validators[b].message:
              return this.options.fields[a].validators[b].message;
            case !!this.options.fields[a].message:
              return this.options.fields[a].message;
            case !!FormValidation.I18n[this.options.locale] &&
              !!FormValidation.I18n[this.options.locale][b] &&
              !!FormValidation.I18n[this.options.locale][b]["default"]:
              return FormValidation.I18n[this.options.locale][b]["default"];
            default:
              return this.options.message;
          }
        },
        _getMessageContainer: function (a, b) {
          if (!this.options.err.parent)
            throw new Error("The err.parent option is not defined");
          var c = a.parent();
          if (c.is(b)) return c;
          var d = c.attr("class");
          return d && this.options.err.parent.test(d)
            ? c
            : this._getMessageContainer(c, b);
        },
        _parseAddOnOptions: function () {
          var a = this._namespace,
            b = this.$form.attr("data-" + a + "-addons"),
            c = this.options.addOns || {};
          if (b) {
            b = b.replace(/\s/g, "").split(",");
            for (var d = 0; d < b.length; d++) c[b[d]] || (c[b[d]] = {});
          }
          var e, f, g, h;
          for (e in c)
            if (FormValidation.AddOn[e]) {
              if ((f = FormValidation.AddOn[e].html5Attributes))
                for (g in f)
                  (h = this.$form.attr(
                    "data-" +
                      a +
                      "-addons-" +
                      e.toLowerCase() +
                      "-" +
                      g.toLowerCase()
                  )),
                    h && (c[e][f[g]] = h);
            } else delete c[e];
          return c;
        },
        _parseOptions: function (b) {
          var c,
            d,
            e,
            f,
            g,
            h,
            i,
            j,
            k,
            l = this._namespace,
            m = b.attr("name") || b.attr("data-" + l + "-field"),
            n = {};
          for (d in FormValidation.Validator)
            if (
              ((c = FormValidation.Validator[d]),
              (e = "data-" + l + "-" + d.toLowerCase()),
              (f = b.attr(e) + ""),
              (k =
                "function" == typeof c.enableByHtml5
                  ? c.enableByHtml5(b)
                  : null),
              (k && "false" !== f) ||
                (k !== !0 &&
                  ("" === f || "true" === f || e === f.toLowerCase())))
            ) {
              (c.html5Attributes = a.extend(
                {},
                {
                  message: "message",
                  onerror: "onError",
                  onsuccess: "onSuccess",
                  transformer: "transformer",
                },
                c.html5Attributes
              )),
                (n[d] = a.extend({}, k === !0 ? {} : k, n[d]));
              for (j in c.html5Attributes)
                (g = c.html5Attributes[j]),
                  (h = "data-" + l + "-" + d.toLowerCase() + "-" + j),
                  (i = b.attr(h)),
                  i &&
                    ("true" === i || h === i.toLowerCase()
                      ? (i = !0)
                      : "false" === i && (i = !1),
                    (n[d][g] = i));
            }
          var o = {
              autoFocus: b.attr("data-" + l + "-autofocus"),
              err:
                b.attr("data-" + l + "-err-container") ||
                b.attr("data-" + l + "-container"),
              excluded: b.attr("data-" + l + "-excluded"),
              icon:
                b.attr("data-" + l + "-icon") ||
                b.attr("data-" + l + "-feedbackicons") ||
                (this.options.fields && this.options.fields[m]
                  ? this.options.fields[m].feedbackIcons
                  : null),
              message: b.attr("data-" + l + "-message"),
              onError: b.attr("data-" + l + "-onerror"),
              onStatus: b.attr("data-" + l + "-onstatus"),
              onSuccess: b.attr("data-" + l + "-onsuccess"),
              row:
                b.attr("data-" + l + "-row") ||
                b.attr("data-" + l + "-group") ||
                (this.options.fields && this.options.fields[m]
                  ? this.options.fields[m].group
                  : null),
              selector: b.attr("data-" + l + "-selector"),
              threshold: b.attr("data-" + l + "-threshold"),
              transformer: b.attr("data-" + l + "-transformer"),
              trigger: b.attr("data-" + l + "-trigger"),
              verbose: b.attr("data-" + l + "-verbose"),
              validators: n,
            },
            p = a.isEmptyObject(o),
            q = a.isEmptyObject(n);
          return !q || (!p && this.options.fields && this.options.fields[m])
            ? ((o.validators = n), o)
            : null;
        },
        _submit: function () {
          var b = this.isValid();
          if (null !== b) {
            var c = b
                ? this.options.events.formSuccess
                : this.options.events.formError,
              d = a.Event(c);
            this.$form.trigger(d),
              this.$submitButton && (b ? this._onSuccess(d) : this._onError(d));
          }
        },
        _onError: function (b) {
          if (!b.isDefaultPrevented()) {
            if ("submitted" === this.options.live) {
              this.options.live = "enabled";
              var c = this;
              for (var d in this.options.fields)
                !(function (b) {
                  var d = c.getFieldElements(b);
                  d.length &&
                    c.onLiveChange(d, "live", function () {
                      c._exceedThreshold(a(this)) && c.validateField(a(this));
                    });
                })(d);
            }
            for (
              var e = this._namespace, f = 0;
              f < this.$invalidFields.length;
              f++
            ) {
              var g = this.$invalidFields.eq(f),
                h = this.isOptionEnabled(
                  g.attr("data-" + e + "-field"),
                  "autoFocus"
                );
              if (h) {
                g.focus();
                break;
              }
            }
          }
        },
        _onFieldValidated: function (b, c) {
          var d = this._namespace,
            e = b.attr("data-" + d + "-field"),
            f = this.options.fields[e].validators,
            g = {},
            h = 0,
            i = {
              bv: this,
              fv: this,
              field: e,
              element: b,
              validator: c,
              result: b.data(d + ".response." + c),
            };
          if (c)
            switch (b.data(d + ".result." + c)) {
              case this.STATUS_INVALID:
                b.trigger(a.Event(this.options.events.validatorError), i);
                break;
              case this.STATUS_VALID:
                b.trigger(a.Event(this.options.events.validatorSuccess), i);
                break;
              case this.STATUS_IGNORED:
                b.trigger(a.Event(this.options.events.validatorIgnored), i);
            }
          (g[this.STATUS_NOT_VALIDATED] = 0),
            (g[this.STATUS_VALIDATING] = 0),
            (g[this.STATUS_INVALID] = 0),
            (g[this.STATUS_VALID] = 0),
            (g[this.STATUS_IGNORED] = 0);
          for (var j in f)
            if (f[j].enabled !== !1) {
              h++;
              var k = b.data(d + ".result." + j);
              k && g[k]++;
            }
          g[this.STATUS_VALID] + g[this.STATUS_IGNORED] === h
            ? ((this.$invalidFields = this.$invalidFields.not(b)),
              b.trigger(a.Event(this.options.events.fieldSuccess), i))
            : (0 === g[this.STATUS_NOT_VALIDATED] ||
                !this.isOptionEnabled(e, "verbose")) &&
              0 === g[this.STATUS_VALIDATING] &&
              g[this.STATUS_INVALID] > 0 &&
              ((this.$invalidFields = this.$invalidFields.add(b)),
              b.trigger(a.Event(this.options.events.fieldError), i));
        },
        _onSuccess: function (a) {
          a.isDefaultPrevented() ||
            this.disableSubmitButtons(!0).defaultSubmit();
        },
        _fixIcon: function () {},
        _createTooltip: function () {},
        _destroyTooltip: function () {},
        _hideTooltip: function () {},
        _showTooltip: function () {},
        defaultSubmit: function () {
          var b = this._namespace;
          this.$submitButton &&
            a("<input/>")
              .attr({ type: "hidden", name: this.$submitButton.attr("name") })
              .attr("data-" + b + "-submit-hidden", "")
              .val(this.$submitButton.val())
              .appendTo(this.$form),
            this.$form.off("submit." + b).submit();
        },
        disableSubmitButtons: function (a) {
          return (
            a
              ? "disabled" !== this.options.live &&
                this.$form
                  .find(this.options.button.selector)
                  .attr("disabled", "disabled")
                  .addClass(this.options.button.disabled)
              : this.$form
                  .find(this.options.button.selector)
                  .removeAttr("disabled")
                  .removeClass(this.options.button.disabled),
            this
          );
        },
        getFieldElements: function (b) {
          if (!this._cacheFields[b])
            if (this.options.fields[b] && this.options.fields[b].selector) {
              var c = this.$form.find(this.options.fields[b].selector);
              this._cacheFields[b] = c.length
                ? c
                : a(this.options.fields[b].selector);
            } else this._cacheFields[b] = this.$form.find('[name="' + b + '"]');
          return this._cacheFields[b];
        },
        getFieldValue: function (a, b) {
          var c,
            d = this._namespace;
          if ("string" == typeof a) {
            if (((c = this.getFieldElements(a)), 0 === c.length)) return null;
          } else (c = a), (a = c.attr("data-" + d + "-field"));
          if (!a || !this.options.fields[a]) return c.val();
          var e =
            (this.options.fields[a].validators &&
            this.options.fields[a].validators[b]
              ? this.options.fields[a].validators[b].transformer
              : null) || this.options.fields[a].transformer;
          return e ? FormValidation.Helper.call(e, [c, b, this]) : c.val();
        },
        getNamespace: function () {
          return this._namespace;
        },
        getOptions: function (a, b, c) {
          var d = this._namespace;
          if (!a) return c ? this.options[c] : this.options;
          if (
            ("object" == typeof a && (a = a.attr("data-" + d + "-field")),
            !this.options.fields[a])
          )
            return null;
          var e = this.options.fields[a];
          return b
            ? e.validators && e.validators[b]
              ? c
                ? e.validators[b][c]
                : e.validators[b]
              : null
            : c
            ? e[c]
            : e;
        },
        getStatus: function (a, b) {
          var c = this._namespace;
          switch (typeof a) {
            case "object":
              return a.data(c + ".result." + b);
            case "string":
            default:
              return this.getFieldElements(a)
                .eq(0)
                .data(c + ".result." + b);
          }
        },
        isOptionEnabled: function (a, b) {
          return !this.options.fields[a] ||
            ("true" !== this.options.fields[a][b] &&
              this.options.fields[a][b] !== !0)
            ? !this.options.fields[a] ||
              ("false" !== this.options.fields[a][b] &&
                this.options.fields[a][b] !== !1)
              ? "true" === this.options[b] || this.options[b] === !0
              : !1
            : !0;
        },
        isValid: function () {
          for (var a in this.options.fields) {
            var b = this.isValidField(a);
            if (null === b) return null;
            if (b === !1) return !1;
          }
          return !0;
        },
        isValidContainer: function (b) {
          var c = this,
            d = this._namespace,
            e = [],
            f = "string" == typeof b ? a(b) : b;
          if (0 === f.length) return !0;
          f.find("[data-" + d + "-field]").each(function () {
            var b = a(this);
            c._isExcluded(b) || e.push(b);
          });
          for (var g = e.length, h = 0; g > h; h++) {
            var i = e[h],
              j = i.attr("data-" + d + "-field"),
              k = i
                .data(d + ".messages")
                .find(
                  "." +
                    this.options.err.clazz.split(" ").join(".") +
                    "[data-" +
                    d +
                    "-validator][data-" +
                    d +
                    '-for="' +
                    j +
                    '"]'
                );
            if (
              k.filter("[data-" + d + '-result="' + this.STATUS_INVALID + '"]')
                .length > 0
            )
              return !1;
            if (
              k.filter(
                "[data-" + d + '-result="' + this.STATUS_NOT_VALIDATED + '"]'
              ).length > 0 ||
              k.filter(
                "[data-" + d + '-result="' + this.STATUS_VALIDATING + '"]'
              ).length > 0
            )
              return null;
          }
          return !0;
        },
        isValidField: function (b) {
          var c = this._namespace,
            d = a([]);
          switch (typeof b) {
            case "object":
              (d = b), (b = b.attr("data-" + c + "-field"));
              break;
            case "string":
              d = this.getFieldElements(b);
          }
          if (
            0 === d.length ||
            !this.options.fields[b] ||
            this.options.fields[b].enabled === !1
          )
            return !0;
          for (
            var e,
              f,
              g,
              h = d.attr("type"),
              i = "radio" === h || "checkbox" === h ? 1 : d.length,
              j = 0;
            i > j;
            j++
          )
            if (((e = d.eq(j)), !this._isExcluded(e)))
              for (f in this.options.fields[b].validators)
                if (this.options.fields[b].validators[f].enabled !== !1) {
                  if (
                    ((g = e.data(c + ".result." + f)),
                    g === this.STATUS_VALIDATING ||
                      g === this.STATUS_NOT_VALIDATED)
                  )
                    return null;
                  if (g === this.STATUS_INVALID) return !1;
                }
          return !0;
        },
        offLiveChange: function (b, c) {
          if (null === b || 0 === b.length) return this;
          var d = this._namespace,
            e = this._getFieldTrigger(b.eq(0)),
            f = a
              .map(e, function (a) {
                return a + "." + c + "." + d;
              })
              .join(" ");
          return b.off(f), this;
        },
        onLiveChange: function (b, c, d) {
          if (null === b || 0 === b.length) return this;
          var e = this._namespace,
            f = this._getFieldTrigger(b.eq(0)),
            g = a
              .map(f, function (a) {
                return a + "." + c + "." + e;
              })
              .join(" ");
          switch (this.options.live) {
            case "submitted":
              break;
            case "disabled":
              b.off(g);
              break;
            case "enabled":
            default:
              b.off(g).on(g, function () {
                d.apply(this, arguments);
              });
          }
          return this;
        },
        updateMessage: function (b, c, d) {
          var e = this,
            f = this._namespace,
            g = a([]);
          switch (typeof b) {
            case "object":
              (g = b), (b = b.attr("data-" + f + "-field"));
              break;
            case "string":
              g = this.getFieldElements(b);
          }
          return (
            g.each(function () {
              a(this)
                .data(f + ".messages")
                .find(
                  "." +
                    e.options.err.clazz +
                    "[data-" +
                    f +
                    '-validator="' +
                    c +
                    '"][data-' +
                    f +
                    '-for="' +
                    b +
                    '"]'
                )
                .html(d);
            }),
            this
          );
        },
        updateStatus: function (b, c, d) {
          var e = this._namespace,
            f = a([]);
          switch (typeof b) {
            case "object":
              (f = b), (b = b.attr("data-" + e + "-field"));
              break;
            case "string":
              f = this.getFieldElements(b);
          }
          if (!b || !this.options.fields[b]) return this;
          c === this.STATUS_NOT_VALIDATED && (this._submitIfValid = !1);
          for (
            var g = this,
              h = f.attr("type"),
              i = this.options.fields[b].row || this.options.row.selector,
              j = "radio" === h || "checkbox" === h ? 1 : f.length,
              k = 0;
            j > k;
            k++
          ) {
            var l = f.eq(k);
            if (!this._isExcluded(l)) {
              var m,
                n,
                o = l.closest(i),
                p = l.data(e + ".messages"),
                q = p.find(
                  "." +
                    this.options.err.clazz.split(" ").join(".") +
                    "[data-" +
                    e +
                    "-validator][data-" +
                    e +
                    '-for="' +
                    b +
                    '"]'
                ),
                r = d ? q.filter("[data-" + e + '-validator="' + d + '"]') : q,
                s = l.data(e + ".icon"),
                t =
                  "function" ==
                  typeof (
                    this.options.fields[b].container ||
                    this.options.fields[b].err ||
                    this.options.err.container
                  )
                    ? (
                        this.options.fields[b].container ||
                        this.options.fields[b].err ||
                        this.options.err.container
                      ).call(this, l, this)
                    : this.options.fields[b].container ||
                      this.options.fields[b].err ||
                      this.options.err.container,
                u = null;
              if (d) l.data(e + ".result." + d, c);
              else
                for (var v in this.options.fields[b].validators)
                  l.data(e + ".result." + v, c);
              switch ((r.attr("data-" + e + "-result", c), c)) {
                case this.STATUS_VALIDATING:
                  (u = null),
                    this.disableSubmitButtons(!0),
                    l
                      .removeClass(this.options.control.valid)
                      .removeClass(this.options.control.invalid),
                    o
                      .removeClass(this.options.row.valid)
                      .removeClass(this.options.row.invalid),
                    s &&
                      s
                        .removeClass(this.options.icon.valid)
                        .removeClass(this.options.icon.invalid)
                        .addClass(this.options.icon.validating)
                        .show();
                  break;
                case this.STATUS_INVALID:
                  (u = !1),
                    this.disableSubmitButtons(!0),
                    l
                      .removeClass(this.options.control.valid)
                      .addClass(this.options.control.invalid),
                    o
                      .removeClass(this.options.row.valid)
                      .addClass(this.options.row.invalid),
                    s &&
                      s
                        .removeClass(this.options.icon.valid)
                        .removeClass(this.options.icon.validating)
                        .addClass(this.options.icon.invalid)
                        .show();
                  break;
                case this.STATUS_VALID:
                case this.STATUS_IGNORED:
                  (m =
                    q.filter(
                      "[data-" + e + '-result="' + this.STATUS_VALIDATING + '"]'
                    ).length > 0),
                    (n =
                      q.filter(
                        "[data-" +
                          e +
                          '-result="' +
                          this.STATUS_NOT_VALIDATED +
                          '"]'
                      ).length > 0),
                    (u =
                      m || n
                        ? null
                        : q.filter(
                            "[data-" +
                              e +
                              '-result="' +
                              this.STATUS_VALID +
                              '"]'
                          ).length +
                            q.filter(
                              "[data-" +
                                e +
                                '-result="' +
                                this.STATUS_IGNORED +
                                '"]'
                            ).length ===
                          q.length),
                    l
                      .removeClass(this.options.control.valid)
                      .removeClass(this.options.control.invalid),
                    u === !0
                      ? (this.disableSubmitButtons(this.isValid() === !1),
                        c === this.STATUS_VALID &&
                          l.addClass(this.options.control.valid))
                      : u === !1 &&
                        (this.disableSubmitButtons(!0),
                        c === this.STATUS_VALID &&
                          l.addClass(this.options.control.invalid)),
                    s &&
                      (s
                        .removeClass(this.options.icon.invalid)
                        .removeClass(this.options.icon.validating)
                        .removeClass(this.options.icon.valid),
                      c === this.STATUS_VALID &&
                        s
                          .addClass(
                            null === u
                              ? ""
                              : u
                              ? this.options.icon.valid
                              : m
                              ? this.options.icon.validating
                              : this.options.icon.invalid
                          )
                          .show());
                  var w = this.isValidContainer(o);
                  null !== w &&
                    (o
                      .removeClass(this.options.row.valid)
                      .removeClass(this.options.row.invalid),
                    (c === this.STATUS_VALID || q.length > 1) &&
                      o.addClass(
                        w ? this.options.row.valid : this.options.row.invalid
                      ));
                  break;
                case this.STATUS_NOT_VALIDATED:
                default:
                  (u = null),
                    this.disableSubmitButtons(!1),
                    l
                      .removeClass(this.options.control.valid)
                      .removeClass(this.options.control.invalid),
                    o
                      .removeClass(this.options.row.valid)
                      .removeClass(this.options.row.invalid),
                    s &&
                      s
                        .removeClass(this.options.icon.valid)
                        .removeClass(this.options.icon.invalid)
                        .removeClass(this.options.icon.validating)
                        .hide();
              }
              !s || ("tooltip" !== t && "popover" !== t)
                ? c === this.STATUS_INVALID
                  ? r.show()
                  : r.hide()
                : u === !1
                ? this._createTooltip(
                    l,
                    q
                      .filter(
                        "[data-" + e + '-result="' + g.STATUS_INVALID + '"]'
                      )
                      .eq(0)
                      .html(),
                    t
                  )
                : this._destroyTooltip(l, t),
                l.trigger(a.Event(this.options.events.fieldStatus), {
                  bv: this,
                  fv: this,
                  field: b,
                  element: l,
                  status: c,
                }),
                this._onFieldValidated(l, d);
            }
          }
          return this;
        },
        validate: function () {
          if (a.isEmptyObject(this.options.fields)) return this._submit(), this;
          this.disableSubmitButtons(!0), (this._submitIfValid = !1);
          for (var b in this.options.fields) this.validateField(b);
          return this._submit(), (this._submitIfValid = !0), this;
        },
        validateField: function (b) {
          var c = this._namespace,
            d = a([]);
          switch (typeof b) {
            case "object":
              (d = b), (b = b.attr("data-" + c + "-field"));
              break;
            case "string":
              d = this.getFieldElements(b);
          }
          if (
            0 === d.length ||
            !this.options.fields[b] ||
            this.options.fields[b].enabled === !1
          )
            return this;
          for (
            var e,
              f,
              g = this,
              h = d.attr("type"),
              i = "radio" === h || "checkbox" === h ? 1 : d.length,
              j = "radio" === h || "checkbox" === h,
              k = this.options.fields[b].validators,
              l = this.isOptionEnabled(b, "verbose"),
              m = 0;
            i > m;
            m++
          ) {
            var n = d.eq(m);
            if (!this._isExcluded(n)) {
              var o = !1;
              for (e in k) {
                if (
                  (n.data(c + ".dfs." + e) && n.data(c + ".dfs." + e).reject(),
                  o)
                )
                  break;
                var p = n.data(c + ".result." + e);
                if (p !== this.STATUS_VALID && p !== this.STATUS_INVALID)
                  if (k[e].enabled !== !1)
                    if (
                      (n.data(c + ".result." + e, this.STATUS_VALIDATING),
                      (f = FormValidation.Validator[e].validate(this, n, k[e])),
                      "object" == typeof f && f.resolve)
                    )
                      this.updateStatus(j ? b : n, this.STATUS_VALIDATING, e),
                        n.data(c + ".dfs." + e, f),
                        f.done(function (a, b, d) {
                          a
                            .removeData(c + ".dfs." + b)
                            .data(c + ".response." + b, d),
                            d.message && g.updateMessage(a, b, d.message),
                            g.updateStatus(
                              j ? a.attr("data-" + c + "-field") : a,
                              d.valid === !0
                                ? g.STATUS_VALID
                                : d.valid === !1
                                ? g.STATUS_INVALID
                                : g.STATUS_IGNORED,
                              b
                            ),
                            d.valid && g._submitIfValid === !0
                              ? g._submit()
                              : d.valid !== !1 || l || (o = !0);
                        });
                    else if ("object" == typeof f && void 0 !== f.valid) {
                      if (
                        (n.data(c + ".response." + e, f),
                        f.message &&
                          this.updateMessage(j ? b : n, e, f.message),
                        this.updateStatus(
                          j ? b : n,
                          f.valid === !0
                            ? this.STATUS_VALID
                            : f.valid === !1
                            ? this.STATUS_INVALID
                            : this.STATUS_IGNORED,
                          e
                        ),
                        f.valid === !1 && !l)
                      )
                        break;
                    } else if ("boolean" == typeof f) {
                      if (
                        (n.data(c + ".response." + e, f),
                        this.updateStatus(
                          j ? b : n,
                          f ? this.STATUS_VALID : this.STATUS_INVALID,
                          e
                        ),
                        !f && !l)
                      )
                        break;
                    } else
                      (null === f || void 0 === f) &&
                        (n.data(c + ".response." + e, f),
                        this.updateStatus(j ? b : n, this.STATUS_IGNORED, e));
                  else this.updateStatus(j ? b : n, this.STATUS_VALID, e);
                else this._onFieldValidated(n, e);
              }
            }
          }
          return this;
        },
        addField: function (b, c) {
          var d = this._namespace,
            e = a([]);
          switch (typeof b) {
            case "object":
              (e = b), (b = b.attr("data-" + d + "-field") || b.attr("name"));
              break;
            case "string":
              delete this._cacheFields[b], (e = this.getFieldElements(b));
          }
          e.attr("data-" + d + "-field", b);
          for (
            var f = e.attr("type"),
              g = "radio" === f || "checkbox" === f ? 1 : e.length,
              h = 0;
            g > h;
            h++
          ) {
            var i = e.eq(h),
              j = this._parseOptions(i);
            (j = null === j ? c : a.extend(!0, j, c)),
              (this.options.fields[b] = a.extend(
                !0,
                this.options.fields[b],
                j
              )),
              (this._cacheFields[b] = this._cacheFields[b]
                ? this._cacheFields[b].add(i)
                : i),
              this._initField("checkbox" === f || "radio" === f ? b : i);
          }
          return (
            this.disableSubmitButtons(!1),
            this.$form.trigger(a.Event(this.options.events.fieldAdded), {
              field: b,
              element: e,
              options: this.options.fields[b],
            }),
            this
          );
        },
        destroy: function () {
          var a,
            b,
            c,
            d,
            e,
            f,
            g,
            h = this._namespace;
          for (b in this.options.fields)
            for (c = this.getFieldElements(b), a = 0; a < c.length; a++) {
              d = c.eq(a);
              for (e in this.options.fields[b].validators)
                d.data(h + ".dfs." + e) && d.data(h + ".dfs." + e).reject(),
                  d
                    .removeData(h + ".result." + e)
                    .removeData(h + ".response." + e)
                    .removeData(h + ".dfs." + e),
                  "function" == typeof FormValidation.Validator[e].destroy &&
                    FormValidation.Validator[e].destroy(
                      this,
                      d,
                      this.options.fields[b].validators[e]
                    );
            }
          for (b in this.options.fields)
            for (
              c = this.getFieldElements(b),
                g = this.options.fields[b].row || this.options.row.selector,
                a = 0;
              a < c.length;
              a++
            ) {
              (d = c.eq(a)),
                d
                  .data(h + ".messages")
                  .find(
                    "." +
                      this.options.err.clazz.split(" ").join(".") +
                      "[data-" +
                      h +
                      "-validator][data-" +
                      h +
                      '-for="' +
                      b +
                      '"]'
                  )
                  .remove()
                  .end()
                  .end()
                  .removeData(h + ".messages")
                  .closest(g)
                  .removeClass(this.options.row.valid)
                  .removeClass(this.options.row.invalid)
                  .removeClass(this.options.row.feedback)
                  .end()
                  .off("." + h)
                  .removeAttr("data-" + h + "-field");
              var i =
                "function" ==
                typeof (
                  this.options.fields[b].container ||
                  this.options.fields[b].err ||
                  this.options.err.container
                )
                  ? (
                      this.options.fields[b].container ||
                      this.options.fields[b].err ||
                      this.options.err.container
                    ).call(this, d, this)
                  : this.options.fields[b].container ||
                    this.options.fields[b].err ||
                    this.options.err.container;
              ("tooltip" === i || "popover" === i) &&
                this._destroyTooltip(d, i),
                (f = d.data(h + ".icon")),
                f && f.remove(),
                d.removeData(h + ".icon").removeData(h + ".trigger");
            }
          for (var j in this.options.addOns)
            "function" == typeof FormValidation.AddOn[j].destroy &&
              FormValidation.AddOn[j].destroy(this, this.options.addOns[j]);
          this.disableSubmitButtons(!1),
            this.$hiddenButton.remove(),
            this.$form
              .removeClass(this.options.elementClass)
              .off("." + h)
              .removeData("bootstrapValidator")
              .removeData("formValidation")
              .find("[data-" + h + "-submit-hidden]")
              .remove()
              .end()
              .find('[type="submit"]')
              .off("click." + h);
        },
        enableFieldValidators: function (a, b, c) {
          var d = this.options.fields[a].validators;
          if (c && d && d[c] && d[c].enabled !== b)
            (this.options.fields[a].validators[c].enabled = b),
              this.updateStatus(a, this.STATUS_NOT_VALIDATED, c);
          else if (!c && this.options.fields[a].enabled !== b) {
            this.options.fields[a].enabled = b;
            for (var e in d) this.enableFieldValidators(a, b, e);
          }
          return this;
        },
        getDynamicOption: function (a, b) {
          var c = "string" == typeof a ? this.getFieldElements(a) : a,
            d = c.val();
          if ("function" == typeof b)
            return FormValidation.Helper.call(b, [d, this, c]);
          if ("string" == typeof b) {
            var e = this.getFieldElements(b);
            return e.length
              ? e.val()
              : FormValidation.Helper.call(b, [d, this, c]) || b;
          }
          return null;
        },
        getForm: function () {
          return this.$form;
        },
        getInvalidFields: function () {
          return this.$invalidFields;
        },
        getLocale: function () {
          return this.options.locale;
        },
        getMessages: function (b, c) {
          var d = this,
            e = this._namespace,
            f = [],
            g = a([]);
          switch (!0) {
            case b && "object" == typeof b:
              g = b;
              break;
            case b && "string" == typeof b:
              var h = this.getFieldElements(b);
              if (h.length > 0) {
                var i = h.attr("type");
                g = "radio" === i || "checkbox" === i ? h.eq(0) : h;
              }
              break;
            default:
              g = this.$invalidFields;
          }
          var j = c ? "[data-" + e + '-validator="' + c + '"]' : "";
          return (
            g.each(function () {
              f = f.concat(
                a(this)
                  .data(e + ".messages")
                  .find(
                    "." +
                      d.options.err.clazz +
                      "[data-" +
                      e +
                      '-for="' +
                      a(this).attr("data-" + e + "-field") +
                      '"][data-' +
                      e +
                      '-result="' +
                      d.STATUS_INVALID +
                      '"]' +
                      j
                  )
                  .map(function () {
                    var b = a(this).attr("data-" + e + "-validator"),
                      c = a(this).attr("data-" + e + "-for");
                    return d.options.fields[c].validators[b].enabled === !1
                      ? ""
                      : a(this).html();
                  })
                  .get()
              );
            }),
            f
          );
        },
        getSubmitButton: function () {
          return this.$submitButton;
        },
        removeField: function (b) {
          var c = this._namespace,
            d = a([]);
          switch (typeof b) {
            case "object":
              (d = b),
                (b = b.attr("data-" + c + "-field") || b.attr("name")),
                d.attr("data-" + c + "-field", b);
              break;
            case "string":
              d = this.getFieldElements(b);
          }
          if (0 === d.length) return this;
          for (
            var e = d.attr("type"),
              f = "radio" === e || "checkbox" === e ? 1 : d.length,
              g = 0;
            f > g;
            g++
          ) {
            var h = d.eq(g);
            (this.$invalidFields = this.$invalidFields.not(h)),
              (this._cacheFields[b] = this._cacheFields[b].not(h));
          }
          return (
            (this._cacheFields[b] && 0 !== this._cacheFields[b].length) ||
              delete this.options.fields[b],
            ("checkbox" === e || "radio" === e) && this._initField(b),
            this.disableSubmitButtons(!1),
            this.$form.trigger(a.Event(this.options.events.fieldRemoved), {
              field: b,
              element: d,
            }),
            this
          );
        },
        resetField: function (b, c) {
          var d = this._namespace,
            e = a([]);
          switch (typeof b) {
            case "object":
              (e = b), (b = b.attr("data-" + d + "-field"));
              break;
            case "string":
              e = this.getFieldElements(b);
          }
          var f = e.length;
          if (this.options.fields[b])
            for (var g = 0; f > g; g++)
              for (var h in this.options.fields[b].validators)
                e.eq(g).removeData(d + ".dfs." + h);
          if (c) {
            var i = e.attr("type");
            "radio" === i || "checkbox" === i
              ? e.prop("checked", !1).removeAttr("selected")
              : e.val("");
          }
          return this.updateStatus(b, this.STATUS_NOT_VALIDATED), this;
        },
        resetForm: function (b) {
          for (var c in this.options.fields) this.resetField(c, b);
          return (
            (this.$invalidFields = a([])),
            (this.$submitButton = null),
            this.disableSubmitButtons(!1),
            this
          );
        },
        revalidateField: function (a) {
          return (
            this.updateStatus(a, this.STATUS_NOT_VALIDATED).validateField(a),
            this
          );
        },
        setLocale: function (b) {
          return (
            (this.options.locale = b),
            this.$form.trigger(a.Event(this.options.events.localeChanged), {
              locale: b,
              bv: this,
              fv: this,
            }),
            this
          );
        },
        updateOption: function (a, b, c, d) {
          var e = this._namespace;
          return (
            "object" == typeof a && (a = a.attr("data-" + e + "-field")),
            this.options.fields[a] &&
              this.options.fields[a].validators[b] &&
              ((this.options.fields[a].validators[b][c] = d),
              this.updateStatus(a, this.STATUS_NOT_VALIDATED, b)),
            this
          );
        },
        validateContainer: function (b) {
          var c = this,
            d = this._namespace,
            e = [],
            f = "string" == typeof b ? a(b) : b;
          if (0 === f.length) return this;
          f.find("[data-" + d + "-field]").each(function () {
            var b = a(this);
            c._isExcluded(b) || e.push(b);
          });
          for (var g = e.length, h = 0; g > h; h++) this.validateField(e[h]);
          return this;
        },
      }),
      (a.fn.formValidation = function (b) {
        var c = arguments;
        return this.each(function () {
          var d = a(this),
            e = d.data("formValidation"),
            f = "object" == typeof b && b;
          if (!e) {
            var g = (
                f.framework ||
                d.attr("data-fv-framework") ||
                "bootstrap"
              ).toLowerCase(),
              h = g.substr(0, 1).toUpperCase() + g.substr(1);
            if ("undefined" == typeof FormValidation.Framework[h])
              throw new Error(
                "The class FormValidation.Framework." +
                  h +
                  " is not implemented"
              );
            (e = new FormValidation.Framework[h](this, f)),
              d.addClass("fv-form-" + g).data("formValidation", e);
          }
          "string" == typeof b &&
            e[b].apply(e, Array.prototype.slice.call(c, 1));
        });
      }),
      (a.fn.formValidation.Constructor = FormValidation.Base),
      (a.fn.formValidation.DEFAULT_OPTIONS = {
        autoFocus: !0,
        declarative: !0,
        elementClass: "fv-form",
        events: {
          formInit: "init.form.fv",
          formError: "err.form.fv",
          formSuccess: "success.form.fv",
          fieldAdded: "added.field.fv",
          fieldRemoved: "removed.field.fv",
          fieldInit: "init.field.fv",
          fieldError: "err.field.fv",
          fieldSuccess: "success.field.fv",
          fieldStatus: "status.field.fv",
          localeChanged: "changed.locale.fv",
          validatorError: "err.validator.fv",
          validatorSuccess: "success.validator.fv",
          validatorIgnored: "ignored.validator.fv",
        },
        excluded: [":disabled", ":hidden", ":not(:visible)"],
        fields: null,
        live: "enabled",
        locale: "en_US",
        message: "This value is not valid",
        threshold: null,
        verbose: !0,
        button: { selector: '[type="submit"]', disabled: "" },
        control: { valid: "", invalid: "" },
        err: { clazz: "", container: null, parent: null },
        icon: { valid: null, invalid: null, validating: null, feedback: "" },
        row: { selector: null, valid: "", invalid: "", feedback: "" },
      });
  })(jQuery),
  (function (a) {
    FormValidation.Helper = {
      call: function (a, b) {
        if ("function" == typeof a) return a.apply(this, b);
        if ("string" == typeof a) {
          "()" === a.substring(a.length - 2) &&
            (a = a.substring(0, a.length - 2));
          for (
            var c = a.split("."), d = c.pop(), e = window, f = 0;
            f < c.length;
            f++
          )
            e = e[c[f]];
          return "undefined" == typeof e[d] ? null : e[d].apply(this, b);
        }
      },
      date: function (a, b, c, d) {
        if (isNaN(a) || isNaN(b) || isNaN(c)) return !1;
        if (c.length > 2 || b.length > 2 || a.length > 4) return !1;
        if (
          ((c = parseInt(c, 10)),
          (b = parseInt(b, 10)),
          (a = parseInt(a, 10)),
          1e3 > a || a > 9999 || 0 >= b || b > 12)
        )
          return !1;
        var e = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        if (
          ((a % 400 === 0 || (a % 100 !== 0 && a % 4 === 0)) && (e[1] = 29),
          0 >= c || c > e[b - 1])
        )
          return !1;
        if (d === !0) {
          var f = new Date(),
            g = f.getFullYear(),
            h = f.getMonth(),
            i = f.getDate();
          return (
            g > a || (a === g && h > b - 1) || (a === g && b - 1 === h && i > c)
          );
        }
        return !0;
      },
      format: function (b, c) {
        a.isArray(c) || (c = [c]);
        for (var d in c) b = b.replace("%s", c[d]);
        return b;
      },
      luhn: function (a) {
        for (
          var b = a.length,
            c = 0,
            d = [
              [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
              [0, 2, 4, 6, 8, 1, 3, 5, 7, 9],
            ],
            e = 0;
          b--;

        )
          (e += d[c][parseInt(a.charAt(b), 10)]), (c ^= 1);
        return e % 10 === 0 && e > 0;
      },
      mod11And10: function (a) {
        for (var b = 5, c = a.length, d = 0; c > d; d++)
          b = (((2 * (b || 10)) % 11) + parseInt(a.charAt(d), 10)) % 10;
        return 1 === b;
      },
      mod37And36: function (a, b) {
        b = b || "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        for (
          var c = b.length, d = a.length, e = Math.floor(c / 2), f = 0;
          d > f;
          f++
        )
          e = (((2 * (e || c)) % (c + 1)) + b.indexOf(a.charAt(f))) % c;
        return 1 === e;
      },
    };
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { base64: { default: "Please enter a valid base 64 encoded" } },
    })),
      (FormValidation.Validator.base64 = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "base64");
          return "" === c
            ? !0
            : /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(
                c
              );
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        between: {
          default: "Please enter a value between %s and %s",
          notInclusive: "Please enter a value between %s and %s strictly",
        },
      },
    })),
      (FormValidation.Validator.between = {
        html5Attributes: {
          message: "message",
          min: "min",
          max: "max",
          inclusive: "inclusive",
        },
        enableByHtml5: function (a) {
          return "range" === a.attr("type")
            ? { min: a.attr("min"), max: a.attr("max") }
            : !1;
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "between");
          if ("" === e) return !0;
          if (((e = this._format(e)), !a.isNumeric(e))) return !1;
          var f = b.getLocale(),
            g = a.isNumeric(d.min) ? d.min : b.getDynamicOption(c, d.min),
            h = a.isNumeric(d.max) ? d.max : b.getDynamicOption(c, d.max),
            i = this._format(g),
            j = this._format(h);
          return (
            (e = parseFloat(e)),
            d.inclusive === !0 || void 0 === d.inclusive
              ? {
                  valid: e >= i && j >= e,
                  message: FormValidation.Helper.format(
                    d.message || FormValidation.I18n[f].between["default"],
                    [g, h]
                  ),
                }
              : {
                  valid: e > i && j > e,
                  message: FormValidation.Helper.format(
                    d.message || FormValidation.I18n[f].between.notInclusive,
                    [g, h]
                  ),
                }
          );
        },
        _format: function (a) {
          return (a + "").replace(",", ".");
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { bic: { default: "Please enter a valid BIC number" } },
    })),
      (FormValidation.Validator.bic = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "bic");
          return "" === c
            ? !0
            : /^[a-zA-Z]{6}[a-zA-Z0-9]{2}([a-zA-Z0-9]{3})?$/.test(c);
        },
      });
  })(jQuery),
  (function () {
    FormValidation.Validator.blank = {
      validate: function () {
        return !0;
      },
    };
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { callback: { default: "Please enter a valid value" } },
    })),
      (FormValidation.Validator.callback = {
        html5Attributes: { message: "message", callback: "callback" },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "callback"),
            f = new a.Deferred(),
            g = { valid: !0 };
          if (d.callback) {
            var h = FormValidation.Helper.call(d.callback, [e, b, c]);
            g = "boolean" == typeof h || null === h ? { valid: h } : h;
          }
          return f.resolve(c, "callback", g), f;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        choice: {
          default: "Please enter a valid value",
          less: "Please choose %s options at minimum",
          more: "Please choose %s options at maximum",
          between: "Please choose %s - %s options",
        },
      },
    })),
      (FormValidation.Validator.choice = {
        html5Attributes: { message: "message", min: "min", max: "max" },
        validate: function (b, c, d) {
          var e = b.getLocale(),
            f = b.getNamespace(),
            g = c.is("select")
              ? b
                  .getFieldElements(c.attr("data-" + f + "-field"))
                  .find("option")
                  .filter(":selected").length
              : b
                  .getFieldElements(c.attr("data-" + f + "-field"))
                  .filter(":checked").length,
            h = d.min
              ? a.isNumeric(d.min)
                ? d.min
                : b.getDynamicOption(c, d.min)
              : null,
            i = d.max
              ? a.isNumeric(d.max)
                ? d.max
                : b.getDynamicOption(c, d.max)
              : null,
            j = !0,
            k = d.message || FormValidation.I18n[e].choice["default"];
          switch (
            (((h && g < parseInt(h, 10)) || (i && g > parseInt(i, 10))) &&
              (j = !1),
            !0)
          ) {
            case !!h && !!i:
              k = FormValidation.Helper.format(
                d.message || FormValidation.I18n[e].choice.between,
                [parseInt(h, 10), parseInt(i, 10)]
              );
              break;
            case !!h:
              k = FormValidation.Helper.format(
                d.message || FormValidation.I18n[e].choice.less,
                parseInt(h, 10)
              );
              break;
            case !!i:
              k = FormValidation.Helper.format(
                d.message || FormValidation.I18n[e].choice.more,
                parseInt(i, 10)
              );
          }
          return { valid: j, message: k };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { color: { default: "Please enter a valid color" } },
    })),
      (FormValidation.Validator.color = {
        html5Attributes: { message: "message", type: "type" },
        enableByHtml5: function (a) {
          return "color" === a.attr("type");
        },
        SUPPORTED_TYPES: ["hex", "rgb", "rgba", "hsl", "hsla", "keyword"],
        KEYWORD_COLORS: [
          "aliceblue",
          "antiquewhite",
          "aqua",
          "aquamarine",
          "azure",
          "beige",
          "bisque",
          "black",
          "blanchedalmond",
          "blue",
          "blueviolet",
          "brown",
          "burlywood",
          "cadetblue",
          "chartreuse",
          "chocolate",
          "coral",
          "cornflowerblue",
          "cornsilk",
          "crimson",
          "cyan",
          "darkblue",
          "darkcyan",
          "darkgoldenrod",
          "darkgray",
          "darkgreen",
          "darkgrey",
          "darkkhaki",
          "darkmagenta",
          "darkolivegreen",
          "darkorange",
          "darkorchid",
          "darkred",
          "darksalmon",
          "darkseagreen",
          "darkslateblue",
          "darkslategray",
          "darkslategrey",
          "darkturquoise",
          "darkviolet",
          "deeppink",
          "deepskyblue",
          "dimgray",
          "dimgrey",
          "dodgerblue",
          "firebrick",
          "floralwhite",
          "forestgreen",
          "fuchsia",
          "gainsboro",
          "ghostwhite",
          "gold",
          "goldenrod",
          "gray",
          "green",
          "greenyellow",
          "grey",
          "honeydew",
          "hotpink",
          "indianred",
          "indigo",
          "ivory",
          "khaki",
          "lavender",
          "lavenderblush",
          "lawngreen",
          "lemonchiffon",
          "lightblue",
          "lightcoral",
          "lightcyan",
          "lightgoldenrodyellow",
          "lightgray",
          "lightgreen",
          "lightgrey",
          "lightpink",
          "lightsalmon",
          "lightseagreen",
          "lightskyblue",
          "lightslategray",
          "lightslategrey",
          "lightsteelblue",
          "lightyellow",
          "lime",
          "limegreen",
          "linen",
          "magenta",
          "maroon",
          "mediumaquamarine",
          "mediumblue",
          "mediumorchid",
          "mediumpurple",
          "mediumseagreen",
          "mediumslateblue",
          "mediumspringgreen",
          "mediumturquoise",
          "mediumvioletred",
          "midnightblue",
          "mintcream",
          "mistyrose",
          "moccasin",
          "navajowhite",
          "navy",
          "oldlace",
          "olive",
          "olivedrab",
          "orange",
          "orangered",
          "orchid",
          "palegoldenrod",
          "palegreen",
          "paleturquoise",
          "palevioletred",
          "papayawhip",
          "peachpuff",
          "peru",
          "pink",
          "plum",
          "powderblue",
          "purple",
          "red",
          "rosybrown",
          "royalblue",
          "saddlebrown",
          "salmon",
          "sandybrown",
          "seagreen",
          "seashell",
          "sienna",
          "silver",
          "skyblue",
          "slateblue",
          "slategray",
          "slategrey",
          "snow",
          "springgreen",
          "steelblue",
          "tan",
          "teal",
          "thistle",
          "tomato",
          "transparent",
          "turquoise",
          "violet",
          "wheat",
          "white",
          "whitesmoke",
          "yellow",
          "yellowgreen",
        ],
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "color");
          if ("" === e) return !0;
          if (this.enableByHtml5(c)) return /^#[0-9A-F]{6}$/i.test(e);
          var f = d.type || this.SUPPORTED_TYPES;
          a.isArray(f) || (f = f.replace(/s/g, "").split(","));
          for (var g, h, i = !1, j = 0; j < f.length; j++)
            if (
              ((h = f[j]), (g = "_" + h.toLowerCase()), (i = i || this[g](e)))
            )
              return !0;
          return !1;
        },
        _hex: function (a) {
          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a);
        },
        _hsl: function (a) {
          return /^hsl\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/.test(
            a
          );
        },
        _hsla: function (a) {
          return /^hsla\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/.test(
            a
          );
        },
        _keyword: function (b) {
          return a.inArray(b, this.KEYWORD_COLORS) >= 0;
        },
        _rgb: function (a) {
          var b = /^rgb\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){2}(\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*)\)$/,
            c = /^rgb\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/;
          return b.test(a) || c.test(a);
        },
        _rgba: function (a) {
          var b = /^rgba\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/,
            c = /^rgba\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/;
          return b.test(a) || c.test(a);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        creditCard: { default: "Please enter a valid credit card number" },
      },
    })),
      (FormValidation.Validator.creditCard = {
        validate: function (b, c) {
          var d = b.getFieldValue(c, "creditCard");
          if ("" === d) return !0;
          if (/[^0-9-\s]+/.test(d)) return !1;
          if (((d = d.replace(/\D/g, "")), !FormValidation.Helper.luhn(d)))
            return !1;
          var e,
            f,
            g = {
              AMERICAN_EXPRESS: { length: [15], prefix: ["34", "37"] },
              DINERS_CLUB: {
                length: [14],
                prefix: ["300", "301", "302", "303", "304", "305", "36"],
              },
              DINERS_CLUB_US: { length: [16], prefix: ["54", "55"] },
              DISCOVER: {
                length: [16],
                prefix: [
                  "6011",
                  "622126",
                  "622127",
                  "622128",
                  "622129",
                  "62213",
                  "62214",
                  "62215",
                  "62216",
                  "62217",
                  "62218",
                  "62219",
                  "6222",
                  "6223",
                  "6224",
                  "6225",
                  "6226",
                  "6227",
                  "6228",
                  "62290",
                  "62291",
                  "622920",
                  "622921",
                  "622922",
                  "622923",
                  "622924",
                  "622925",
                  "644",
                  "645",
                  "646",
                  "647",
                  "648",
                  "649",
                  "65",
                ],
              },
              JCB: {
                length: [16],
                prefix: [
                  "3528",
                  "3529",
                  "353",
                  "354",
                  "355",
                  "356",
                  "357",
                  "358",
                ],
              },
              LASER: {
                length: [16, 17, 18, 19],
                prefix: ["6304", "6706", "6771", "6709"],
              },
              MAESTRO: {
                length: [12, 13, 14, 15, 16, 17, 18, 19],
                prefix: [
                  "5018",
                  "5020",
                  "5038",
                  "6304",
                  "6759",
                  "6761",
                  "6762",
                  "6763",
                  "6764",
                  "6765",
                  "6766",
                ],
              },
              MASTERCARD: {
                length: [16],
                prefix: ["51", "52", "53", "54", "55"],
              },
              SOLO: { length: [16, 18, 19], prefix: ["6334", "6767"] },
              UNIONPAY: {
                length: [16, 17, 18, 19],
                prefix: [
                  "622126",
                  "622127",
                  "622128",
                  "622129",
                  "62213",
                  "62214",
                  "62215",
                  "62216",
                  "62217",
                  "62218",
                  "62219",
                  "6222",
                  "6223",
                  "6224",
                  "6225",
                  "6226",
                  "6227",
                  "6228",
                  "62290",
                  "62291",
                  "622920",
                  "622921",
                  "622922",
                  "622923",
                  "622924",
                  "622925",
                ],
              },
              VISA: { length: [16], prefix: ["4"] },
            };
          for (e in g)
            for (f in g[e].prefix)
              if (
                d.substr(0, g[e].prefix[f].length) === g[e].prefix[f] &&
                -1 !== a.inArray(d.length, g[e].length)
              )
                return { valid: !0, type: e };
          return !1;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { cusip: { default: "Please enter a valid CUSIP number" } },
    })),
      (FormValidation.Validator.cusip = {
        validate: function (b, c) {
          var d = b.getFieldValue(c, "cusip");
          if ("" === d) return !0;
          if (((d = d.toUpperCase()), !/^[0-9A-Z]{9}$/.test(d))) return !1;
          for (
            var e = a.map(d.split(""), function (a) {
                var b = a.charCodeAt(0);
                return b >= "A".charCodeAt(0) && b <= "Z".charCodeAt(0)
                  ? b - "A".charCodeAt(0) + 10
                  : a;
              }),
              f = e.length,
              g = 0,
              h = 0;
            f - 1 > h;
            h++
          ) {
            var i = parseInt(e[h], 10);
            h % 2 !== 0 && (i *= 2), i > 9 && (i -= 9), (g += i);
          }
          return (g = (10 - (g % 10)) % 10), g === parseInt(e[f - 1], 10);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { cvv: { default: "Please enter a valid CVV number" } },
    })),
      (FormValidation.Validator.cvv = {
        html5Attributes: { message: "message", ccfield: "creditCardField" },
        init: function (a, b, c) {
          if (c.creditCardField) {
            var d = a.getFieldElements(c.creditCardField);
            a.onLiveChange(d, "live_cvv", function () {
              var c = a.getStatus(b, "cvv");
              c !== a.STATUS_NOT_VALIDATED && a.revalidateField(b);
            });
          }
        },
        destroy: function (a, b, c) {
          if (c.creditCardField) {
            var d = a.getFieldElements(c.creditCardField);
            a.offLiveChange(d, "live_cvv");
          }
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "cvv");
          if ("" === e) return !0;
          if (!/^[0-9]{3,4}$/.test(e)) return !1;
          if (!d.creditCardField) return !0;
          var f = b.getFieldElements(d.creditCardField).val();
          if ("" === f) return !0;
          f = f.replace(/\D/g, "");
          var g,
            h,
            i = {
              AMERICAN_EXPRESS: { length: [15], prefix: ["34", "37"] },
              DINERS_CLUB: {
                length: [14],
                prefix: ["300", "301", "302", "303", "304", "305", "36"],
              },
              DINERS_CLUB_US: { length: [16], prefix: ["54", "55"] },
              DISCOVER: {
                length: [16],
                prefix: [
                  "6011",
                  "622126",
                  "622127",
                  "622128",
                  "622129",
                  "62213",
                  "62214",
                  "62215",
                  "62216",
                  "62217",
                  "62218",
                  "62219",
                  "6222",
                  "6223",
                  "6224",
                  "6225",
                  "6226",
                  "6227",
                  "6228",
                  "62290",
                  "62291",
                  "622920",
                  "622921",
                  "622922",
                  "622923",
                  "622924",
                  "622925",
                  "644",
                  "645",
                  "646",
                  "647",
                  "648",
                  "649",
                  "65",
                ],
              },
              JCB: {
                length: [16],
                prefix: [
                  "3528",
                  "3529",
                  "353",
                  "354",
                  "355",
                  "356",
                  "357",
                  "358",
                ],
              },
              LASER: {
                length: [16, 17, 18, 19],
                prefix: ["6304", "6706", "6771", "6709"],
              },
              MAESTRO: {
                length: [12, 13, 14, 15, 16, 17, 18, 19],
                prefix: [
                  "5018",
                  "5020",
                  "5038",
                  "6304",
                  "6759",
                  "6761",
                  "6762",
                  "6763",
                  "6764",
                  "6765",
                  "6766",
                ],
              },
              MASTERCARD: {
                length: [16],
                prefix: ["51", "52", "53", "54", "55"],
              },
              SOLO: { length: [16, 18, 19], prefix: ["6334", "6767"] },
              UNIONPAY: {
                length: [16, 17, 18, 19],
                prefix: [
                  "622126",
                  "622127",
                  "622128",
                  "622129",
                  "62213",
                  "62214",
                  "62215",
                  "62216",
                  "62217",
                  "62218",
                  "62219",
                  "6222",
                  "6223",
                  "6224",
                  "6225",
                  "6226",
                  "6227",
                  "6228",
                  "62290",
                  "62291",
                  "622920",
                  "622921",
                  "622922",
                  "622923",
                  "622924",
                  "622925",
                ],
              },
              VISA: { length: [16], prefix: ["4"] },
            },
            j = null;
          for (g in i)
            for (h in i[g].prefix)
              if (
                f.substr(0, i[g].prefix[h].length) === i[g].prefix[h] &&
                -1 !== a.inArray(f.length, i[g].length)
              ) {
                j = g;
                break;
              }
          return null === j
            ? !1
            : "AMERICAN_EXPRESS" === j
            ? 4 === e.length
            : 3 === e.length;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        date: {
          default: "Please enter a valid date",
          min: "Please enter a date after %s",
          max: "Please enter a date before %s",
          range: "Please enter a date in the range %s - %s",
        },
      },
    })),
      (FormValidation.Validator.date = {
        html5Attributes: {
          message: "message",
          format: "format",
          min: "min",
          max: "max",
          separator: "separator",
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "date");
          if ("" === e) return !0;
          (d.format = d.format || "MM/DD/YYYY"),
            "date" === c.attr("type") && (d.format = "YYYY-MM-DD");
          var f = b.getLocale(),
            g = d.message || FormValidation.I18n[f].date["default"],
            h = d.format.split(" "),
            i = h[0],
            j = h.length > 1 ? h[1] : null,
            k = h.length > 2 ? h[2] : null,
            l = e.split(" "),
            m = l[0],
            n = l.length > 1 ? l[1] : null;
          if (h.length !== l.length) return { valid: !1, message: g };
          var o = d.separator;
          if (
            (o ||
              (o =
                -1 !== m.indexOf("/")
                  ? "/"
                  : -1 !== m.indexOf("-")
                  ? "-"
                  : -1 !== m.indexOf(".")
                  ? "."
                  : null),
            null === o || -1 === m.indexOf(o))
          )
            return { valid: !1, message: g };
          if (((m = m.split(o)), (i = i.split(o)), m.length !== i.length))
            return { valid: !1, message: g };
          var p = m[a.inArray("YYYY", i)],
            q = m[a.inArray("MM", i)],
            r = m[a.inArray("DD", i)];
          if (!p || !q || !r || 4 !== p.length)
            return { valid: !1, message: g };
          var s = null,
            t = null,
            u = null;
          if (j) {
            if (((j = j.split(":")), (n = n.split(":")), j.length !== n.length))
              return { valid: !1, message: g };
            if (
              ((t = n.length > 0 ? n[0] : null),
              (s = n.length > 1 ? n[1] : null),
              (u = n.length > 2 ? n[2] : null),
              "" === t || "" === s || "" === u)
            )
              return { valid: !1, message: g };
            if (u) {
              if (isNaN(u) || u.length > 2) return { valid: !1, message: g };
              if (((u = parseInt(u, 10)), 0 > u || u > 60))
                return { valid: !1, message: g };
            }
            if (t) {
              if (isNaN(t) || t.length > 2) return { valid: !1, message: g };
              if (((t = parseInt(t, 10)), 0 > t || t >= 24 || (k && t > 12)))
                return { valid: !1, message: g };
            }
            if (s) {
              if (isNaN(s) || s.length > 2) return { valid: !1, message: g };
              if (((s = parseInt(s, 10)), 0 > s || s > 59))
                return { valid: !1, message: g };
            }
          }
          var v = FormValidation.Helper.date(p, q, r),
            w = null,
            x = null,
            y = d.min,
            z = d.max;
          switch (
            (y &&
              (isNaN(Date.parse(y)) && (y = b.getDynamicOption(c, y)),
              (w = y instanceof Date ? y : this._parseDate(y, i, o)),
              (y = y instanceof Date ? this._formatDate(y, d.format) : y)),
            z &&
              (isNaN(Date.parse(z)) && (z = b.getDynamicOption(c, z)),
              (x = z instanceof Date ? z : this._parseDate(z, i, o)),
              (z = z instanceof Date ? this._formatDate(z, d.format) : z)),
            (m = new Date(p, q - 1, r, t, s, u)),
            !0)
          ) {
            case y && !z && v:
              (v = m.getTime() >= w.getTime()),
                (g =
                  d.message ||
                  FormValidation.Helper.format(
                    FormValidation.I18n[f].date.min,
                    y
                  ));
              break;
            case z && !y && v:
              (v = m.getTime() <= x.getTime()),
                (g =
                  d.message ||
                  FormValidation.Helper.format(
                    FormValidation.I18n[f].date.max,
                    z
                  ));
              break;
            case z && y && v:
              (v = m.getTime() <= x.getTime() && m.getTime() >= w.getTime()),
                (g =
                  d.message ||
                  FormValidation.Helper.format(
                    FormValidation.I18n[f].date.range,
                    [y, z]
                  ));
          }
          return { valid: v, message: g };
        },
        _parseDate: function (b, c, d) {
          var e = 0,
            f = 0,
            g = 0,
            h = b.split(" "),
            i = h[0],
            j = h.length > 1 ? h[1] : null;
          i = i.split(d);
          var k = i[a.inArray("YYYY", c)],
            l = i[a.inArray("MM", c)],
            m = i[a.inArray("DD", c)];
          return (
            j &&
              ((j = j.split(":")),
              (f = j.length > 0 ? j[0] : null),
              (e = j.length > 1 ? j[1] : null),
              (g = j.length > 2 ? j[2] : null)),
            new Date(k, l - 1, m, f, e, g)
          );
        },
        _formatDate: function (a, b) {
          b = b
            .replace(/Y/g, "y")
            .replace(/M/g, "m")
            .replace(/D/g, "d")
            .replace(/:m/g, ":M")
            .replace(/:mm/g, ":MM")
            .replace(/:S/, ":s")
            .replace(/:SS/, ":ss");
          var c = {
            d: function (a) {
              return a.getDate();
            },
            dd: function (a) {
              var b = a.getDate();
              return 10 > b ? "0" + b : b;
            },
            m: function (a) {
              return a.getMonth() + 1;
            },
            mm: function (a) {
              var b = a.getMonth() + 1;
              return 10 > b ? "0" + b : b;
            },
            yy: function (a) {
              return ("" + a.getFullYear()).substr(2);
            },
            yyyy: function (a) {
              return a.getFullYear();
            },
            h: function (a) {
              return a.getHours() % 12 || 12;
            },
            hh: function (a) {
              var b = a.getHours() % 12 || 12;
              return 10 > b ? "0" + b : b;
            },
            H: function (a) {
              return a.getHours();
            },
            HH: function (a) {
              var b = a.getHours();
              return 10 > b ? "0" + b : b;
            },
            M: function (a) {
              return a.getMinutes();
            },
            MM: function (a) {
              var b = a.getMinutes();
              return 10 > b ? "0" + b : b;
            },
            s: function (a) {
              return a.getSeconds();
            },
            ss: function (a) {
              var b = a.getSeconds();
              return 10 > b ? "0" + b : b;
            },
          };
          return b.replace(
            /d{1,4}|m{1,4}|yy(?:yy)?|([HhMs])\1?|"[^"]*"|'[^']*'/g,
            function (b) {
              return c[b] ? c[b](a) : b.slice(1, b.length - 1);
            }
          );
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { different: { default: "Please enter a different value" } },
    })),
      (FormValidation.Validator.different = {
        html5Attributes: { message: "message", field: "field" },
        init: function (a, b, c) {
          for (var d = c.field.split(","), e = 0; e < d.length; e++) {
            var f = a.getFieldElements(d[e]);
            a.onLiveChange(f, "live_different", function () {
              var c = a.getStatus(b, "different");
              c !== a.STATUS_NOT_VALIDATED && a.revalidateField(b);
            });
          }
        },
        destroy: function (a, b, c) {
          for (var d = c.field.split(","), e = 0; e < d.length; e++) {
            var f = a.getFieldElements(d[e]);
            a.offLiveChange(f, "live_different");
          }
        },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "different");
          if ("" === d) return !0;
          for (var e = c.field.split(","), f = !0, g = 0; g < e.length; g++) {
            var h = a.getFieldElements(e[g]);
            if (null != h && 0 !== h.length) {
              var i = a.getFieldValue(h, "different");
              d === i
                ? (f = !1)
                : "" !== i && a.updateStatus(h, a.STATUS_VALID, "different");
            }
          }
          return f;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { digits: { default: "Please enter only digits" } },
    })),
      (FormValidation.Validator.digits = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "digits");
          return "" === c ? !0 : /^\d+$/.test(c);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { ean: { default: "Please enter a valid EAN number" } },
    })),
      (FormValidation.Validator.ean = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "ean");
          if ("" === c) return !0;
          if (!/^(\d{8}|\d{12}|\d{13})$/.test(c)) return !1;
          for (
            var d = c.length, e = 0, f = 8 === d ? [3, 1] : [1, 3], g = 0;
            d - 1 > g;
            g++
          )
            e += parseInt(c.charAt(g), 10) * f[g % 2];
          return (e = (10 - (e % 10)) % 10), e + "" === c.charAt(d - 1);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { ein: { default: "Please enter a valid EIN number" } },
    })),
      (FormValidation.Validator.ein = {
        CAMPUS: {
          ANDOVER: ["10", "12"],
          ATLANTA: ["60", "67"],
          AUSTIN: ["50", "53"],
          BROOKHAVEN: [
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "11",
            "13",
            "14",
            "16",
            "21",
            "22",
            "23",
            "25",
            "34",
            "51",
            "52",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "65",
          ],
          CINCINNATI: ["30", "32", "35", "36", "37", "38", "61"],
          FRESNO: ["15", "24"],
          KANSAS_CITY: ["40", "44"],
          MEMPHIS: ["94", "95"],
          OGDEN: ["80", "90"],
          PHILADELPHIA: [
            "33",
            "39",
            "41",
            "42",
            "43",
            "46",
            "48",
            "62",
            "63",
            "64",
            "66",
            "68",
            "71",
            "72",
            "73",
            "74",
            "75",
            "76",
            "77",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "91",
            "92",
            "93",
            "98",
            "99",
          ],
          INTERNET: ["20", "26", "27", "45", "46"],
          SMALL_BUSINESS_ADMINISTRATION: ["31"],
        },
        validate: function (b, c) {
          var d = b.getFieldValue(c, "ein");
          if ("" === d) return !0;
          if (!/^[0-9]{2}-?[0-9]{7}$/.test(d)) return !1;
          var e = d.substr(0, 2) + "";
          for (var f in this.CAMPUS)
            if (-1 !== a.inArray(e, this.CAMPUS[f]))
              return { valid: !0, campus: f };
          return !1;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        emailAddress: { default: "Please enter a valid email address" },
      },
    })),
      (FormValidation.Validator.emailAddress = {
        html5Attributes: {
          message: "message",
          multiple: "multiple",
          separator: "separator",
        },
        enableByHtml5: function (a) {
          return "email" === a.attr("type");
        },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "emailAddress");
          if ("" === d) return !0;
          var e = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
            f = c.multiple === !0 || "true" === c.multiple;
          if (f) {
            for (
              var g = c.separator || /[,;]/,
                h = this._splitEmailAddresses(d, g),
                i = 0;
              i < h.length;
              i++
            )
              if (!e.test(h[i])) return !1;
            return !0;
          }
          return e.test(d);
        },
        _splitEmailAddresses: function (a, b) {
          for (
            var c = a.split(/"/), d = c.length, e = [], f = "", g = 0;
            d > g;
            g++
          )
            if (g % 2 === 0) {
              var h = c[g].split(b),
                i = h.length;
              if (1 === i) f += h[0];
              else {
                e.push(f + h[0]);
                for (var j = 1; i - 1 > j; j++) e.push(h[j]);
                f = h[i - 1];
              }
            } else (f += '"' + c[g]), d - 1 > g && (f += '"');
          return e.push(f), e;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { file: { default: "Please choose a valid file" } },
    })),
      (FormValidation.Validator.file = {
        html5Attributes: {
          extension: "extension",
          maxfiles: "maxFiles",
          minfiles: "minFiles",
          maxsize: "maxSize",
          minsize: "minSize",
          maxtotalsize: "maxTotalSize",
          mintotalsize: "minTotalSize",
          message: "message",
          type: "type",
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "file");
          if ("" === e) return !0;
          var f,
            g = d.extension ? d.extension.toLowerCase().split(",") : null,
            h = d.type ? d.type.toLowerCase().split(",") : null,
            i = window.File && window.FileList && window.FileReader;
          if (i) {
            var j = c.get(0).files,
              k = j.length,
              l = 0;
            if (
              (d.maxFiles && k > parseInt(d.maxFiles, 10)) ||
              (d.minFiles && k < parseInt(d.minFiles, 10))
            )
              return !1;
            for (var m = 0; k > m; m++)
              if (
                ((l += j[m].size),
                (f = j[m].name.substr(j[m].name.lastIndexOf(".") + 1)),
                (d.minSize && j[m].size < parseInt(d.minSize, 10)) ||
                  (d.maxSize && j[m].size > parseInt(d.maxSize, 10)) ||
                  (g && -1 === a.inArray(f.toLowerCase(), g)) ||
                  (j[m].type &&
                    h &&
                    -1 === a.inArray(j[m].type.toLowerCase(), h)))
              )
                return !1;
            if (
              (d.maxTotalSize && l > parseInt(d.maxTotalSize, 10)) ||
              (d.minTotalSize && l < parseInt(d.minTotalSize, 10))
            )
              return !1;
          } else if (
            ((f = e.substr(e.lastIndexOf(".") + 1)),
            g && -1 === a.inArray(f.toLowerCase(), g))
          )
            return !1;
          return !0;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        greaterThan: {
          default: "Please enter a value greater than or equal to %s",
          notInclusive: "Please enter a value greater than %s",
        },
      },
    })),
      (FormValidation.Validator.greaterThan = {
        html5Attributes: {
          message: "message",
          value: "value",
          inclusive: "inclusive",
        },
        enableByHtml5: function (a) {
          var b = a.attr("type"),
            c = a.attr("min");
          return c && "date" !== b ? { value: c } : !1;
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "greaterThan");
          if ("" === e) return !0;
          if (((e = this._format(e)), !a.isNumeric(e))) return !1;
          var f = b.getLocale(),
            g = a.isNumeric(d.value) ? d.value : b.getDynamicOption(c, d.value),
            h = this._format(g);
          return (
            (e = parseFloat(e)),
            d.inclusive === !0 || void 0 === d.inclusive
              ? {
                  valid: e >= h,
                  message: FormValidation.Helper.format(
                    d.message || FormValidation.I18n[f].greaterThan["default"],
                    g
                  ),
                }
              : {
                  valid: e > h,
                  message: FormValidation.Helper.format(
                    d.message ||
                      FormValidation.I18n[f].greaterThan.notInclusive,
                    g
                  ),
                }
          );
        },
        _format: function (a) {
          return (a + "").replace(",", ".");
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { grid: { default: "Please enter a valid GRId number" } },
    })),
      (FormValidation.Validator.grid = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "grid");
          return "" === c
            ? !0
            : ((c = c.toUpperCase()),
              /^[GRID:]*([0-9A-Z]{2})[-\s]*([0-9A-Z]{5})[-\s]*([0-9A-Z]{10})[-\s]*([0-9A-Z]{1})$/g.test(
                c
              )
                ? ((c = c.replace(/\s/g, "").replace(/-/g, "")),
                  "GRID:" === c.substr(0, 5) && (c = c.substr(5)),
                  FormValidation.Helper.mod37And36(c))
                : !1);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { hex: { default: "Please enter a valid hexadecimal number" } },
    })),
      (FormValidation.Validator.hex = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "hex");
          return "" === c ? !0 : /^[0-9a-fA-F]+$/.test(c);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        iban: {
          default: "Please enter a valid IBAN number",
          country: "Please enter a valid IBAN number in %s",
          countries: {
            AD: "Andorra",
            AE: "United Arab Emirates",
            AL: "Albania",
            AO: "Angola",
            AT: "Austria",
            AZ: "Azerbaijan",
            BA: "Bosnia and Herzegovina",
            BE: "Belgium",
            BF: "Burkina Faso",
            BG: "Bulgaria",
            BH: "Bahrain",
            BI: "Burundi",
            BJ: "Benin",
            BR: "Brazil",
            CH: "Switzerland",
            CI: "Ivory Coast",
            CM: "Cameroon",
            CR: "Costa Rica",
            CV: "Cape Verde",
            CY: "Cyprus",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            DO: "Dominican Republic",
            DZ: "Algeria",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            FO: "Faroe Islands",
            FR: "France",
            GB: "United Kingdom",
            GE: "Georgia",
            GI: "Gibraltar",
            GL: "Greenland",
            GR: "Greece",
            GT: "Guatemala",
            HR: "Croatia",
            HU: "Hungary",
            IE: "Ireland",
            IL: "Israel",
            IR: "Iran",
            IS: "Iceland",
            IT: "Italy",
            JO: "Jordan",
            KW: "Kuwait",
            KZ: "Kazakhstan",
            LB: "Lebanon",
            LI: "Liechtenstein",
            LT: "Lithuania",
            LU: "Luxembourg",
            LV: "Latvia",
            MC: "Monaco",
            MD: "Moldova",
            ME: "Montenegro",
            MG: "Madagascar",
            MK: "Macedonia",
            ML: "Mali",
            MR: "Mauritania",
            MT: "Malta",
            MU: "Mauritius",
            MZ: "Mozambique",
            NL: "Netherlands",
            NO: "Norway",
            PK: "Pakistan",
            PL: "Poland",
            PS: "Palestine",
            PT: "Portugal",
            QA: "Qatar",
            RO: "Romania",
            RS: "Serbia",
            SA: "Saudi Arabia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            SM: "San Marino",
            SN: "Senegal",
            TN: "Tunisia",
            TR: "Turkey",
            VG: "Virgin Islands, British",
          },
        },
      },
    })),
      (FormValidation.Validator.iban = {
        html5Attributes: { message: "message", country: "country" },
        REGEX: {
          AD: "AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}",
          AE: "AE[0-9]{2}[0-9]{3}[0-9]{16}",
          AL: "AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}",
          AO: "AO[0-9]{2}[0-9]{21}",
          AT: "AT[0-9]{2}[0-9]{5}[0-9]{11}",
          AZ: "AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}",
          BA: "BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}",
          BE: "BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}",
          BF: "BF[0-9]{2}[0-9]{23}",
          BG: "BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}",
          BH: "BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}",
          BI: "BI[0-9]{2}[0-9]{12}",
          BJ: "BJ[0-9]{2}[A-Z]{1}[0-9]{23}",
          BR: "BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]",
          CH: "CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}",
          CI: "CI[0-9]{2}[A-Z]{1}[0-9]{23}",
          CM: "CM[0-9]{2}[0-9]{23}",
          CR: "CR[0-9]{2}[0-9]{3}[0-9]{14}",
          CV: "CV[0-9]{2}[0-9]{21}",
          CY: "CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}",
          CZ: "CZ[0-9]{2}[0-9]{20}",
          DE: "DE[0-9]{2}[0-9]{8}[0-9]{10}",
          DK: "DK[0-9]{2}[0-9]{14}",
          DO: "DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}",
          DZ: "DZ[0-9]{2}[0-9]{20}",
          EE: "EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}",
          ES: "ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}",
          FI: "FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}",
          FO: "FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}",
          FR: "FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}",
          GB: "GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}",
          GE: "GE[0-9]{2}[A-Z]{2}[0-9]{16}",
          GI: "GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}",
          GL: "GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}",
          GR: "GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}",
          GT: "GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}",
          HR: "HR[0-9]{2}[0-9]{7}[0-9]{10}",
          HU: "HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}",
          IE: "IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}",
          IL: "IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}",
          IR: "IR[0-9]{2}[0-9]{22}",
          IS: "IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}",
          IT: "IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}",
          JO: "JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}",
          KW: "KW[0-9]{2}[A-Z]{4}[0-9]{22}",
          KZ: "KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}",
          LB: "LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}",
          LI: "LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}",
          LT: "LT[0-9]{2}[0-9]{5}[0-9]{11}",
          LU: "LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}",
          LV: "LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}",
          MC: "MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}",
          MD: "MD[0-9]{2}[A-Z0-9]{20}",
          ME: "ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
          MG: "MG[0-9]{2}[0-9]{23}",
          MK: "MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}",
          ML: "ML[0-9]{2}[A-Z]{1}[0-9]{23}",
          MR: "MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}",
          MT: "MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}",
          MU: "MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}",
          MZ: "MZ[0-9]{2}[0-9]{21}",
          NL: "NL[0-9]{2}[A-Z]{4}[0-9]{10}",
          NO: "NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}",
          PK: "PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}",
          PL: "PL[0-9]{2}[0-9]{8}[0-9]{16}",
          PS: "PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}",
          PT: "PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}",
          QA: "QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}",
          RO: "RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}",
          RS: "RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
          SA: "SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}",
          SE: "SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}",
          SI: "SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}",
          SK: "SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}",
          SM: "SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}",
          SN: "SN[0-9]{2}[A-Z]{1}[0-9]{23}",
          TN: "TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
          TR: "TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}",
          VG: "VG[0-9]{2}[A-Z]{4}[0-9]{16}",
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "iban");
          if ("" === e) return !0;
          e = e.replace(/[^a-zA-Z0-9]/g, "").toUpperCase();
          var f = d.country;
          f
            ? ("string" == typeof f && this.REGEX[f]) ||
              (f = b.getDynamicOption(c, f))
            : (f = e.substr(0, 2));
          var g = b.getLocale();
          if (!this.REGEX[f]) return !0;
          if (!new RegExp("^" + this.REGEX[f] + "$").test(e))
            return {
              valid: !1,
              message: FormValidation.Helper.format(
                d.message || FormValidation.I18n[g].iban.country,
                FormValidation.I18n[g].iban.countries[f]
              ),
            };
          (e = e.substr(4) + e.substr(0, 4)),
            (e = a.map(e.split(""), function (a) {
              var b = a.charCodeAt(0);
              return b >= "A".charCodeAt(0) && b <= "Z".charCodeAt(0)
                ? b - "A".charCodeAt(0) + 10
                : a;
            })),
            (e = e.join(""));
          for (
            var h = parseInt(e.substr(0, 1), 10), i = e.length, j = 1;
            i > j;
            ++j
          )
            h = (10 * h + parseInt(e.substr(j, 1), 10)) % 97;
          return {
            valid: 1 === h,
            message: FormValidation.Helper.format(
              d.message || FormValidation.I18n[g].iban.country,
              FormValidation.I18n[g].iban.countries[f]
            ),
          };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        id: {
          default: "Please enter a valid identification number",
          country: "Please enter a valid identification number in %s",
          countries: {
            BA: "Bosnia and Herzegovina",
            BG: "Bulgaria",
            BR: "Brazil",
            CH: "Switzerland",
            CL: "Chile",
            CN: "China",
            CZ: "Czech Republic",
            DK: "Denmark",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            HR: "Croatia",
            IE: "Ireland",
            IS: "Iceland",
            LT: "Lithuania",
            LV: "Latvia",
            ME: "Montenegro",
            MK: "Macedonia",
            NL: "Netherlands",
            PL: "Poland",
            RO: "Romania",
            RS: "Serbia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            SM: "San Marino",
            TH: "Thailand",
            ZA: "South Africa",
          },
        },
      },
    })),
      (FormValidation.Validator.id = {
        html5Attributes: { message: "message", country: "country" },
        COUNTRY_CODES: [
          "BA",
          "BG",
          "BR",
          "CH",
          "CL",
          "CN",
          "CZ",
          "DK",
          "EE",
          "ES",
          "FI",
          "HR",
          "IE",
          "IS",
          "LT",
          "LV",
          "ME",
          "MK",
          "NL",
          "PL",
          "RO",
          "RS",
          "SE",
          "SI",
          "SK",
          "SM",
          "TH",
          "ZA",
        ],
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "id");
          if ("" === e) return !0;
          var f = b.getLocale(),
            g = d.country;
          if (
            (g
              ? ("string" != typeof g ||
                  -1 === a.inArray(g.toUpperCase(), this.COUNTRY_CODES)) &&
                (g = b.getDynamicOption(c, g))
              : (g = e.substr(0, 2)),
            -1 === a.inArray(g, this.COUNTRY_CODES))
          )
            return !0;
          var h = ["_", g.toLowerCase()].join("");
          return this[h](e)
            ? !0
            : {
                valid: !1,
                message: FormValidation.Helper.format(
                  d.message || FormValidation.I18n[f].id.country,
                  FormValidation.I18n[f].id.countries[g.toUpperCase()]
                ),
              };
        },
        _validateJMBG: function (a, b) {
          if (!/^\d{13}$/.test(a)) return !1;
          var c = parseInt(a.substr(0, 2), 10),
            d = parseInt(a.substr(2, 2), 10),
            e = (parseInt(a.substr(4, 3), 10), parseInt(a.substr(7, 2), 10)),
            f = parseInt(a.substr(12, 1), 10);

          if (c > 31 || d > 12) return !1;
          for (var g = 0, h = 0; 6 > h; h++)
            g +=
              (7 - h) *
              (parseInt(a.charAt(h), 10) + parseInt(a.charAt(h + 6), 10));
          if (((g = 11 - (g % 11)), (10 === g || 11 === g) && (g = 0), g !== f))
            return !1;
          switch (b.toUpperCase()) {
            case "BA":
              return e >= 10 && 19 >= e;
            case "MK":
              return e >= 41 && 49 >= e;
            case "ME":
              return e >= 20 && 29 >= e;
            case "RS":
              return e >= 70 && 99 >= e;
            case "SI":
              return e >= 50 && 59 >= e;
            default:
              return !0;
          }
        },
        _ba: function (a) {
          return this._validateJMBG(a, "BA");
        },
        _mk: function (a) {
          return this._validateJMBG(a, "MK");
        },
        _me: function (a) {
          return this._validateJMBG(a, "ME");
        },
        _rs: function (a) {
          return this._validateJMBG(a, "RS");
        },
        _si: function (a) {
          return this._validateJMBG(a, "SI");
        },
        _bg: function (a) {
          if (!/^\d{10}$/.test(a) && !/^\d{6}\s\d{3}\s\d{1}$/.test(a))
            return !1;
          a = a.replace(/\s/g, "");
          var b = parseInt(a.substr(0, 2), 10) + 1900,
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10);
          if (
            (c > 40
              ? ((b += 100), (c -= 40))
              : c > 20 && ((b -= 100), (c -= 20)),
            !FormValidation.Helper.date(b, c, d))
          )
            return !1;
          for (var e = 0, f = [2, 4, 8, 5, 10, 9, 7, 3, 6], g = 0; 9 > g; g++)
            e += parseInt(a.charAt(g), 10) * f[g];
          return (e = (e % 11) % 10), e + "" === a.substr(9, 1);
        },
        _br: function (a) {
          if (
            ((a = a.replace(/\D/g, "")),
            !/^\d{11}$/.test(a) ||
              /^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(
                a
              ))
          )
            return !1;
          for (var b = 0, c = 0; 9 > c; c++)
            b += (10 - c) * parseInt(a.charAt(c), 10);
          if (
            ((b = 11 - (b % 11)),
            (10 === b || 11 === b) && (b = 0),
            b + "" !== a.charAt(9))
          )
            return !1;
          var d = 0;
          for (c = 0; 10 > c; c++) d += (11 - c) * parseInt(a.charAt(c), 10);
          return (
            (d = 11 - (d % 11)),
            (10 === d || 11 === d) && (d = 0),
            d + "" === a.charAt(10)
          );
        },
        _ch: function (a) {
          if (
            !/^756[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{2}$/.test(a)
          )
            return !1;
          a = a.replace(/\D/g, "").substr(3);
          for (
            var b = a.length, c = 0, d = 8 === b ? [3, 1] : [1, 3], e = 0;
            b - 1 > e;
            e++
          )
            c += parseInt(a.charAt(e), 10) * d[e % 2];
          return (c = 10 - (c % 10)), c + "" === a.charAt(b - 1);
        },
        _cl: function (a) {
          if (!/^\d{7,8}[-]{0,1}[0-9K]$/i.test(a)) return !1;
          for (a = a.replace(/\-/g, ""); a.length < 9; ) a = "0" + a;
          for (var b = 0, c = [3, 2, 7, 6, 5, 4, 3, 2], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return (
            (b = 11 - (b % 11)),
            11 === b ? (b = 0) : 10 === b && (b = "K"),
            b + "" === a.charAt(8).toUpperCase()
          );
        },
        _cn: function (b) {
          if (
            ((b = b.trim()),
            !/^\d{15}$/.test(b) && !/^\d{17}[\dXx]{1}$/.test(b))
          )
            return !1;
          var c = {
              11: {
                0: [0],
                1: [
                  [0, 9],
                  [11, 17],
                ],
                2: [0, 28, 29],
              },
              12: { 0: [0], 1: [[0, 16]], 2: [0, 21, 23, 25] },
              13: {
                0: [0],
                1: [[0, 5], 7, 8, 21, [23, 33], [81, 85]],
                2: [[0, 5], [7, 9], [23, 25], 27, 29, 30, 81, 83],
                3: [
                  [0, 4],
                  [21, 24],
                ],
                4: [[0, 4], 6, 21, [23, 35], 81],
                5: [[0, 3], [21, 35], 81, 82],
                6: [
                  [0, 4],
                  [21, 38],
                  [81, 84],
                ],
                7: [[0, 3], 5, 6, [21, 33]],
                8: [
                  [0, 4],
                  [21, 28],
                ],
                9: [
                  [0, 3],
                  [21, 30],
                  [81, 84],
                ],
                10: [[0, 3], [22, 26], 28, 81, 82],
                11: [[0, 2], [21, 28], 81, 82],
              },
              14: {
                0: [0],
                1: [0, 1, [5, 10], [21, 23], 81],
                2: [[0, 3], 11, 12, [21, 27]],
                3: [[0, 3], 11, 21, 22],
                4: [[0, 2], 11, 21, [23, 31], 81],
                5: [[0, 2], 21, 22, 24, 25, 81],
                6: [
                  [0, 3],
                  [21, 24],
                ],
                7: [[0, 2], [21, 29], 81],
                8: [[0, 2], [21, 30], 81, 82],
                9: [[0, 2], [21, 32], 81],
                10: [[0, 2], [21, 34], 81, 82],
                11: [[0, 2], [21, 30], 81, 82],
                23: [[0, 3], 22, 23, [25, 30], 32, 33],
              },
              15: {
                0: [0],
                1: [
                  [0, 5],
                  [21, 25],
                ],
                2: [
                  [0, 7],
                  [21, 23],
                ],
                3: [[0, 4]],
                4: [
                  [0, 4],
                  [21, 26],
                  [28, 30],
                ],
                5: [[0, 2], [21, 26], 81],
                6: [
                  [0, 2],
                  [21, 27],
                ],
                7: [
                  [0, 3],
                  [21, 27],
                  [81, 85],
                ],
                8: [
                  [0, 2],
                  [21, 26],
                ],
                9: [[0, 2], [21, 29], 81],
                22: [
                  [0, 2],
                  [21, 24],
                ],
                25: [
                  [0, 2],
                  [22, 31],
                ],
                26: [[0, 2], [24, 27], [29, 32], 34],
                28: [0, 1, [22, 27]],
                29: [0, [21, 23]],
              },
              21: {
                0: [0],
                1: [[0, 6], [11, 14], [22, 24], 81],
                2: [[0, 4], [11, 13], 24, [81, 83]],
                3: [[0, 4], 11, 21, 23, 81],
                4: [[0, 4], 11, [21, 23]],
                5: [[0, 5], 21, 22],
                6: [[0, 4], 24, 81, 82],
                7: [[0, 3], 11, 26, 27, 81, 82],
                8: [[0, 4], 11, 81, 82],
                9: [[0, 5], 11, 21, 22],
                10: [[0, 5], 11, 21, 81],
                11: [[0, 3], 21, 22],
                12: [[0, 2], 4, 21, 23, 24, 81, 82],
                13: [[0, 3], 21, 22, 24, 81, 82],
                14: [[0, 4], 21, 22, 81],
              },
              22: {
                0: [0],
                1: [[0, 6], 12, 22, [81, 83]],
                2: [[0, 4], 11, 21, [81, 84]],
                3: [[0, 3], 22, 23, 81, 82],
                4: [[0, 3], 21, 22],
                5: [[0, 3], 21, 23, 24, 81, 82],
                6: [[0, 2], 4, 5, [21, 23], 25, 81],
                7: [[0, 2], [21, 24], 81],
                8: [[0, 2], 21, 22, 81, 82],
                24: [[0, 6], 24, 26],
              },
              23: {
                0: [0],
                1: [[0, 12], 21, [23, 29], [81, 84]],
                2: [[0, 8], 21, [23, 25], 27, [29, 31], 81],
                3: [[0, 7], 21, 81, 82],
                4: [[0, 7], 21, 22],
                5: [[0, 3], 5, 6, [21, 24]],
                6: [
                  [0, 6],
                  [21, 24],
                ],
                7: [[0, 16], 22, 81],
                8: [[0, 5], 11, 22, 26, 28, 33, 81, 82],
                9: [[0, 4], 21],
                10: [[0, 5], 24, 25, 81, [83, 85]],
                11: [[0, 2], 21, 23, 24, 81, 82],
                12: [
                  [0, 2],
                  [21, 26],
                  [81, 83],
                ],
                27: [
                  [0, 4],
                  [21, 23],
                ],
              },
              31: { 0: [0], 1: [0, 1, [3, 10], [12, 20]], 2: [0, 30] },
              32: {
                0: [0],
                1: [[0, 7], 11, [13, 18], 24, 25],
                2: [[0, 6], 11, 81, 82],
                3: [[0, 5], 11, 12, [21, 24], 81, 82],
                4: [[0, 2], 4, 5, 11, 12, 81, 82],
                5: [
                  [0, 9],
                  [81, 85],
                ],
                6: [[0, 2], 11, 12, 21, 23, [81, 84]],
                7: [0, 1, 3, 5, 6, [21, 24]],
                8: [[0, 4], 11, 26, [29, 31]],
                9: [[0, 3], [21, 25], 28, 81, 82],
                10: [[0, 3], 11, 12, 23, 81, 84, 88],
                11: [[0, 2], 11, 12, [81, 83]],
                12: [
                  [0, 4],
                  [81, 84],
                ],
                13: [[0, 2], 11, [21, 24]],
              },
              33: {
                0: [0],
                1: [[0, 6], [8, 10], 22, 27, 82, 83, 85],
                2: [0, 1, [3, 6], 11, 12, 25, 26, [81, 83]],
                3: [[0, 4], 22, 24, [26, 29], 81, 82],
                4: [[0, 2], 11, 21, 24, [81, 83]],
                5: [
                  [0, 3],
                  [21, 23],
                ],
                6: [[0, 2], 21, 24, [81, 83]],
                7: [[0, 3], 23, 26, 27, [81, 84]],
                8: [[0, 3], 22, 24, 25, 81],
                9: [[0, 3], 21, 22],
                10: [[0, 4], [21, 24], 81, 82],
                11: [[0, 2], [21, 27], 81],
              },
              34: {
                0: [0],
                1: [[0, 4], 11, [21, 24], 81],
                2: [[0, 4], 7, 8, [21, 23], 25],
                3: [[0, 4], 11, [21, 23]],
                4: [[0, 6], 21],
                5: [[0, 4], 6, [21, 23]],
                6: [[0, 4], 21],
                7: [[0, 3], 11, 21],
                8: [[0, 3], 11, [22, 28], 81],
                10: [
                  [0, 4],
                  [21, 24],
                ],
                11: [[0, 3], 22, [24, 26], 81, 82],
                12: [[0, 4], 21, 22, 25, 26, 82],
                13: [
                  [0, 2],
                  [21, 24],
                ],
                14: [
                  [0, 2],
                  [21, 24],
                ],
                15: [
                  [0, 3],
                  [21, 25],
                ],
                16: [
                  [0, 2],
                  [21, 23],
                ],
                17: [
                  [0, 2],
                  [21, 23],
                ],
                18: [[0, 2], [21, 25], 81],
              },
              35: {
                0: [0],
                1: [[0, 5], 11, [21, 25], 28, 81, 82],
                2: [
                  [0, 6],
                  [11, 13],
                ],
                3: [[0, 5], 22],
                4: [[0, 3], 21, [23, 30], 81],
                5: [[0, 5], 21, [24, 27], [81, 83]],
                6: [[0, 3], [22, 29], 81],
                7: [
                  [0, 2],
                  [21, 25],
                  [81, 84],
                ],
                8: [[0, 2], [21, 25], 81],
                9: [[0, 2], [21, 26], 81, 82],
              },
              36: {
                0: [0],
                1: [[0, 5], 11, [21, 24]],
                2: [[0, 3], 22, 81],
                3: [[0, 2], 13, [21, 23]],
                4: [[0, 3], 21, [23, 30], 81, 82],
                5: [[0, 2], 21],
                6: [[0, 2], 22, 81],
                7: [[0, 2], [21, 35], 81, 82],
                8: [[0, 3], [21, 30], 81],
                9: [
                  [0, 2],
                  [21, 26],
                  [81, 83],
                ],
                10: [
                  [0, 2],
                  [21, 30],
                ],
                11: [[0, 2], [21, 30], 81],
              },
              37: {
                0: [0],
                1: [[0, 5], 12, 13, [24, 26], 81],
                2: [[0, 3], 5, [11, 14], [81, 85]],
                3: [
                  [0, 6],
                  [21, 23],
                ],
                4: [[0, 6], 81],
                5: [
                  [0, 3],
                  [21, 23],
                ],
                6: [[0, 2], [11, 13], 34, [81, 87]],
                7: [[0, 5], 24, 25, [81, 86]],
                8: [[0, 2], 11, [26, 32], [81, 83]],
                9: [[0, 3], 11, 21, 23, 82, 83],
                10: [
                  [0, 2],
                  [81, 83],
                ],
                11: [[0, 3], 21, 22],
                12: [[0, 3]],
                13: [[0, 2], 11, 12, [21, 29]],
                14: [[0, 2], [21, 28], 81, 82],
                15: [[0, 2], [21, 26], 81],
                16: [
                  [0, 2],
                  [21, 26],
                ],
                17: [
                  [0, 2],
                  [21, 28],
                ],
              },
              41: {
                0: [0],
                1: [[0, 6], 8, 22, [81, 85]],
                2: [[0, 5], 11, [21, 25]],
                3: [[0, 7], 11, [22, 29], 81],
                4: [[0, 4], 11, [21, 23], 25, 81, 82],
                5: [[0, 3], 5, 6, 22, 23, 26, 27, 81],
                6: [[0, 3], 11, 21, 22],
                7: [[0, 4], 11, 21, [24, 28], 81, 82],
                8: [[0, 4], 11, [21, 23], 25, [81, 83]],
                9: [[0, 2], 22, 23, [26, 28]],
                10: [[0, 2], [23, 25], 81, 82],
                11: [
                  [0, 4],
                  [21, 23],
                ],
                12: [[0, 2], 21, 22, 24, 81, 82],
                13: [[0, 3], [21, 30], 81],
                14: [[0, 3], [21, 26], 81],
                15: [
                  [0, 3],
                  [21, 28],
                ],
                16: [[0, 2], [21, 28], 81],
                17: [
                  [0, 2],
                  [21, 29],
                ],
                90: [0, 1],
              },
              42: {
                0: [0],
                1: [
                  [0, 7],
                  [11, 17],
                ],
                2: [[0, 5], 22, 81],
                3: [[0, 3], [21, 25], 81],
                5: [
                  [0, 6],
                  [25, 29],
                  [81, 83],
                ],
                6: [[0, 2], 6, 7, [24, 26], [82, 84]],
                7: [[0, 4]],
                8: [[0, 2], 4, 21, 22, 81],
                9: [[0, 2], [21, 23], 81, 82, 84],
                10: [[0, 3], [22, 24], 81, 83, 87],
                11: [[0, 2], [21, 27], 81, 82],
                12: [[0, 2], [21, 24], 81],
                13: [[0, 3], 21, 81],
                28: [[0, 2], 22, 23, [25, 28]],
                90: [0, [4, 6], 21],
              },
              43: {
                0: [0],
                1: [[0, 5], 11, 12, 21, 22, 24, 81],
                2: [[0, 4], 11, 21, [23, 25], 81],
                3: [[0, 2], 4, 21, 81, 82],
                4: [0, 1, [5, 8], 12, [21, 24], 26, 81, 82],
                5: [[0, 3], 11, [21, 25], [27, 29], 81],
                6: [[0, 3], 11, 21, 23, 24, 26, 81, 82],
                7: [[0, 3], [21, 26], 81],
                8: [[0, 2], 11, 21, 22],
                9: [[0, 3], [21, 23], 81],
                10: [[0, 3], [21, 28], 81],
                11: [
                  [0, 3],
                  [21, 29],
                ],
                12: [[0, 2], [21, 30], 81],
                13: [[0, 2], 21, 22, 81, 82],
                31: [0, 1, [22, 27], 30],
              },
              44: {
                0: [0],
                1: [[0, 7], [11, 16], 83, 84],
                2: [[0, 5], 21, 22, 24, 29, 32, 33, 81, 82],
                3: [0, 1, [3, 8]],
                4: [[0, 4]],
                5: [0, 1, [6, 15], 23, 82, 83],
                6: [0, 1, [4, 8]],
                7: [0, 1, [3, 5], 81, [83, 85]],
                8: [[0, 4], 11, 23, 25, [81, 83]],
                9: [[0, 3], 23, [81, 83]],
                12: [[0, 3], [23, 26], 83, 84],
                13: [[0, 3], [22, 24], 81],
                14: [[0, 2], [21, 24], 26, 27, 81],
                15: [[0, 2], 21, 23, 81],
                16: [
                  [0, 2],
                  [21, 25],
                ],
                17: [[0, 2], 21, 23, 81],
                18: [[0, 3], 21, 23, [25, 27], 81, 82],
                19: [0],
                20: [0],
                51: [[0, 3], 21, 22],
                52: [[0, 3], 21, 22, 24, 81],
                53: [[0, 2], [21, 23], 81],
              },
              45: {
                0: [0],
                1: [
                  [0, 9],
                  [21, 27],
                ],
                2: [
                  [0, 5],
                  [21, 26],
                ],
                3: [[0, 5], 11, 12, [21, 32]],
                4: [0, 1, [3, 6], 11, [21, 23], 81],
                5: [[0, 3], 12, 21],
                6: [[0, 3], 21, 81],
                7: [[0, 3], 21, 22],
                8: [[0, 4], 21, 81],
                9: [[0, 3], [21, 24], 81],
                10: [
                  [0, 2],
                  [21, 31],
                ],
                11: [
                  [0, 2],
                  [21, 23],
                ],
                12: [[0, 2], [21, 29], 81],
                13: [[0, 2], [21, 24], 81],
                14: [[0, 2], [21, 25], 81],
              },
              46: {
                0: [0],
                1: [0, 1, [5, 8]],
                2: [0, 1],
                3: [0, [21, 23]],
                90: [
                  [0, 3],
                  [5, 7],
                  [21, 39],
                ],
              },
              50: {
                0: [0],
                1: [[0, 19]],
                2: [0, [22, 38], [40, 43]],
                3: [0, [81, 84]],
              },
              51: {
                0: [0],
                1: [0, 1, [4, 8], [12, 15], [21, 24], 29, 31, 32, [81, 84]],
                3: [[0, 4], 11, 21, 22],
                4: [[0, 3], 11, 21, 22],
                5: [[0, 4], 21, 22, 24, 25],
                6: [0, 1, 3, 23, 26, [81, 83]],
                7: [0, 1, 3, 4, [22, 27], 81],
                8: [[0, 2], 11, 12, [21, 24]],
                9: [
                  [0, 4],
                  [21, 23],
                ],
                10: [[0, 2], 11, 24, 25, 28],
                11: [[0, 2], [11, 13], 23, 24, 26, 29, 32, 33, 81],
                13: [[0, 4], [21, 25], 81],
                14: [
                  [0, 2],
                  [21, 25],
                ],
                15: [
                  [0, 3],
                  [21, 29],
                ],
                16: [[0, 3], [21, 23], 81],
                17: [[0, 3], [21, 25], 81],
                18: [
                  [0, 3],
                  [21, 27],
                ],
                19: [
                  [0, 3],
                  [21, 23],
                ],
                20: [[0, 2], 21, 22, 81],
                32: [0, [21, 33]],
                33: [0, [21, 38]],
                34: [0, 1, [22, 37]],
              },
              52: {
                0: [0],
                1: [[0, 3], [11, 15], [21, 23], 81],
                2: [0, 1, 3, 21, 22],
                3: [[0, 3], [21, 30], 81, 82],
                4: [
                  [0, 2],
                  [21, 25],
                ],
                5: [
                  [0, 2],
                  [21, 27],
                ],
                6: [
                  [0, 3],
                  [21, 28],
                ],
                22: [0, 1, [22, 30]],
                23: [0, 1, [22, 28]],
                24: [0, 1, [22, 28]],
                26: [0, 1, [22, 36]],
                27: [[0, 2], 22, 23, [25, 32]],
              },
              53: {
                0: [0],
                1: [[0, 3], [11, 14], 21, 22, [24, 29], 81],
                3: [[0, 2], [21, 26], 28, 81],
                4: [
                  [0, 2],
                  [21, 28],
                ],
                5: [
                  [0, 2],
                  [21, 24],
                ],
                6: [
                  [0, 2],
                  [21, 30],
                ],
                7: [
                  [0, 2],
                  [21, 24],
                ],
                8: [
                  [0, 2],
                  [21, 29],
                ],
                9: [
                  [0, 2],
                  [21, 27],
                ],
                23: [0, 1, [22, 29], 31],
                25: [
                  [0, 4],
                  [22, 32],
                ],
                26: [0, 1, [21, 28]],
                27: [0, 1, [22, 30]],
                28: [0, 1, 22, 23],
                29: [0, 1, [22, 32]],
                31: [0, 2, 3, [22, 24]],
                34: [0, [21, 23]],
                33: [0, 21, [23, 25]],
                35: [0, [21, 28]],
              },
              54: {
                0: [0],
                1: [
                  [0, 2],
                  [21, 27],
                ],
                21: [0, [21, 29], 32, 33],
                22: [0, [21, 29], [31, 33]],
                23: [0, 1, [22, 38]],
                24: [0, [21, 31]],
                25: [0, [21, 27]],
                26: [0, [21, 27]],
              },
              61: {
                0: [0],
                1: [[0, 4], [11, 16], 22, [24, 26]],
                2: [[0, 4], 22],
                3: [
                  [0, 4],
                  [21, 24],
                  [26, 31],
                ],
                4: [[0, 4], [22, 31], 81],
                5: [[0, 2], [21, 28], 81, 82],
                6: [
                  [0, 2],
                  [21, 32],
                ],
                7: [
                  [0, 2],
                  [21, 30],
                ],
                8: [
                  [0, 2],
                  [21, 31],
                ],
                9: [
                  [0, 2],
                  [21, 29],
                ],
                10: [
                  [0, 2],
                  [21, 26],
                ],
              },
              62: {
                0: [0],
                1: [[0, 5], 11, [21, 23]],
                2: [0, 1],
                3: [[0, 2], 21],
                4: [
                  [0, 3],
                  [21, 23],
                ],
                5: [
                  [0, 3],
                  [21, 25],
                ],
                6: [
                  [0, 2],
                  [21, 23],
                ],
                7: [
                  [0, 2],
                  [21, 25],
                ],
                8: [
                  [0, 2],
                  [21, 26],
                ],
                9: [[0, 2], [21, 24], 81, 82],
                10: [
                  [0, 2],
                  [21, 27],
                ],
                11: [
                  [0, 2],
                  [21, 26],
                ],
                12: [
                  [0, 2],
                  [21, 28],
                ],
                24: [0, 21, [24, 29]],
                26: [0, 21, [23, 30]],
                29: [0, 1, [21, 27]],
                30: [0, 1, [21, 27]],
              },
              63: {
                0: [0],
                1: [
                  [0, 5],
                  [21, 23],
                ],
                2: [0, 2, [21, 25]],
                21: [0, [21, 23], [26, 28]],
                22: [0, [21, 24]],
                23: [0, [21, 24]],
                25: [0, [21, 25]],
                26: [0, [21, 26]],
                27: [0, 1, [21, 26]],
                28: [
                  [0, 2],
                  [21, 23],
                ],
              },
              64: {
                0: [0],
                1: [0, 1, [4, 6], 21, 22, 81],
                2: [[0, 3], 5, [21, 23]],
                3: [[0, 3], [21, 24], 81],
                4: [
                  [0, 2],
                  [21, 25],
                ],
                5: [[0, 2], 21, 22],
              },
              65: {
                0: [0],
                1: [[0, 9], 21],
                2: [[0, 5]],
                21: [0, 1, 22, 23],
                22: [0, 1, 22, 23],
                23: [[0, 3], [23, 25], 27, 28],
                28: [0, 1, [22, 29]],
                29: [0, 1, [22, 29]],
                30: [0, 1, [22, 24]],
                31: [0, 1, [21, 31]],
                32: [0, 1, [21, 27]],
                40: [0, 2, 3, [21, 28]],
                42: [[0, 2], 21, [23, 26]],
                43: [0, 1, [21, 26]],
                90: [[0, 4]],
                27: [[0, 2], 22, 23],
              },
              71: { 0: [0] },
              81: { 0: [0] },
              82: { 0: [0] },
            },
            d = parseInt(b.substr(0, 2), 10),
            e = parseInt(b.substr(2, 2), 10),
            f = parseInt(b.substr(4, 2), 10);
          if (!c[d] || !c[d][e]) return !1;
          for (var g = !1, h = c[d][e], i = 0; i < h.length; i++)
            if (
              (a.isArray(h[i]) && h[i][0] <= f && f <= h[i][1]) ||
              (!a.isArray(h[i]) && f === h[i])
            ) {
              g = !0;
              break;
            }
          if (!g) return !1;
          var j;
          j = 18 === b.length ? b.substr(6, 8) : "19" + b.substr(6, 6);
          var k = parseInt(j.substr(0, 4), 10),
            l = parseInt(j.substr(4, 2), 10),
            m = parseInt(j.substr(6, 2), 10);
          if (!FormValidation.Helper.date(k, l, m)) return !1;
          if (18 === b.length) {
            var n = 0,
              o = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
            for (i = 0; 17 > i; i++) n += parseInt(b.charAt(i), 10) * o[i];
            n = (12 - (n % 11)) % 11;
            var p =
              "X" !== b.charAt(17).toUpperCase()
                ? parseInt(b.charAt(17), 10)
                : 10;
            return p === n;
          }
          return !0;
        },
        _cz: function (a) {
          if (!/^\d{9,10}$/.test(a)) return !1;
          var b = 1900 + parseInt(a.substr(0, 2), 10),
            c = (parseInt(a.substr(2, 2), 10) % 50) % 20,
            d = parseInt(a.substr(4, 2), 10);
          if (9 === a.length) {
            if ((b >= 1980 && (b -= 100), b > 1953)) return !1;
          } else 1954 > b && (b += 100);
          if (!FormValidation.Helper.date(b, c, d)) return !1;
          if (10 === a.length) {
            var e = parseInt(a.substr(0, 9), 10) % 11;
            return 1985 > b && (e %= 10), e + "" === a.substr(9, 1);
          }
          return !0;
        },
        _dk: function (a) {
          if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(a)) return !1;
          a = a.replace(/-/g, "");
          var b = parseInt(a.substr(0, 2), 10),
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10);
          switch (!0) {
            case -1 !== "5678".indexOf(a.charAt(6)) && d >= 58:
              d += 1800;
              break;
            case -1 !== "0123".indexOf(a.charAt(6)):
            case -1 !== "49".indexOf(a.charAt(6)) && d >= 37:
              d += 1900;
              break;
            default:
              d += 2e3;
          }
          return FormValidation.Helper.date(d, c, b);
        },
        _ee: function (a) {
          return this._lt(a);
        },
        _es: function (a) {
          var b = /^[0-9]{8}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(a),
            c = /^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[A-HJ-NP-TV-Z]$/.test(a),
            d = /^[A-HNPQS][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-J]$/.test(a);
          if (!b && !c && !d) return !1;
          a = a.replace(/-/g, "");
          var e;
          if (b || c) {
            var f = "XYZ".indexOf(a.charAt(0));
            return (
              -1 !== f && (a = f + a.substr(1) + ""),
              (e = parseInt(a.substr(0, 8), 10)),
              (e = "TRWAGMYFPDXBNJZSQVHLCKE"[e % 23]),
              e === a.substr(8, 1)
            );
          }
          e = a.substr(1, 7);
          for (var g = a[0], h = a.substr(-1), i = 0, j = 0; j < e.length; j++)
            if (j % 2 !== 0) i += parseInt(e[j], 10);
            else {
              var k = "" + 2 * parseInt(e[j], 10);
              (i += parseInt(k[0], 10)),
                2 === k.length && (i += parseInt(k[1], 10));
            }
          var l = i - 10 * Math.floor(i / 10);
          return (
            0 !== l && (l = 10 - l),
            -1 !== "KQS".indexOf(g)
              ? h === "JABCDEFGHI"[l]
              : -1 !== "ABEH".indexOf(g)
              ? h === "" + l
              : h === "" + l || h === "JABCDEFGHI"[l]
          );
        },
        _fi: function (a) {
          if (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(a))
            return !1;
          var b = parseInt(a.substr(0, 2), 10),
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10),
            e = { "+": 1800, "-": 1900, A: 2e3 };
          if (((d = e[a.charAt(6)] + d), !FormValidation.Helper.date(d, c, b)))
            return !1;
          var f = parseInt(a.substr(7, 3), 10);
          if (2 > f) return !1;
          var g = a.substr(0, 6) + a.substr(7, 3) + "";
          return (
            (g = parseInt(g, 10)),
            "0123456789ABCDEFHJKLMNPRSTUVWXY".charAt(g % 31) === a.charAt(10)
          );
        },
        _hr: function (a) {
          return /^[0-9]{11}$/.test(a)
            ? FormValidation.Helper.mod11And10(a)
            : !1;
        },
        _ie: function (a) {
          if (!/^\d{7}[A-W][AHWTX]?$/.test(a)) return !1;
          var b = function (a) {
            for (; a.length < 7; ) a = "0" + a;
            for (var b = "WABCDEFGHIJKLMNOPQRSTUV", c = 0, d = 0; 7 > d; d++)
              c += parseInt(a.charAt(d), 10) * (8 - d);
            return (c += 9 * b.indexOf(a.substr(7))), b[c % 23];
          };
          return 9 !== a.length || ("A" !== a.charAt(8) && "H" !== a.charAt(8))
            ? a.charAt(7) === b(a.substr(0, 7))
            : a.charAt(7) === b(a.substr(0, 7) + a.substr(8) + "");
        },
        _is: function (a) {
          if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(a)) return !1;
          a = a.replace(/-/g, "");
          var b = parseInt(a.substr(0, 2), 10),
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10),
            e = parseInt(a.charAt(9), 10);
          if (
            ((d = 9 === e ? 1900 + d : 100 * (20 + e) + d),
            !FormValidation.Helper.date(d, c, b, !0))
          )
            return !1;
          for (var f = 0, g = [3, 2, 7, 6, 5, 4, 3, 2], h = 0; 8 > h; h++)
            f += parseInt(a.charAt(h), 10) * g[h];
          return (f = 11 - (f % 11)), f + "" === a.charAt(8);
        },
        _lt: function (a) {
          if (!/^[0-9]{11}$/.test(a)) return !1;
          var b = parseInt(a.charAt(0), 10),
            c = parseInt(a.substr(1, 2), 10),
            d = parseInt(a.substr(3, 2), 10),
            e = parseInt(a.substr(5, 2), 10),
            f = b % 2 === 0 ? 17 + b / 2 : 17 + (b + 1) / 2;
          if (((c = 100 * f + c), !FormValidation.Helper.date(c, d, e, !0)))
            return !1;
          for (
            var g = 0, h = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1], i = 0;
            10 > i;
            i++
          )
            g += parseInt(a.charAt(i), 10) * h[i];
          if (((g %= 11), 10 !== g)) return g + "" === a.charAt(10);
          for (g = 0, h = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3], i = 0; 10 > i; i++)
            g += parseInt(a.charAt(i), 10) * h[i];
          return (g %= 11), 10 === g && (g = 0), g + "" === a.charAt(10);
        },
        _lv: function (a) {
          if (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(a)) return !1;
          a = a.replace(/\D/g, "");
          var b = parseInt(a.substr(0, 2), 10),
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10);
          if (
            ((d = d + 1800 + 100 * parseInt(a.charAt(6), 10)),
            !FormValidation.Helper.date(d, c, b, !0))
          )
            return !1;
          for (
            var e = 0, f = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9], g = 0;
            10 > g;
            g++
          )
            e += parseInt(a.charAt(g), 10) * f[g];
          return (e = ((e + 1) % 11) % 10), e + "" === a.charAt(10);
        },
        _nl: function (a) {
          for (; a.length < 9; ) a = "0" + a;
          if (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(a)) return !1;
          if (((a = a.replace(/\./g, "")), 0 === parseInt(a, 10))) return !1;
          for (var b = 0, c = a.length, d = 0; c - 1 > d; d++)
            b += (9 - d) * parseInt(a.charAt(d), 10);
          return (b %= 11), 10 === b && (b = 0), b + "" === a.charAt(c - 1);
        },
        _pl: function (a) {
          if (!/^[0-9]{11}$/.test(a)) return !1;
          for (
            var b = 0,
              c = a.length,
              d = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3, 7],
              e = 0;
            c - 1 > e;
            e++
          )
            b += d[e] * parseInt(a.charAt(e), 10);
          return (
            (b %= 10),
            0 === b && (b = 10),
            (b = 10 - b),
            b + "" === a.charAt(c - 1)
          );
        },
        _ro: function (a) {
          if (!/^[0-9]{13}$/.test(a)) return !1;
          var b = parseInt(a.charAt(0), 10);
          if (0 === b || 7 === b || 8 === b) return !1;
          var c = parseInt(a.substr(1, 2), 10),
            d = parseInt(a.substr(3, 2), 10),
            e = parseInt(a.substr(5, 2), 10),
            f = { 1: 1900, 2: 1900, 3: 1800, 4: 1800, 5: 2e3, 6: 2e3 };
          if (e > 31 && d > 12) return !1;
          if (
            9 !== b &&
            ((c = f[b + ""] + c), !FormValidation.Helper.date(c, d, e))
          )
            return !1;
          for (
            var g = 0,
              h = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9],
              i = a.length,
              j = 0;
            i - 1 > j;
            j++
          )
            g += parseInt(a.charAt(j), 10) * h[j];
          return (g %= 11), 10 === g && (g = 1), g + "" === a.charAt(i - 1);
        },
        _se: function (a) {
          if (!/^[0-9]{10}$/.test(a) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(a))
            return !1;
          a = a.replace(/[^0-9]/g, "");
          var b = parseInt(a.substr(0, 2), 10) + 1900,
            c = parseInt(a.substr(2, 2), 10),
            d = parseInt(a.substr(4, 2), 10);
          return FormValidation.Helper.date(b, c, d)
            ? FormValidation.Helper.luhn(a)
            : !1;
        },
        _sk: function (a) {
          return this._cz(a);
        },
        _sm: function (a) {
          return /^\d{5}$/.test(a);
        },
        _th: function (a) {
          if (13 !== a.length) return !1;
          for (var b = 0, c = 0; 12 > c; c++)
            b += parseInt(a.charAt(c), 10) * (13 - c);
          return (11 - (b % 11)) % 10 === parseInt(a.charAt(12), 10);
        },
        _za: function (a) {
          if (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(a)) return !1;
          var b = parseInt(a.substr(0, 2), 10),
            c = new Date().getFullYear() % 100,
            d = parseInt(a.substr(2, 2), 10),
            e = parseInt(a.substr(4, 2), 10);
          return (
            (b = b >= c ? b + 1900 : b + 2e3),
            FormValidation.Helper.date(b, d, e)
              ? FormValidation.Helper.luhn(a)
              : !1
          );
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { identical: { default: "Please enter the same value" } },
    })),
      (FormValidation.Validator.identical = {
        html5Attributes: { message: "message", field: "field" },
        init: function (a, b, c) {
          var d = a.getFieldElements(c.field);
          a.onLiveChange(d, "live_identical", function () {
            var c = a.getStatus(b, "identical");
            c !== a.STATUS_NOT_VALIDATED && a.revalidateField(b);
          });
        },
        destroy: function (a, b, c) {
          var d = a.getFieldElements(c.field);
          a.offLiveChange(d, "live_identical");
        },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "identical"),
            e = a.getFieldElements(c.field);
          if (null === e || 0 === e.length) return !0;
          var f = a.getFieldValue(e, "identical");
          return d === f
            ? (a.updateStatus(e, a.STATUS_VALID, "identical"), !0)
            : !1;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { imei: { default: "Please enter a valid IMEI number" } },
    })),
      (FormValidation.Validator.imei = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "imei");
          if ("" === c) return !0;
          switch (!0) {
            case /^\d{15}$/.test(c):
            case /^\d{2}-\d{6}-\d{6}-\d{1}$/.test(c):
            case /^\d{2}\s\d{6}\s\d{6}\s\d{1}$/.test(c):
              return (
                (c = c.replace(/[^0-9]/g, "")), FormValidation.Helper.luhn(c)
              );
            case /^\d{14}$/.test(c):
            case /^\d{16}$/.test(c):
            case /^\d{2}-\d{6}-\d{6}(|-\d{2})$/.test(c):
            case /^\d{2}\s\d{6}\s\d{6}(|\s\d{2})$/.test(c):
              return !0;
            default:
              return !1;
          }
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { imo: { default: "Please enter a valid IMO number" } },
    })),
      (FormValidation.Validator.imo = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "imo");
          if ("" === c) return !0;
          if (!/^IMO \d{7}$/i.test(c)) return !1;
          for (
            var d = 0, e = c.replace(/^.*(\d{7})$/, "$1"), f = 6;
            f >= 1;
            f--
          )
            d += e.slice(6 - f, -f) * (f + 1);
          return d % 10 === parseInt(e.charAt(6), 10);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { integer: { default: "Please enter a valid number" } },
    })),
      (FormValidation.Validator.integer = {
        enableByHtml5: function (a) {
          return (
            "number" === a.attr("type") &&
            (void 0 === a.attr("step") || a.attr("step") % 1 === 0)
          );
        },
        validate: function (a, b) {
          if (
            this.enableByHtml5(b) &&
            b.get(0).validity &&
            b.get(0).validity.badInput === !0
          )
            return !1;
          var c = a.getFieldValue(b, "integer");
          return "" === c ? !0 : /^(?:-?(?:0|[1-9][0-9]*))$/.test(c);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        ip: {
          default: "Please enter a valid IP address",
          ipv4: "Please enter a valid IPv4 address",
          ipv6: "Please enter a valid IPv6 address",
        },
      },
    })),
      (FormValidation.Validator.ip = {
        html5Attributes: { message: "message", ipv4: "ipv4", ipv6: "ipv6" },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "ip");
          if ("" === e) return !0;
          d = a.extend({}, { ipv4: !0, ipv6: !0 }, d);
          var f,
            g = b.getLocale(),
            h = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,
            i = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,
            j = !1;
          switch (!0) {
            case d.ipv4 && !d.ipv6:
              (j = h.test(e)),
                (f = d.message || FormValidation.I18n[g].ip.ipv4);
              break;
            case !d.ipv4 && d.ipv6:
              (j = i.test(e)),
                (f = d.message || FormValidation.I18n[g].ip.ipv6);
              break;
            case d.ipv4 && d.ipv6:
            default:
              (j = h.test(e) || i.test(e)),
                (f = d.message || FormValidation.I18n[g].ip["default"]);
          }
          return { valid: j, message: f };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { isbn: { default: "Please enter a valid ISBN number" } },
    })),
      (FormValidation.Validator.isbn = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "isbn");
          if ("" === c) return !0;
          var d;
          switch (!0) {
            case /^\d{9}[\dX]$/.test(c):
            case 13 === c.length && /^(\d+)-(\d+)-(\d+)-([\dX])$/.test(c):
            case 13 === c.length && /^(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(c):
              d = "ISBN10";
              break;
            case /^(978|979)\d{9}[\dX]$/.test(c):
            case 17 === c.length &&
              /^(978|979)-(\d+)-(\d+)-(\d+)-([\dX])$/.test(c):
            case 17 === c.length &&
              /^(978|979)\s(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(c):
              d = "ISBN13";
              break;
            default:
              return !1;
          }
          c = c.replace(/[^0-9X]/gi, "");
          var e,
            f,
            g = c.split(""),
            h = g.length,
            i = 0;
          switch (d) {
            case "ISBN10":
              for (i = 0, e = 0; h - 1 > e; e++)
                i += parseInt(g[e], 10) * (10 - e);
              return (
                (f = 11 - (i % 11)),
                11 === f ? (f = 0) : 10 === f && (f = "X"),
                f + "" === g[h - 1]
              );
            case "ISBN13":
              for (i = 0, e = 0; h - 1 > e; e++)
                i += e % 2 === 0 ? parseInt(g[e], 10) : 3 * parseInt(g[e], 10);
              return (
                (f = 10 - (i % 10)), 10 === f && (f = "0"), f + "" === g[h - 1]
              );
            default:
              return !1;
          }
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { isin: { default: "Please enter a valid ISIN number" } },
    })),
      (FormValidation.Validator.isin = {
        COUNTRY_CODES:
          "AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW",
        validate: function (a, b) {
          var c = a.getFieldValue(b, "isin");
          if ("" === c) return !0;
          c = c.toUpperCase();
          var d = new RegExp("^(" + this.COUNTRY_CODES + ")[0-9A-Z]{10}$");
          if (!d.test(c)) return !1;
          for (var e = "", f = c.length, g = 0; f - 1 > g; g++) {
            var h = c.charCodeAt(g);
            e += h > 57 ? (h - 55).toString() : c.charAt(g);
          }
          var i = "",
            j = e.length,
            k = j % 2 !== 0 ? 0 : 1;
          for (g = 0; j > g; g++)
            i += parseInt(e[g], 10) * (g % 2 === k ? 2 : 1) + "";
          var l = 0;
          for (g = 0; g < i.length; g++) l += parseInt(i.charAt(g), 10);
          return (l = (10 - (l % 10)) % 10), l + "" === c.charAt(f - 1);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { ismn: { default: "Please enter a valid ISMN number" } },
    })),
      (FormValidation.Validator.ismn = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "ismn");
          if ("" === c) return !0;
          var d;
          switch (!0) {
            case /^M\d{9}$/.test(c):
            case /^M-\d{4}-\d{4}-\d{1}$/.test(c):
            case /^M\s\d{4}\s\d{4}\s\d{1}$/.test(c):
              d = "ISMN10";
              break;
            case /^9790\d{9}$/.test(c):
            case /^979-0-\d{4}-\d{4}-\d{1}$/.test(c):
            case /^979\s0\s\d{4}\s\d{4}\s\d{1}$/.test(c):
              d = "ISMN13";
              break;
            default:
              return !1;
          }
          "ISMN10" === d && (c = "9790" + c.substr(1)),
            (c = c.replace(/[^0-9]/gi, ""));
          for (var e = c.length, f = 0, g = [1, 3], h = 0; e - 1 > h; h++)
            f += parseInt(c.charAt(h), 10) * g[h % 2];
          return (f = 10 - (f % 10)), f + "" === c.charAt(e - 1);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { issn: { default: "Please enter a valid ISSN number" } },
    })),
      (FormValidation.Validator.issn = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "issn");
          if ("" === c) return !0;
          if (!/^\d{4}\-\d{3}[\dX]$/.test(c)) return !1;
          c = c.replace(/[^0-9X]/gi, "");
          var d = c.split(""),
            e = d.length,
            f = 0;
          "X" === d[7] && (d[7] = 10);
          for (var g = 0; e > g; g++) f += parseInt(d[g], 10) * (8 - g);
          return f % 11 === 0;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        lessThan: {
          default: "Please enter a value less than or equal to %s",
          notInclusive: "Please enter a value less than %s",
        },
      },
    })),
      (FormValidation.Validator.lessThan = {
        html5Attributes: {
          message: "message",
          value: "value",
          inclusive: "inclusive",
        },
        enableByHtml5: function (a) {
          var b = a.attr("type"),
            c = a.attr("max");
          return c && "date" !== b ? { value: c } : !1;
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "lessThan");
          if ("" === e) return !0;
          if (((e = this._format(e)), !a.isNumeric(e))) return !1;
          var f = b.getLocale(),
            g = a.isNumeric(d.value) ? d.value : b.getDynamicOption(c, d.value),
            h = this._format(g);
          return (
            (e = parseFloat(e)),
            d.inclusive === !0 || void 0 === d.inclusive
              ? {
                  valid: h >= e,
                  message: FormValidation.Helper.format(
                    d.message || FormValidation.I18n[f].lessThan["default"],
                    g
                  ),
                }
              : {
                  valid: h > e,
                  message: FormValidation.Helper.format(
                    d.message || FormValidation.I18n[f].lessThan.notInclusive,
                    g
                  ),
                }
          );
        },
        _format: function (a) {
          return (a + "").replace(",", ".");
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { mac: { default: "Please enter a valid MAC address" } },
    })),
      (FormValidation.Validator.mac = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "mac");
          return "" === c ? !0 : /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/.test(c);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { meid: { default: "Please enter a valid MEID number" } },
    })),
      (FormValidation.Validator.meid = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "meid");
          if ("" === c) return !0;
          switch (!0) {
            case /^[0-9A-F]{15}$/i.test(c):
            case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}[- ][0-9A-F]$/i.test(
              c
            ):
            case /^\d{19}$/.test(c):
            case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}[- ]\d$/.test(c):
              var d = c.charAt(c.length - 1);
              if (((c = c.replace(/[- ]/g, "")), c.match(/^\d*$/i)))
                return FormValidation.Helper.luhn(c);
              c = c.slice(0, -1);
              for (var e = "", f = 1; 13 >= f; f += 2)
                e += (2 * parseInt(c.charAt(f), 16)).toString(16);
              var g = 0;
              for (f = 0; f < e.length; f++) g += parseInt(e.charAt(f), 16);
              return g % 10 === 0
                ? "0" === d
                : d === (2 * (10 * Math.floor((g + 10) / 10) - g)).toString(16);
            case /^[0-9A-F]{14}$/i.test(c):
            case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}$/i.test(c):
            case /^\d{18}$/.test(c):
            case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}$/.test(c):
              return !0;
            default:
              return !1;
          }
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { notEmpty: { default: "Please enter a value" } },
    })),
      (FormValidation.Validator.notEmpty = {
        enableByHtml5: function (a) {
          var b = a.attr("required") + "";
          return "required" === b || "true" === b;
        },
        validate: function (b, c) {
          var d = c.attr("type");
          if ("radio" === d || "checkbox" === d) {
            var e = b.getNamespace();
            return (
              b
                .getFieldElements(c.attr("data-" + e + "-field"))
                .filter(":checked").length > 0
            );
          }
          if (
            "number" === d &&
            c.get(0).validity &&
            c.get(0).validity.badInput === !0
          )
            return !0;
          var f = b.getFieldValue(c, "notEmpty");
          return "" !== a.trim(f);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { numeric: { default: "Please enter a valid float number" } },
    })),
      (FormValidation.Validator.numeric = {
        html5Attributes: { message: "message", separator: "separator" },
        enableByHtml5: function (a) {
          return (
            "number" === a.attr("type") &&
            void 0 !== a.attr("step") &&
            a.attr("step") % 1 !== 0
          );
        },
        validate: function (a, b, c) {
          if (
            this.enableByHtml5(b) &&
            b.get(0).validity &&
            b.get(0).validity.badInput === !0
          )
            return !1;
          var d = a.getFieldValue(b, "numeric");
          if ("" === d) return !0;
          var e = c.separator || ".";
          return (
            "." !== e && (d = d.replace(e, ".")),
            !isNaN(parseFloat(d)) && isFinite(d)
          );
        },
      });
  })(jQuery),
  (function (a) {
    FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        phone: {
          default: "Please enter a valid phone number",
          country: "Please enter a valid phone number in %s",
          countries: {
            AE: "United Arab Emirates",
            BG: "Bulgaria",
            BR: "Brazil",
            CN: "China",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            ES: "Spain",
            FR: "France",
            GB: "United Kingdom",
            IN: "India",
            MA: "Morocco",
            NL: "Netherlands",
            PK: "Pakistan",
            RO: "Romania",
            RU: "Russia",
            SK: "Slovakia",
            TH: "Thailand",
            US: "USA",
            VE: "Venezuela",
          },
        },
      },
    });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        regexp: { default: "Please enter a value matching the pattern" },
      },
    })),
      (FormValidation.Validator.regexp = {
        html5Attributes: { message: "message", regexp: "regexp" },
        enableByHtml5: function (a) {
          var b = a.attr("pattern");
          return b ? { regexp: b } : !1;
        },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "regexp");
          if ("" === d) return !0;
          var e = "string" == typeof c.regexp ? new RegExp(c.regexp) : c.regexp;
          return e.test(d);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { remote: { default: "Please enter a valid value" } },
    })),
      (FormValidation.Validator.remote = {
        html5Attributes: {
          crossdomain: "crossDomain",
          data: "data",
          datatype: "dataType",
          delay: "delay",
          message: "message",
          name: "name",
          type: "type",
          url: "url",
          validkey: "validKey",
        },
        destroy: function (a, b) {
          var c = a.getNamespace(),
            d = b.data(c + ".remote.timer");
          d && (clearTimeout(d), b.removeData(c + ".remote.timer"));
        },
        validate: function (b, c, d) {
          function e() {
            var b = a.ajax(m);
            return (
              b
                .success(function (a) {
                  (a.valid =
                    a[l] === !0 || "true" === a[l]
                      ? !0
                      : a[l] === !1 || "false" === a[l]
                      ? !1
                      : null),
                    h.resolve(c, "remote", a);
                })
                .error(function () {
                  h.resolve(c, "remote", { valid: !1 });
                }),
              h.fail(function () {
                b.abort();
              }),
              h
            );
          }
          var f = b.getNamespace(),
            g = b.getFieldValue(c, "remote"),
            h = new a.Deferred();
          if ("" === g) return h.resolve(c, "remote", { valid: !0 }), h;
          var i = c.attr("data-" + f + "-field"),
            j = d.data || {},
            k = d.url,
            l = d.validKey || "valid";
          "function" == typeof j && (j = j.call(this, b)),
            "string" == typeof j && (j = JSON.parse(j)),
            "function" == typeof k && (k = k.call(this, b)),
            (j[d.name || i] = g);
          var m = {
            data: j,
            dataType: d.dataType || "json",
            headers: d.headers || {},
            type: d.type || "GET",
            url: k,
          };
          return (
            null !== d.crossDomain &&
              (m.crossDomain =
                d.crossDomain === !0 || "true" === d.crossDomain),
            d.delay
              ? (c.data(f + ".remote.timer") &&
                  clearTimeout(c.data(f + ".remote.timer")),
                c.data(f + ".remote.timer", setTimeout(e, d.delay)),
                h)
              : e()
          );
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { rtn: { default: "Please enter a valid RTN number" } },
    })),
      (FormValidation.Validator.rtn = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "rtn");
          if ("" === c) return !0;
          if (!/^\d{9}$/.test(c)) return !1;
          for (var d = 0, e = 0; e < c.length; e += 3)
            d +=
              3 * parseInt(c.charAt(e), 10) +
              7 * parseInt(c.charAt(e + 1), 10) +
              parseInt(c.charAt(e + 2), 10);
          return 0 !== d && d % 10 === 0;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { sedol: { default: "Please enter a valid SEDOL number" } },
    })),
      (FormValidation.Validator.sedol = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "sedol");
          if ("" === c) return !0;
          if (((c = c.toUpperCase()), !/^[0-9A-Z]{7}$/.test(c))) return !1;
          for (
            var d = 0, e = [1, 3, 1, 7, 3, 9, 1], f = c.length, g = 0;
            f - 1 > g;
            g++
          )
            d += e[g] * parseInt(c.charAt(g), 36);
          return (d = (10 - (d % 10)) % 10), d + "" === c.charAt(f - 1);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { siren: { default: "Please enter a valid SIREN number" } },
    })),
      (FormValidation.Validator.siren = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "siren");
          return "" === c
            ? !0
            : /^\d{9}$/.test(c)
            ? FormValidation.Helper.luhn(c)
            : !1;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { siret: { default: "Please enter a valid SIRET number" } },
    })),
      (FormValidation.Validator.siret = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "siret");
          if ("" === c) return !0;
          for (var d, e = 0, f = c.length, g = 0; f > g; g++)
            (d = parseInt(c.charAt(g), 10)),
              g % 2 === 0 && ((d = 2 * d), d > 9 && (d -= 9)),
              (e += d);
          return e % 10 === 0;
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { step: { default: "Please enter a valid step of %s" } },
    })),
      (FormValidation.Validator.step = {
        html5Attributes: {
          message: "message",
          base: "baseValue",
          step: "step",
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "step");
          if ("" === e) return !0;
          if (
            ((d = a.extend({}, { baseValue: 0, step: 1 }, d)),
            (e = parseFloat(e)),
            !a.isNumeric(e))
          )
            return !1;
          var f = function (a, b) {
              var c = Math.pow(10, b);
              a *= c;
              var d = (a > 0) | -(0 > a),
                e = a % 1 === 0.5 * d;
              return e ? (Math.floor(a) + (d > 0)) / c : Math.round(a) / c;
            },
            g = function (a, b) {
              if (0 === b) return 1;
              var c = (a + "").split("."),
                d = (b + "").split("."),
                e =
                  (1 === c.length ? 0 : c[1].length) +
                  (1 === d.length ? 0 : d[1].length);
              return f(a - b * Math.floor(a / b), e);
            },
            h = b.getLocale(),
            i = g(e - d.baseValue, d.step);
          return {
            valid: 0 === i || i === d.step,
            message: FormValidation.Helper.format(
              d.message || FormValidation.I18n[h].step["default"],
              [d.step]
            ),
          };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        stringCase: {
          default: "Please enter only lowercase characters",
          upper: "Please enter only uppercase characters",
        },
      },
    })),
      (FormValidation.Validator.stringCase = {
        html5Attributes: { message: "message", case: "case" },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "stringCase");
          if ("" === d) return !0;
          var e = a.getLocale(),
            f = (c["case"] || "lower").toLowerCase();
          return {
            valid:
              "upper" === f ? d === d.toUpperCase() : d === d.toLowerCase(),
            message:
              c.message ||
              ("upper" === f
                ? FormValidation.I18n[e].stringCase.upper
                : FormValidation.I18n[e].stringCase["default"]),
          };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        stringLength: {
          default: "Please enter a value with valid length",
          less: "Please enter less than %s characters",
          more: "Please enter more than %s characters",
          between: "Please enter value between %s and %s characters long",
        },
      },
    })),
      (FormValidation.Validator.stringLength = {
        html5Attributes: {
          message: "message",
          min: "min",
          max: "max",
          trim: "trim",
          utf8bytes: "utf8Bytes",
        },
        enableByHtml5: function (b) {
          var c = {},
            d = b.attr("maxlength"),
            e = b.attr("minlength");
          return (
            d && (c.max = parseInt(d, 10)),
            e && (c.min = parseInt(e, 10)),
            a.isEmptyObject(c) ? !1 : c
          );
        },
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "stringLength");
          if (
            ((d.trim === !0 || "true" === d.trim) && (e = a.trim(e)), "" === e)
          )
            return !0;
          var f = b.getLocale(),
            g = a.isNumeric(d.min) ? d.min : b.getDynamicOption(c, d.min),
            h = a.isNumeric(d.max) ? d.max : b.getDynamicOption(c, d.max),
            i = function (a) {
              for (var b = a.length, c = a.length - 1; c >= 0; c--) {
                var d = a.charCodeAt(c);
                d > 127 && 2047 >= d ? b++ : d > 2047 && 65535 >= d && (b += 2),
                  d >= 56320 && 57343 >= d && c--;
              }
              return b;
            },
            j = d.utf8Bytes ? i(e) : e.length,
            k = !0,
            l = d.message || FormValidation.I18n[f].stringLength["default"];
          switch (
            (((g && j < parseInt(g, 10)) || (h && j > parseInt(h, 10))) &&
              (k = !1),
            !0)
          ) {
            case !!g && !!h:
              l = FormValidation.Helper.format(
                d.message || FormValidation.I18n[f].stringLength.between,
                [parseInt(g, 10), parseInt(h, 10)]
              );
              break;
            case !!g:
              l = FormValidation.Helper.format(
                d.message || FormValidation.I18n[f].stringLength.more,
                parseInt(g, 10)
              );
              break;
            case !!h:
              l = FormValidation.Helper.format(
                d.message || FormValidation.I18n[f].stringLength.less,
                parseInt(h, 10)
              );
          }
          return { valid: k, message: l };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { uri: { default: "Please enter a valid URI" } },
    })),
      (FormValidation.Validator.uri = {
        html5Attributes: {
          message: "message",
          allowlocal: "allowLocal",
          allowemptyprotocol: "allowEmptyProtocol",
          protocol: "protocol",
        },
        enableByHtml5: function (a) {
          return "url" === a.attr("type");
        },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "uri");
          if ("" === d) return !0;
          var e = c.allowLocal === !0 || "true" === c.allowLocal,
            f = c.allowEmptyProtocol === !0 || "true" === c.allowEmptyProtocol,
            g = (c.protocol || "http, https, ftp")
              .split(",")
              .join("|")
              .replace(/\s/g, ""),
            h = new RegExp(
              "^(?:(?:" +
                g +
                ")://)" +
                (f ? "?" : "") +
                "(?:\\S+(?::\\S*)?@)?(?:" +
                (e
                  ? ""
                  : "(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})") +
                "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-?)*[a-z\\u00a1-\\uffff0-9])*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))" +
                (e ? "?" : "") +
                ")(?::\\d{2,5})?(?:/[^\\s]*)?$",
              "i"
            );
          return h.test(d);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        uuid: {
          default: "Please enter a valid UUID number",
          version: "Please enter a valid UUID version %s number",
        },
      },
    })),
      (FormValidation.Validator.uuid = {
        html5Attributes: { message: "message", version: "version" },
        validate: function (a, b, c) {
          var d = a.getFieldValue(b, "uuid");
          if ("" === d) return !0;
          var e = a.getLocale(),
            f = {
              3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
              4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
              5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
              all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
            },
            g = c.version ? c.version + "" : "all";
          return {
            valid: null === f[g] ? !0 : f[g].test(d),
            message: c.version
              ? FormValidation.Helper.format(
                  c.message || FormValidation.I18n[e].uuid.version,
                  c.version
                )
              : c.message || FormValidation.I18n[e].uuid["default"],
          };
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        vat: {
          default: "Please enter a valid VAT number",
          country: "Please enter a valid VAT number in %s",
          countries: {
            AT: "Austria",
            BE: "Belgium",
            BG: "Bulgaria",
            BR: "Brazil",
            CH: "Switzerland",
            CY: "Cyprus",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            FR: "France",
            GB: "United Kingdom",
            GR: "Greek",
            EL: "Greek",
            HU: "Hungary",
            HR: "Croatia",
            IE: "Ireland",
            IS: "Iceland",
            IT: "Italy",
            LT: "Lithuania",
            LU: "Luxembourg",
            LV: "Latvia",
            MT: "Malta",
            NL: "Netherlands",
            NO: "Norway",
            PL: "Poland",
            PT: "Portugal",
            RO: "Romania",
            RU: "Russia",
            RS: "Serbia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            VE: "Venezuela",
            ZA: "South Africa",
          },
        },
      },
    })),
      (FormValidation.Validator.vat = {
        html5Attributes: { message: "message", country: "country" },
        COUNTRY_CODES: [
          "AT",
          "BE",
          "BG",
          "BR",
          "CH",
          "CY",
          "CZ",
          "DE",
          "DK",
          "EE",
          "EL",
          "ES",
          "FI",
          "FR",
          "GB",
          "GR",
          "HR",
          "HU",
          "IE",
          "IS",
          "IT",
          "LT",
          "LU",
          "LV",
          "MT",
          "NL",
          "NO",
          "PL",
          "PT",
          "RO",
          "RU",
          "RS",
          "SE",
          "SK",
          "SI",
          "VE",
          "ZA",
        ],
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "vat");
          if ("" === e) return !0;
          var f = b.getLocale(),
            g = d.country;
          if (
            (g
              ? ("string" != typeof g ||
                  -1 === a.inArray(g.toUpperCase(), this.COUNTRY_CODES)) &&
                (g = b.getDynamicOption(c, g))
              : (g = e.substr(0, 2)),
            -1 === a.inArray(g, this.COUNTRY_CODES))
          )
            return !0;
          var h = ["_", g.toLowerCase()].join("");
          return this[h](e)
            ? !0
            : {
                valid: !1,
                message: FormValidation.Helper.format(
                  d.message || FormValidation.I18n[f].vat.country,
                  FormValidation.I18n[f].vat.countries[g.toUpperCase()]
                ),
              };
        },
        _at: function (a) {
          if (
            (/^ATU[0-9]{8}$/.test(a) && (a = a.substr(2)),
            !/^U[0-9]{8}$/.test(a))
          )
            return !1;
          a = a.substr(1);
          for (var b = 0, c = [1, 2, 1, 2, 1, 2, 1], d = 0, e = 0; 7 > e; e++)
            (d = parseInt(a.charAt(e), 10) * c[e]),
              d > 9 && (d = Math.floor(d / 10) + (d % 10)),
              (b += d);
          return (
            (b = 10 - ((b + 4) % 10)),
            10 === b && (b = 0),
            b + "" === a.substr(7, 1)
          );
        },
        _be: function (a) {
          if (
            (/^BE[0]{0,1}[0-9]{9}$/.test(a) && (a = a.substr(2)),
            !/^[0]{0,1}[0-9]{9}$/.test(a))
          )
            return !1;
          if ((9 === a.length && (a = "0" + a), "0" === a.substr(1, 1)))
            return !1;
          var b = parseInt(a.substr(0, 8), 10) + parseInt(a.substr(8, 2), 10);
          return b % 97 === 0;
        },
        _bg: function (a) {
          if (
            (/^BG[0-9]{9,10}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{9,10}$/.test(a))
          )
            return !1;
          var b = 0,
            c = 0;
          if (9 === a.length) {
            for (c = 0; 8 > c; c++) b += parseInt(a.charAt(c), 10) * (c + 1);
            if (((b %= 11), 10 === b))
              for (b = 0, c = 0; 8 > c; c++)
                b += parseInt(a.charAt(c), 10) * (c + 3);
            return (b %= 10), b + "" === a.substr(8);
          }
          if (10 === a.length) {
            var d = function (a) {
                var b = parseInt(a.substr(0, 2), 10) + 1900,
                  c = parseInt(a.substr(2, 2), 10),
                  d = parseInt(a.substr(4, 2), 10);
                if (
                  (c > 40
                    ? ((b += 100), (c -= 40))
                    : c > 20 && ((b -= 100), (c -= 20)),
                  !FormValidation.Helper.date(b, c, d))
                )
                  return !1;
                for (
                  var e = 0, f = [2, 4, 8, 5, 10, 9, 7, 3, 6], g = 0;
                  9 > g;
                  g++
                )
                  e += parseInt(a.charAt(g), 10) * f[g];
                return (e = (e % 11) % 10), e + "" === a.substr(9, 1);
              },
              e = function (a) {
                for (
                  var b = 0, c = [21, 19, 17, 13, 11, 9, 7, 3, 1], d = 0;
                  9 > d;
                  d++
                )
                  b += parseInt(a.charAt(d), 10) * c[d];
                return (b %= 10), b + "" === a.substr(9, 1);
              },
              f = function (a) {
                for (
                  var b = 0, c = [4, 3, 2, 7, 6, 5, 4, 3, 2], d = 0;
                  9 > d;
                  d++
                )
                  b += parseInt(a.charAt(d), 10) * c[d];
                return (
                  (b = 11 - (b % 11)),
                  10 === b
                    ? !1
                    : (11 === b && (b = 0), b + "" === a.substr(9, 1))
                );
              };
            return d(a) || e(a) || f(a);
          }
          return !1;
        },
        _br: function (a) {
          if ("" === a) return !0;
          var b = a.replace(/[^\d]+/g, "");
          if ("" === b || 14 !== b.length) return !1;
          if (
            "00000000000000" === b ||
            "11111111111111" === b ||
            "22222222222222" === b ||
            "33333333333333" === b ||
            "44444444444444" === b ||
            "55555555555555" === b ||
            "66666666666666" === b ||
            "77777777777777" === b ||
            "88888888888888" === b ||
            "99999999999999" === b
          )
            return !1;
          for (
            var c = b.length - 2,
              d = b.substring(0, c),
              e = b.substring(c),
              f = 0,
              g = c - 7,
              h = c;
            h >= 1;
            h--
          )
            (f += parseInt(d.charAt(c - h), 10) * g--), 2 > g && (g = 9);
          var i = 2 > f % 11 ? 0 : 11 - (f % 11);
          if (i !== parseInt(e.charAt(0), 10)) return !1;
          for (
            c += 1, d = b.substring(0, c), f = 0, g = c - 7, h = c;
            h >= 1;
            h--
          )
            (f += parseInt(d.charAt(c - h), 10) * g--), 2 > g && (g = 9);
          return (
            (i = 2 > f % 11 ? 0 : 11 - (f % 11)),
            i === parseInt(e.charAt(1), 10)
          );
        },
        _ch: function (a) {
          if (
            (/^CHE[0-9]{9}(MWST)?$/.test(a) && (a = a.substr(2)),
            !/^E[0-9]{9}(MWST)?$/.test(a))
          )
            return !1;
          a = a.substr(1);
          for (var b = 0, c = [5, 4, 3, 2, 7, 6, 5, 4], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return (
            (b = 11 - (b % 11)),
            10 === b ? !1 : (11 === b && (b = 0), b + "" === a.substr(8, 1))
          );
        },
        _cy: function (a) {
          if (
            (/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(a) && (a = a.substr(2)),
            !/^[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(a))
          )
            return !1;
          if ("12" === a.substr(0, 2)) return !1;
          for (
            var b = 0,
              c = {
                0: 1,
                1: 0,
                2: 5,
                3: 7,
                4: 9,
                5: 13,
                6: 15,
                7: 17,
                8: 19,
                9: 21,
              },
              d = 0;
            8 > d;
            d++
          ) {
            var e = parseInt(a.charAt(d), 10);
            d % 2 === 0 && (e = c[e + ""]), (b += e);
          }
          return (
            (b = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[b % 26]),
            b + "" === a.substr(8, 1)
          );
        },
        _cz: function (a) {
          if (
            (/^CZ[0-9]{8,10}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{8,10}$/.test(a))
          )
            return !1;
          var b = 0,
            c = 0;
          if (8 === a.length) {
            if (a.charAt(0) + "" == "9") return !1;
            for (b = 0, c = 0; 7 > c; c++)
              b += parseInt(a.charAt(c), 10) * (8 - c);
            return (
              (b = 11 - (b % 11)),
              10 === b && (b = 0),
              11 === b && (b = 1),
              b + "" === a.substr(7, 1)
            );
          }
          if (9 === a.length && a.charAt(0) + "" == "6") {
            for (b = 0, c = 0; 7 > c; c++)
              b += parseInt(a.charAt(c + 1), 10) * (8 - c);
            return (
              (b = 11 - (b % 11)),
              10 === b && (b = 0),
              11 === b && (b = 1),
              (b = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][b - 1]),
              b + "" === a.substr(8, 1)
            );
          }
          if (9 === a.length || 10 === a.length) {
            var d = 1900 + parseInt(a.substr(0, 2), 10),
              e = (parseInt(a.substr(2, 2), 10) % 50) % 20,
              f = parseInt(a.substr(4, 2), 10);
            if (9 === a.length) {
              if ((d >= 1980 && (d -= 100), d > 1953)) return !1;
            } else 1954 > d && (d += 100);
            if (!FormValidation.Helper.date(d, e, f)) return !1;
            if (10 === a.length) {
              var g = parseInt(a.substr(0, 9), 10) % 11;
              return 1985 > d && (g %= 10), g + "" === a.substr(9, 1);
            }
            return !0;
          }
          return !1;
        },
        _de: function (a) {
          return (
            /^DE[0-9]{9}$/.test(a) && (a = a.substr(2)),
            /^[0-9]{9}$/.test(a) ? FormValidation.Helper.mod11And10(a) : !1
          );
        },
        _dk: function (a) {
          if (
            (/^DK[0-9]{8}$/.test(a) && (a = a.substr(2)), !/^[0-9]{8}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [2, 7, 6, 5, 4, 3, 2, 1], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 11 === 0;
        },
        _ee: function (a) {
          if (
            (/^EE[0-9]{9}$/.test(a) && (a = a.substr(2)), !/^[0-9]{9}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [3, 7, 1, 3, 7, 1, 3, 7, 1], d = 0; 9 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 10 === 0;
        },
        _es: function (a) {
          if (
            (/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(a) && (a = a.substr(2)),
            !/^[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(a))
          )
            return !1;
          var b = function (a) {
              var b = parseInt(a.substr(0, 8), 10);
              return (
                (b = "TRWAGMYFPDXBNJZSQVHLCKE"[b % 23]),
                b + "" === a.substr(8, 1)
              );
            },
            c = function (a) {
              var b = ["XYZ".indexOf(a.charAt(0)), a.substr(1)].join("");
              return (
                (b = parseInt(b, 10)),
                (b = "TRWAGMYFPDXBNJZSQVHLCKE"[b % 23]),
                b + "" === a.substr(8, 1)
              );
            },
            d = function (a) {
              var b,
                c = a.charAt(0);
              if (-1 !== "KLM".indexOf(c))
                return (
                  (b = parseInt(a.substr(1, 8), 10)),
                  (b = "TRWAGMYFPDXBNJZSQVHLCKE"[b % 23]),
                  b + "" === a.substr(8, 1)
                );
              if (-1 !== "ABCDEFGHJNPQRSUVW".indexOf(c)) {
                for (
                  var d = 0, e = [2, 1, 2, 1, 2, 1, 2], f = 0, g = 0;
                  7 > g;
                  g++
                )
                  (f = parseInt(a.charAt(g + 1), 10) * e[g]),
                    f > 9 && (f = Math.floor(f / 10) + (f % 10)),
                    (d += f);
                return (
                  (d = 10 - (d % 10)),
                  10 === d && (d = 0),
                  d + "" === a.substr(8, 1) ||
                    "JABCDEFGHI"[d] === a.substr(8, 1)
                );
              }
              return !1;
            },
            e = a.charAt(0);
          return /^[0-9]$/.test(e) ? b(a) : /^[XYZ]$/.test(e) ? c(a) : d(a);
        },
        _fi: function (a) {
          if (
            (/^FI[0-9]{8}$/.test(a) && (a = a.substr(2)), !/^[0-9]{8}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [7, 9, 10, 5, 8, 4, 2, 1], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 11 === 0;
        },
        _fr: function (a) {
          if (
            (/^FR[0-9A-Z]{2}[0-9]{9}$/.test(a) && (a = a.substr(2)),
            !/^[0-9A-Z]{2}[0-9]{9}$/.test(a))
          )
            return !1;
          if (!FormValidation.Helper.luhn(a.substr(2))) return !1;
          if (/^[0-9]{2}$/.test(a.substr(0, 2)))
            return (
              a.substr(0, 2) === (parseInt(a.substr(2) + "12", 10) % 97) + ""
            );
          var b,
            c = "0123456789ABCDEFGHJKLMNPQRSTUVWXYZ";
          return (
            (b = /^[0-9]{1}$/.test(a.charAt(0))
              ? 24 * c.indexOf(a.charAt(0)) + c.indexOf(a.charAt(1)) - 10
              : 34 * c.indexOf(a.charAt(0)) + c.indexOf(a.charAt(1)) - 100),
            (parseInt(a.substr(2), 10) + 1 + Math.floor(b / 11)) % 11 === b % 11
          );
        },
        _gb: function (a) {
          if (
            ((/^GB[0-9]{9}$/.test(a) ||
              /^GB[0-9]{12}$/.test(a) ||
              /^GBGD[0-9]{3}$/.test(a) ||
              /^GBHA[0-9]{3}$/.test(a) ||
              /^GB(GD|HA)8888[0-9]{5}$/.test(a)) &&
              (a = a.substr(2)),
            !(
              /^[0-9]{9}$/.test(a) ||
              /^[0-9]{12}$/.test(a) ||
              /^GD[0-9]{3}$/.test(a) ||
              /^HA[0-9]{3}$/.test(a) ||
              /^(GD|HA)8888[0-9]{5}$/.test(a)
            ))
          )
            return !1;
          var b = a.length;
          if (5 === b) {
            var c = a.substr(0, 2),
              d = parseInt(a.substr(2), 10);
            return ("GD" === c && 500 > d) || ("HA" === c && d >= 500);
          }
          if (
            11 === b &&
            ("GD8888" === a.substr(0, 6) || "HA8888" === a.substr(0, 6))
          )
            return ("GD" === a.substr(0, 2) &&
              parseInt(a.substr(6, 3), 10) >= 500) ||
              ("HA" === a.substr(0, 2) && parseInt(a.substr(6, 3), 10) < 500)
              ? !1
              : parseInt(a.substr(6, 3), 10) % 97 ===
                  parseInt(a.substr(9, 2), 10);
          if (9 === b || 12 === b) {
            for (var e = 0, f = [8, 7, 6, 5, 4, 3, 2, 10, 1], g = 0; 9 > g; g++)
              e += parseInt(a.charAt(g), 10) * f[g];
            return (
              (e %= 97),
              parseInt(a.substr(0, 3), 10) >= 100
                ? 0 === e || 42 === e || 55 === e
                : 0 === e
            );
          }
          return !0;
        },
        _gr: function (a) {
          if (
            (/^(GR|EL)[0-9]{9}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{9}$/.test(a))
          )
            return !1;
          8 === a.length && (a = "0" + a);
          for (
            var b = 0, c = [256, 128, 64, 32, 16, 8, 4, 2], d = 0;
            8 > d;
            d++
          )
            b += parseInt(a.charAt(d), 10) * c[d];
          return (b = (b % 11) % 10), b + "" === a.substr(8, 1);
        },
        _el: function (a) {
          return this._gr(a);
        },
        _hu: function (a) {
          if (
            (/^HU[0-9]{8}$/.test(a) && (a = a.substr(2)), !/^[0-9]{8}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [9, 7, 3, 1, 9, 7, 3, 1], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 10 === 0;
        },
        _hr: function (a) {
          return (
            /^HR[0-9]{11}$/.test(a) && (a = a.substr(2)),
            /^[0-9]{11}$/.test(a) ? FormValidation.Helper.mod11And10(a) : !1
          );
        },
        _ie: function (a) {
          if (
            (/^IE[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(a) &&
              (a = a.substr(2)),
            !/^[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(a))
          )
            return !1;
          var b = function (a) {
            for (; a.length < 7; ) a = "0" + a;
            for (var b = "WABCDEFGHIJKLMNOPQRSTUV", c = 0, d = 0; 7 > d; d++)
              c += parseInt(a.charAt(d), 10) * (8 - d);
            return (c += 9 * b.indexOf(a.substr(7))), b[c % 23];
          };
          return /^[0-9]+$/.test(a.substr(0, 7))
            ? a.charAt(7) === b(a.substr(0, 7) + a.substr(8) + "")
            : -1 !== "ABCDEFGHIJKLMNOPQRSTUVWXYZ+*".indexOf(a.charAt(1))
            ? a.charAt(7) === b(a.substr(2, 5) + a.substr(0, 1) + "")
            : !0;
        },
        _is: function (a) {
          return (
            /^IS[0-9]{5,6}$/.test(a) && (a = a.substr(2)),
            /^[0-9]{5,6}$/.test(a)
          );
        },
        _it: function (a) {
          if (
            (/^IT[0-9]{11}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{11}$/.test(a))
          )
            return !1;
          if (0 === parseInt(a.substr(0, 7), 10)) return !1;
          var b = parseInt(a.substr(7, 3), 10);
          return 1 > b || (b > 201 && 999 !== b && 888 !== b)
            ? !1
            : FormValidation.Helper.luhn(a);
        },
        _lt: function (a) {
          if (
            (/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(a) &&
              (a = a.substr(2)),
            !/^([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(a))
          )
            return !1;
          var b,
            c = a.length,
            d = 0;
          for (b = 0; c - 1 > b; b++)
            d += parseInt(a.charAt(b), 10) * (1 + (b % 9));
          var e = d % 11;
          if (10 === e)
            for (d = 0, b = 0; c - 1 > b; b++)
              d += parseInt(a.charAt(b), 10) * (1 + ((b + 2) % 9));
          return (e = (e % 11) % 10), e + "" === a.charAt(c - 1);
        },
        _lu: function (a) {
          return (
            /^LU[0-9]{8}$/.test(a) && (a = a.substr(2)),
            /^[0-9]{8}$/.test(a)
              ? (parseInt(a.substr(0, 6), 10) % 89) + "" === a.substr(6, 2)
              : !1
          );
        },
        _lv: function (a) {
          if (
            (/^LV[0-9]{11}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{11}$/.test(a))
          )
            return !1;
          var b,
            c = parseInt(a.charAt(0), 10),
            d = 0,
            e = [],
            f = a.length;
          if (c > 3) {
            for (
              d = 0, e = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1], b = 0;
              f > b;
              b++
            )
              d += parseInt(a.charAt(b), 10) * e[b];
            return (d %= 11), 3 === d;
          }
          var g = parseInt(a.substr(0, 2), 10),
            h = parseInt(a.substr(2, 2), 10),
            i = parseInt(a.substr(4, 2), 10);
          if (
            ((i = i + 1800 + 100 * parseInt(a.charAt(6), 10)),
            !FormValidation.Helper.date(i, h, g))
          )
            return !1;
          for (
            d = 0, e = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9], b = 0;
            f - 1 > b;
            b++
          )
            d += parseInt(a.charAt(b), 10) * e[b];
          return (d = ((d + 1) % 11) % 10), d + "" === a.charAt(f - 1);
        },
        _mt: function (a) {
          if (
            (/^MT[0-9]{8}$/.test(a) && (a = a.substr(2)), !/^[0-9]{8}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [3, 4, 6, 7, 8, 9, 10, 1], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 37 === 0;
        },
        _nl: function (a) {
          if (
            (/^NL[0-9]{9}B[0-9]{2}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{9}B[0-9]{2}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [9, 8, 7, 6, 5, 4, 3, 2], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return (b %= 11), b > 9 && (b = 0), b + "" === a.substr(8, 1);
        },
        _no: function (a) {
          if (
            (/^NO[0-9]{9}$/.test(a) && (a = a.substr(2)), !/^[0-9]{9}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [3, 2, 7, 6, 5, 4, 3, 2], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return (
            (b = 11 - (b % 11)), 11 === b && (b = 0), b + "" === a.substr(8, 1)
          );
        },
        _pl: function (a) {
          if (
            (/^PL[0-9]{10}$/.test(a) && (a = a.substr(2)),
            !/^[0-9]{10}$/.test(a))
          )
            return !1;
          for (
            var b = 0, c = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1], d = 0;
            10 > d;
            d++
          )
            b += parseInt(a.charAt(d), 10) * c[d];
          return b % 11 === 0;
        },
        _pt: function (a) {
          if (
            (/^PT[0-9]{9}$/.test(a) && (a = a.substr(2)), !/^[0-9]{9}$/.test(a))
          )
            return !1;
          for (var b = 0, c = [9, 8, 7, 6, 5, 4, 3, 2], d = 0; 8 > d; d++)
            b += parseInt(a.charAt(d), 10) * c[d];
          return (
            (b = 11 - (b % 11)), b > 9 && (b = 0), b + "" === a.substr(8, 1)
          );
        },
        _ro: function (a) {
          if (
            (/^RO[1-9][0-9]{1,9}$/.test(a) && (a = a.substr(2)),
            !/^[1-9][0-9]{1,9}$/.test(a))
          )
            return !1;
          for (
            var b = a.length,
              c = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - b),
              d = 0,
              e = 0;
            b - 1 > e;
            e++
          )
            d += parseInt(a.charAt(e), 10) * c[e];
          return (d = ((10 * d) % 11) % 10), d + "" === a.substr(b - 1, 1);
        },
        _ru: function (a) {
          if (
            (/^RU([0-9]{10}|[0-9]{12})$/.test(a) && (a = a.substr(2)),
            !/^([0-9]{10}|[0-9]{12})$/.test(a))
          )
            return !1;
          var b = 0;
          if (10 === a.length) {
            var c = 0,
              d = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];
            for (b = 0; 10 > b; b++) c += parseInt(a.charAt(b), 10) * d[b];
            return (c %= 11), c > 9 && (c %= 10), c + "" === a.substr(9, 1);
          }
          if (12 === a.length) {
            var e = 0,
              f = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],
              g = 0,
              h = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];
            for (b = 0; 11 > b; b++)
              (e += parseInt(a.charAt(b), 10) * f[b]),
                (g += parseInt(a.charAt(b), 10) * h[b]);
            return (
              (e %= 11),
              e > 9 && (e %= 10),
              (g %= 11),
              g > 9 && (g %= 10),
              e + "" === a.substr(10, 1) && g + "" === a.substr(11, 1)
            );
          }
          return !1;
        },
        _rs: function (a) {
          if (
            (/^RS[0-9]{9}$/.test(a) && (a = a.substr(2)), !/^[0-9]{9}$/.test(a))
          )
            return !1;
          for (var b = 10, c = 0, d = 0; 8 > d; d++)
            (c = (parseInt(a.charAt(d), 10) + b) % 10),
              0 === c && (c = 10),
              (b = (2 * c) % 11);
          return (b + parseInt(a.substr(8, 1), 10)) % 10 === 1;
        },
        _se: function (a) {
          return (
            /^SE[0-9]{10}01$/.test(a) && (a = a.substr(2)),
            /^[0-9]{10}01$/.test(a)
              ? ((a = a.substr(0, 10)), FormValidation.Helper.luhn(a))
              : !1
          );
        },
        _si: function (a) {
          var b = a.match(/^(SI)?([1-9][0-9]{7})$/);
          if (!b) return !1;
          b[1] && (a = a.substr(2));
          for (var c = 0, d = [8, 7, 6, 5, 4, 3, 2], e = 0; 7 > e; e++)
            c += parseInt(a.charAt(e), 10) * d[e];
          return (
            (c = 11 - (c % 11)), 10 === c && (c = 0), c + "" === a.substr(7, 1)
          );
        },
        _sk: function (a) {
          return (
            /^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(a) && (a = a.substr(2)),
            /^[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(a)
              ? parseInt(a, 10) % 11 === 0
              : !1
          );
        },
        _ve: function (a) {
          if (
            (/^VE[VEJPG][0-9]{9}$/.test(a) && (a = a.substr(2)),
            !/^[VEJPG][0-9]{9}$/.test(a))
          )
            return !1;
          for (
            var b = { V: 4, E: 8, J: 12, P: 16, G: 20 },
              c = b[a.charAt(0)],
              d = [3, 2, 7, 6, 5, 4, 3, 2],
              e = 0;
            8 > e;
            e++
          )
            c += parseInt(a.charAt(e + 1), 10) * d[e];
          return (
            (c = 11 - (c % 11)),
            (11 === c || 10 === c) && (c = 0),
            c + "" === a.substr(9, 1)
          );
        },
        _za: function (a) {
          return (
            /^ZA4[0-9]{9}$/.test(a) && (a = a.substr(2)), /^4[0-9]{9}$/.test(a)
          );
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: { vin: { default: "Please enter a valid VIN number" } },
    })),
      (FormValidation.Validator.vin = {
        validate: function (a, b) {
          var c = a.getFieldValue(b, "vin");
          if ("" === c) return !0;
          if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(c))
            return !1;
          c = c.toUpperCase();
          for (
            var d = {
                A: 1,
                B: 2,
                C: 3,
                D: 4,
                E: 5,
                F: 6,
                G: 7,
                H: 8,
                J: 1,
                K: 2,
                L: 3,
                M: 4,
                N: 5,
                P: 7,
                R: 9,
                S: 2,
                T: 3,
                U: 4,
                V: 5,
                W: 6,
                X: 7,
                Y: 8,
                Z: 9,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
                6: 6,
                7: 7,
                8: 8,
                9: 9,
                0: 0,
              },
              e = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],
              f = 0,
              g = c.length,
              h = 0;
            g > h;
            h++
          )
            f += d[c.charAt(h) + ""] * e[h];
          var i = f % 11;
          return 10 === i && (i = "X"), i + "" === c.charAt(8);
        },
      });
  })(jQuery),
  (function (a) {
    (FormValidation.I18n = a.extend(!0, FormValidation.I18n || {}, {
      en_US: {
        zipCode: {
          default: "Please enter a valid postal code",
          country: "Please enter a valid postal code in %s",
          countries: {
            AT: "Austria",
            BG: "Bulgaria",
            BR: "Brazil",
            CA: "Canada",
            CH: "Switzerland",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            ES: "Spain",
            FR: "France",
            GB: "United Kingdom",
            IE: "Ireland",
            IN: "India",
            IT: "Italy",
            MA: "Morocco",
            NL: "Netherlands",
            PL: "Poland",
            PT: "Portugal",
            RO: "Romania",
            RU: "Russia",
            SE: "Sweden",
            SG: "Singapore",
            SK: "Slovakia",
            US: "USA",
          },
        },
      },
    })),
      (FormValidation.Validator.zipCode = {
        html5Attributes: { message: "message", country: "country" },
        COUNTRY_CODES: [
          "AT",
          "BG",
          "BR",
          "CA",
          "CH",
          "CZ",
          "DE",
          "DK",
          "ES",
          "FR",
          "GB",
          "IE",
          "IN",
          "IT",
          "MA",
          "NL",
          "PL",
          "PT",
          "RO",
          "RU",
          "SE",
          "SG",
          "SK",
          "US",
        ],
        validate: function (b, c, d) {
          var e = b.getFieldValue(c, "zipCode");
          if ("" === e || !d.country) return !0;
          var f = b.getLocale(),
            g = d.country;
          if (
            (("string" != typeof g ||
              -1 === a.inArray(g, this.COUNTRY_CODES)) &&
              (g = b.getDynamicOption(c, g)),
            !g || -1 === a.inArray(g.toUpperCase(), this.COUNTRY_CODES))
          )
            return !0;
          var h = !1;
          switch ((g = g.toUpperCase())) {
            case "AT":
              h = /^([1-9]{1})(\d{3})$/.test(e);
              break;
            case "BG":
              h = /^([1-9]{1}[0-9]{3})$/.test(a.trim(e));
              break;
            case "BR":
              h = /^(\d{2})([\.]?)(\d{3})([\-]?)(\d{3})$/.test(e);
              break;
            case "CA":
              h = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(
                e
              );
              break;
            case "CH":
              h = /^([1-9]{1})(\d{3})$/.test(e);
              break;
            case "CZ":
              h = /^(\d{3})([ ]?)(\d{2})$/.test(e);
              break;
            case "DE":
              h = /^(?!01000|99999)(0[1-9]\d{3}|[1-9]\d{4})$/.test(e);
              break;
            case "DK":
              h = /^(DK(-|\s)?)?\d{4}$/i.test(e);
              break;
            case "ES":
              h = /^(?:0[1-9]|[1-4][0-9]|5[0-2])\d{3}$/.test(e);
              break;
            case "FR":
              h = /^[0-9]{5}$/i.test(e);
              break;
            case "GB":
              h = this._gb(e);
              break;
            case "IN":
              h = /^\d{3}\s?\d{3}$/.test(e);
              break;
            case "IE":
              h = /^(D6W|[ACDEFHKNPRTVWXY]\d{2})\s[0-9ACDEFHKNPRTVWXY]{4}$/.test(
                e
              );
              break;
            case "IT":
              h = /^(I-|IT-)?\d{5}$/i.test(e);
              break;
            case "MA":
              h = /^[1-9][0-9]{4}$/i.test(e);
              break;
            case "NL":
              h = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(e);
              break;
            case "PL":
              h = /^[0-9]{2}\-[0-9]{3}$/.test(e);
              break;
            case "PT":
              h = /^[1-9]\d{3}-\d{3}$/.test(e);
              break;
            case "RO":
              h = /^(0[1-8]{1}|[1-9]{1}[0-5]{1})?[0-9]{4}$/i.test(e);
              break;
            case "RU":
              h = /^[0-9]{6}$/i.test(e);
              break;
            case "SE":
              h = /^(S-)?\d{3}\s?\d{2}$/i.test(e);
              break;
            case "SG":
              h = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\d{4})$/i.test(
                e
              );
              break;
            case "SK":
              h = /^(\d{3})([ ]?)(\d{2})$/.test(e);
              break;
            case "US":
            default:
              h = /^\d{4,5}([\-]?\d{4})?$/.test(e);
          }
          return {
            valid: h,
            message: FormValidation.Helper.format(
              d.message || FormValidation.I18n[f].zipCode.country,
              FormValidation.I18n[f].zipCode.countries[g]
            ),
          };
        },
        _gb: function (a) {
          for (
            var b = "[ABCDEFGHIJKLMNOPRSTUWYZ]",
              c = "[ABCDEFGHKLMNOPQRSTUVWXY]",
              d = "[ABCDEFGHJKPMNRSTUVWXY]",
              e = "[ABEHMNPRVWXY]",
              f = "[ABDEFGHJLNPQRSTUWXYZ]",
              g = [
                new RegExp(
                  "^(" +
                    b +
                    "{1}" +
                    c +
                    "?[0-9]{1,2})(\\s*)([0-9]{1}" +
                    f +
                    "{2})$",
                  "i"
                ),
                new RegExp(
                  "^(" +
                    b +
                    "{1}[0-9]{1}" +
                    d +
                    "{1})(\\s*)([0-9]{1}" +
                    f +
                    "{2})$",
                  "i"
                ),
                new RegExp(
                  "^(" +
                    b +
                    "{1}" +
                    c +
                    "{1}?[0-9]{1}" +
                    e +
                    "{1})(\\s*)([0-9]{1}" +
                    f +
                    "{2})$",
                  "i"
                ),
                new RegExp(
                  "^(BF1)(\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$",
                  "i"
                ),
                /^(GIR)(\s*)(0AA)$/i,
                /^(BFPO)(\s*)([0-9]{1,4})$/i,
                /^(BFPO)(\s*)(c\/o\s*[0-9]{1,3})$/i,
                /^([A-Z]{4})(\s*)(1ZZ)$/i,
                /^(AI-2640)$/i,
              ],
              h = 0;
            h < g.length;
            h++
          )
            if (g[h].test(a)) return !0;
          return !1;
        },
      });
  })(jQuery);
/*!
 * FormValidation (http://formvalidation.io)
 * The best jQuery plugin to validate form fields. Support Bootstrap, Foundation, Pure, SemanticUI, UIKit and custom frameworks
 *
 * @version     v0.6.2-dev, built on 2015-03-13 8:15:46 AM
 * @author      https://twitter.com/nghuuphuoc
 * @copyright   (c) 2013 - 2015 Nguyen Huu Phuoc
 * @license     http://formvalidation.io/license/
 */
!(function (a) {
  (FormValidation.Framework.Bootstrap = function (b, c, d) {
    (c = a.extend(
      !0,
      {
        button: { selector: '[type="submit"]', disabled: "disabled" },
        err: {
          clazz: "help-block",
          parent: "^(.*)col-(xs|sm|md|lg)-(offset-){0,1}[0-9]+(.*)$",
        },
        icon: {
          valid: null,
          invalid: null,
          validating: null,
          feedback: "form-control-feedback",
        },
        row: {
          selector: ".form-group",
          valid: "has-success",
          invalid: "has-error",
          feedback: "has-feedback",
        },
      },
      c
    )),
      FormValidation.Base.apply(this, [b, c, d]);
  }),
    (FormValidation.Framework.Bootstrap.prototype = a.extend(
      {},
      FormValidation.Base.prototype,
      {
        _fixIcon: function (a, b) {
          var c = this._namespace,
            d = a.attr("type"),
            e = a.attr("data-" + c + "-field"),
            f = this.options.fields[e].row || this.options.row.selector,
            g = a.closest(f);
          if ("checkbox" === d || "radio" === d) {
            var h = a.parent();
            h.hasClass(d)
              ? b.insertAfter(h)
              : h.parent().hasClass(d) && b.insertAfter(h.parent());
          }
          0 === g.find("label").length && b.addClass("fv-icon-no-label"),
            0 !== g.find(".input-group").length &&
              b
                .addClass("fv-bootstrap-icon-input-group")
                .insertAfter(g.find(".input-group").eq(0));
        },
        _createTooltip: function (a, b, c) {
          var d = this._namespace,
            e = a.data(d + ".icon");
          if (e)
            switch (c) {
              case "popover":
                e.css({ cursor: "pointer", "pointer-events": "auto" })
                  .popover("destroy")
                  .popover({
                    container: "body",
                    content: b,
                    html: !0,
                    placement: "auto top",
                    trigger: "hover click",
                  });
                break;
              case "tooltip":
              default:
                e.css({ cursor: "pointer", "pointer-events": "auto" })
                  .tooltip("destroy")
                  .tooltip({
                    container: "body",
                    html: !0,
                    placement: "auto top",
                    title: b,
                  });
            }
        },
        _destroyTooltip: function (a, b) {
          var c = this._namespace,
            d = a.data(c + ".icon");
          if (d)
            switch (b) {
              case "popover":
                d.css({ cursor: "", "pointer-events": "none" }).popover(
                  "destroy"
                );
                break;
              case "tooltip":
              default:
                d.css({ cursor: "", "pointer-events": "none" }).tooltip(
                  "destroy"
                );
            }
        },
        _hideTooltip: function (a, b) {
          var c = this._namespace,
            d = a.data(c + ".icon");
          if (d)
            switch (b) {
              case "popover":
                d.popover("hide");
                break;
              case "tooltip":
              default:
                d.tooltip("hide");
            }
        },
        _showTooltip: function (a, b) {
          var c = this._namespace,
            d = a.data(c + ".icon");
          if (d)
            switch (b) {
              case "popover":
                d.popover("show");
                break;
              case "tooltip":
              default:
                d.tooltip("show");
            }
        },
      }
    )),
    (a.fn.bootstrapValidator = function (b) {
      var c = arguments;
      return this.each(function () {
        var d = a(this),
          e = d.data("formValidation") || d.data("bootstrapValidator"),
          f = "object" == typeof b && b;
        e ||
          ((e = new FormValidation.Framework.Bootstrap(
            this,
            a.extend(
              {},
              {
                events: {
                  formInit: "init.form.bv",
                  formError: "error.form.bv",
                  formSuccess: "success.form.bv",
                  fieldAdded: "added.field.bv",
                  fieldRemoved: "removed.field.bv",
                  fieldInit: "init.field.bv",
                  fieldError: "error.field.bv",
                  fieldSuccess: "success.field.bv",
                  fieldStatus: "status.field.bv",
                  localeChanged: "changed.locale.bv",
                  validatorError: "error.validator.bv",
                  validatorSuccess: "success.validator.bv",
                },
              },
              f
            ),
            "bv"
          )),
          d
            .addClass("fv-form-bootstrap")
            .data("formValidation", e)
            .data("bootstrapValidator", e)),
          "string" == typeof b &&
            e[b].apply(e, Array.prototype.slice.call(c, 1));
      });
    }),
    (a.fn.bootstrapValidator.Constructor = FormValidation.Framework.Bootstrap);
})(jQuery);

/*----------  CUSTOM JS  ----------*/

/*----------  INTRO ANIMATION  ----------*/

(function () {
  var tl = new TimelineMax({ delay: 0.1 });

  tl.fromTo(
    1,
    { transformOrigin: "50% 50%", scale: 0.8 },
    { opacity: 1, scale: 1, ease: Power4.easeOut, onComplete: animateIcons }
  );
})();

//icons

function animateIcons() {
  var $svgIntro = $("#svg-intro");

  var $icon1 = $("#svg-intro-icon1");

  var $icon2 = $("#svg-intro-icon2");

  var $icon3 = $("#svg-intro-icon3");

  var $icon4 = $("#svg-intro-icon4");

  var $icon5 = $("#svg-intro-icon5");

  var $icon6 = $("#svg-intro-icon6");

  var $shadow = $("#svg-intro-shadow");

  var tl = new TimelineMax();

  tl.fromTo(
    $svgIntro,
    2,
    { transformOrigin: "50% 50%", scale: 1 },
    { scale: 1.1, ease: Sine.easeInOut }
  )

    .to($svgIntro, 0.5, {
      scale: 1,
      ease: Bounce.easeOut,
      onComplete: animateLetters,
    })

    .to($icon1, 2, { x: "400%", opacity: 0.5, ease: Power4.easeOut }, "=-0.3")

    .to($icon2, 1.5, { x: "200%", opacity: 0.7, ease: Power4.easeOut }, "=-2")

    .to($icon3, 1, { x: "100%", opacity: 0.9, ease: Power4.easeOut }, "=-2")

    .to($icon5, 2, { x: "-400%", opacity: 0.5, ease: Power4.easeOut }, "=-2")

    .to($icon6, 1.5, { x: "-200%", opacity: 0.7, ease: Power4.easeOut }, "=-2")

    .to($icon4, 1, { x: "-100%", opacity: 0.9, ease: Power4.easeOut }, "=-2")

    .to($shadow, 3, { opacity: 1 });
}

//letters

function animateLetters() {
  $(".xaviro").each(function (i) {
    var letter = $(this);

    setTimeout(function () {
      letter.removeClass("transparent");
    }, 100 * i);
  });
  $(".com").each(function (i) {
    var letter = $(this);
    setTimeout(function () {
      letter.addClass("transparent");
    }, 100 * i);
  });
}